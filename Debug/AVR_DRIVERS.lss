
AVR_DRIVERS.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000019da  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001c  00800060  000019da  00001a4e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00002304  00000000  00000000  00001a6c  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000f0c  00000000  00000000  00003d70  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ea ed       	ldi	r30, 0xDA	; 218
      68:	f9 e1       	ldi	r31, 0x19	; 25
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	ac 37       	cpi	r26, 0x7C	; 124
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 a8 0c 	call	0x1950	; 0x1950 <main>
      7a:	0c 94 eb 0c 	jmp	0x19d6	; 0x19d6 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <GIE_Enable>:
      82:	df 93       	push	r29
      84:	cf 93       	push	r28
      86:	cd b7       	in	r28, 0x3d	; 61
      88:	de b7       	in	r29, 0x3e	; 62
      8a:	af e5       	ldi	r26, 0x5F	; 95
      8c:	b0 e0       	ldi	r27, 0x00	; 0
      8e:	ef e5       	ldi	r30, 0x5F	; 95
      90:	f0 e0       	ldi	r31, 0x00	; 0
      92:	80 81       	ld	r24, Z
      94:	80 68       	ori	r24, 0x80	; 128
      96:	8c 93       	st	X, r24
      98:	cf 91       	pop	r28
      9a:	df 91       	pop	r29
      9c:	08 95       	ret

0000009e <GIE_Disable>:
  */
void GIE_Enable(){
	SET_BIT(SREG, 7);
}

void GIE_Disable(){
      9e:	df 93       	push	r29
      a0:	cf 93       	push	r28
      a2:	cd b7       	in	r28, 0x3d	; 61
      a4:	de b7       	in	r29, 0x3e	; 62
	CLR_BIT(SREG, 7);
      a6:	af e5       	ldi	r26, 0x5F	; 95
      a8:	b0 e0       	ldi	r27, 0x00	; 0
      aa:	ef e5       	ldi	r30, 0x5F	; 95
      ac:	f0 e0       	ldi	r31, 0x00	; 0
      ae:	80 81       	ld	r24, Z
      b0:	8f 77       	andi	r24, 0x7F	; 127
      b2:	8c 93       	st	X, r24
}
      b4:	cf 91       	pop	r28
      b6:	df 91       	pop	r29
      b8:	08 95       	ret

000000ba <DIO_voidInit>:
#include "DIO_priv.h"



void DIO_voidInit(void)
{
      ba:	df 93       	push	r29
      bc:	cf 93       	push	r28
      be:	cd b7       	in	r28, 0x3d	; 61
      c0:	de b7       	in	r29, 0x3e	; 62
   DDRA = CONC(DIO_PIN_DIR_7 ,DIO_PIN_DIR_6 ,DIO_PIN_DIR_5 ,DIO_PIN_DIR_4 ,DIO_PIN_DIR_3 ,DIO_PIN_DIR_2 ,DIO_PIN_DIR_1 ,DIO_PIN_DIR_0 );
      c2:	ea e3       	ldi	r30, 0x3A	; 58
      c4:	f0 e0       	ldi	r31, 0x00	; 0
      c6:	8f ef       	ldi	r24, 0xFF	; 255
      c8:	80 83       	st	Z, r24
   DDRB = CONC(DIO_PIN_DIR_15,DIO_PIN_DIR_14,DIO_PIN_DIR_13,DIO_PIN_DIR_12,DIO_PIN_DIR_11,DIO_PIN_DIR_10,DIO_PIN_DIR_9 ,DIO_PIN_DIR_8 );
      ca:	e7 e3       	ldi	r30, 0x37	; 55
      cc:	f0 e0       	ldi	r31, 0x00	; 0
      ce:	8f ef       	ldi	r24, 0xFF	; 255
      d0:	80 83       	st	Z, r24
   DDRC = CONC(DIO_PIN_DIR_23,DIO_PIN_DIR_22,DIO_PIN_DIR_21,DIO_PIN_DIR_20,DIO_PIN_DIR_19,DIO_PIN_DIR_18,DIO_PIN_DIR_17,DIO_PIN_DIR_16);
      d2:	e4 e3       	ldi	r30, 0x34	; 52
      d4:	f0 e0       	ldi	r31, 0x00	; 0
      d6:	8f ef       	ldi	r24, 0xFF	; 255
      d8:	80 83       	st	Z, r24
   DDRD = CONC(DIO_PIN_DIR_31,DIO_PIN_DIR_30,DIO_PIN_DIR_29,DIO_PIN_DIR_28,DIO_PIN_DIR_27,DIO_PIN_DIR_26,DIO_PIN_DIR_25,DIO_PIN_DIR_24);
      da:	e1 e3       	ldi	r30, 0x31	; 49
      dc:	f0 e0       	ldi	r31, 0x00	; 0
      de:	8f e0       	ldi	r24, 0x0F	; 15
      e0:	80 83       	st	Z, r24

}
      e2:	cf 91       	pop	r28
      e4:	df 91       	pop	r29
      e6:	08 95       	ret

000000e8 <DIO_InitCertainPort>:

void DIO_InitCertainPort(u8 PORT)
{
      e8:	df 93       	push	r29
      ea:	cf 93       	push	r28
      ec:	0f 92       	push	r0
      ee:	cd b7       	in	r28, 0x3d	; 61
      f0:	de b7       	in	r29, 0x3e	; 62
      f2:	89 83       	std	Y+1, r24	; 0x01
	if(PORT == ODRA){
      f4:	eb e3       	ldi	r30, 0x3B	; 59
      f6:	f0 e0       	ldi	r31, 0x00	; 0
      f8:	90 81       	ld	r25, Z
      fa:	89 81       	ldd	r24, Y+1	; 0x01
      fc:	98 17       	cp	r25, r24
      fe:	29 f4       	brne	.+10     	; 0x10a <DIO_InitCertainPort+0x22>
		DDRA = CONC(DIO_PIN_DIR_7 ,DIO_PIN_DIR_6 ,DIO_PIN_DIR_5 ,DIO_PIN_DIR_4 ,DIO_PIN_DIR_3 ,DIO_PIN_DIR_2 ,DIO_PIN_DIR_1 ,DIO_PIN_DIR_0 );
     100:	ea e3       	ldi	r30, 0x3A	; 58
     102:	f0 e0       	ldi	r31, 0x00	; 0
     104:	8f ef       	ldi	r24, 0xFF	; 255
     106:	80 83       	st	Z, r24
     108:	20 c0       	rjmp	.+64     	; 0x14a <DIO_InitCertainPort+0x62>
	}else if(PORT == ODRB){
     10a:	e8 e3       	ldi	r30, 0x38	; 56
     10c:	f0 e0       	ldi	r31, 0x00	; 0
     10e:	90 81       	ld	r25, Z
     110:	89 81       	ldd	r24, Y+1	; 0x01
     112:	98 17       	cp	r25, r24
     114:	29 f4       	brne	.+10     	; 0x120 <DIO_InitCertainPort+0x38>
		DDRB = CONC(DIO_PIN_DIR_15,DIO_PIN_DIR_14,DIO_PIN_DIR_13,DIO_PIN_DIR_12,DIO_PIN_DIR_11,DIO_PIN_DIR_10,DIO_PIN_DIR_9 ,DIO_PIN_DIR_8 );
     116:	e7 e3       	ldi	r30, 0x37	; 55
     118:	f0 e0       	ldi	r31, 0x00	; 0
     11a:	8f ef       	ldi	r24, 0xFF	; 255
     11c:	80 83       	st	Z, r24
     11e:	15 c0       	rjmp	.+42     	; 0x14a <DIO_InitCertainPort+0x62>
	}else if(PORT == ODRC){
     120:	e5 e3       	ldi	r30, 0x35	; 53
     122:	f0 e0       	ldi	r31, 0x00	; 0
     124:	90 81       	ld	r25, Z
     126:	89 81       	ldd	r24, Y+1	; 0x01
     128:	98 17       	cp	r25, r24
     12a:	29 f4       	brne	.+10     	; 0x136 <DIO_InitCertainPort+0x4e>
		DDRC = CONC(DIO_PIN_DIR_23,DIO_PIN_DIR_22,DIO_PIN_DIR_21,DIO_PIN_DIR_20,DIO_PIN_DIR_19,DIO_PIN_DIR_18,DIO_PIN_DIR_17,DIO_PIN_DIR_16);
     12c:	e4 e3       	ldi	r30, 0x34	; 52
     12e:	f0 e0       	ldi	r31, 0x00	; 0
     130:	8f ef       	ldi	r24, 0xFF	; 255
     132:	80 83       	st	Z, r24
     134:	0a c0       	rjmp	.+20     	; 0x14a <DIO_InitCertainPort+0x62>
	}else if(PORT == ODRD){
     136:	e2 e3       	ldi	r30, 0x32	; 50
     138:	f0 e0       	ldi	r31, 0x00	; 0
     13a:	90 81       	ld	r25, Z
     13c:	89 81       	ldd	r24, Y+1	; 0x01
     13e:	98 17       	cp	r25, r24
     140:	21 f4       	brne	.+8      	; 0x14a <DIO_InitCertainPort+0x62>
		DDRD = CONC(DIO_PIN_DIR_31,DIO_PIN_DIR_30,DIO_PIN_DIR_29,DIO_PIN_DIR_28,DIO_PIN_DIR_27,DIO_PIN_DIR_26,DIO_PIN_DIR_25,DIO_PIN_DIR_24);
     142:	e1 e3       	ldi	r30, 0x31	; 49
     144:	f0 e0       	ldi	r31, 0x00	; 0
     146:	8f e0       	ldi	r24, 0x0F	; 15
     148:	80 83       	st	Z, r24
	}
	return;
}
     14a:	0f 90       	pop	r0
     14c:	cf 91       	pop	r28
     14e:	df 91       	pop	r29
     150:	08 95       	ret

00000152 <DIO_enuWritePin>:



tenuErrorStatus DIO_enuWritePin(u8 u8PinNumCpy,u8 u8PinValueCpy)
{
     152:	df 93       	push	r29
     154:	cf 93       	push	r28
     156:	cd b7       	in	r28, 0x3d	; 61
     158:	de b7       	in	r29, 0x3e	; 62
     15a:	2b 97       	sbiw	r28, 0x0b	; 11
     15c:	0f b6       	in	r0, 0x3f	; 63
     15e:	f8 94       	cli
     160:	de bf       	out	0x3e, r29	; 62
     162:	0f be       	out	0x3f, r0	; 63
     164:	cd bf       	out	0x3d, r28	; 61
     166:	8a 83       	std	Y+2, r24	; 0x02
     168:	6b 83       	std	Y+3, r22	; 0x03

	tenuErrorStatus enuReturnStateLoc = EOK;
     16a:	19 82       	std	Y+1, r1	; 0x01
	if (u8PinNumCpy >= DIO_PIN_NUM_0 && u8PinNumCpy <= DIO_PIN_NUM_7)
     16c:	8a 81       	ldd	r24, Y+2	; 0x02
     16e:	88 30       	cpi	r24, 0x08	; 8
     170:	d8 f5       	brcc	.+118    	; 0x1e8 <DIO_enuWritePin+0x96>
	{
		switch (u8PinValueCpy)
     172:	8b 81       	ldd	r24, Y+3	; 0x03
     174:	28 2f       	mov	r18, r24
     176:	30 e0       	ldi	r19, 0x00	; 0
     178:	3b 87       	std	Y+11, r19	; 0x0b
     17a:	2a 87       	std	Y+10, r18	; 0x0a
     17c:	8a 85       	ldd	r24, Y+10	; 0x0a
     17e:	9b 85       	ldd	r25, Y+11	; 0x0b
     180:	00 97       	sbiw	r24, 0x00	; 0
     182:	31 f0       	breq	.+12     	; 0x190 <DIO_enuWritePin+0x3e>
     184:	2a 85       	ldd	r18, Y+10	; 0x0a
     186:	3b 85       	ldd	r19, Y+11	; 0x0b
     188:	21 30       	cpi	r18, 0x01	; 1
     18a:	31 05       	cpc	r19, r1
     18c:	b1 f0       	breq	.+44     	; 0x1ba <DIO_enuWritePin+0x68>
     18e:	29 c0       	rjmp	.+82     	; 0x1e2 <DIO_enuWritePin+0x90>
		{
			case DIO_LOW :
			 CLR_BIT (ODRA ,  u8PinNumCpy);
     190:	ab e3       	ldi	r26, 0x3B	; 59
     192:	b0 e0       	ldi	r27, 0x00	; 0
     194:	eb e3       	ldi	r30, 0x3B	; 59
     196:	f0 e0       	ldi	r31, 0x00	; 0
     198:	80 81       	ld	r24, Z
     19a:	48 2f       	mov	r20, r24
     19c:	8a 81       	ldd	r24, Y+2	; 0x02
     19e:	28 2f       	mov	r18, r24
     1a0:	30 e0       	ldi	r19, 0x00	; 0
     1a2:	81 e0       	ldi	r24, 0x01	; 1
     1a4:	90 e0       	ldi	r25, 0x00	; 0
     1a6:	02 2e       	mov	r0, r18
     1a8:	02 c0       	rjmp	.+4      	; 0x1ae <DIO_enuWritePin+0x5c>
     1aa:	88 0f       	add	r24, r24
     1ac:	99 1f       	adc	r25, r25
     1ae:	0a 94       	dec	r0
     1b0:	e2 f7       	brpl	.-8      	; 0x1aa <DIO_enuWritePin+0x58>
     1b2:	80 95       	com	r24
     1b4:	84 23       	and	r24, r20
     1b6:	8c 93       	st	X, r24
     1b8:	f8 c0       	rjmp	.+496    	; 0x3aa <DIO_enuWritePin+0x258>
			break;
			case DIO_HIGH :
			 SET_BIT(ODRA , u8PinNumCpy);
     1ba:	ab e3       	ldi	r26, 0x3B	; 59
     1bc:	b0 e0       	ldi	r27, 0x00	; 0
     1be:	eb e3       	ldi	r30, 0x3B	; 59
     1c0:	f0 e0       	ldi	r31, 0x00	; 0
     1c2:	80 81       	ld	r24, Z
     1c4:	48 2f       	mov	r20, r24
     1c6:	8a 81       	ldd	r24, Y+2	; 0x02
     1c8:	28 2f       	mov	r18, r24
     1ca:	30 e0       	ldi	r19, 0x00	; 0
     1cc:	81 e0       	ldi	r24, 0x01	; 1
     1ce:	90 e0       	ldi	r25, 0x00	; 0
     1d0:	02 2e       	mov	r0, r18
     1d2:	02 c0       	rjmp	.+4      	; 0x1d8 <DIO_enuWritePin+0x86>
     1d4:	88 0f       	add	r24, r24
     1d6:	99 1f       	adc	r25, r25
     1d8:	0a 94       	dec	r0
     1da:	e2 f7       	brpl	.-8      	; 0x1d4 <DIO_enuWritePin+0x82>
     1dc:	84 2b       	or	r24, r20
     1de:	8c 93       	st	X, r24
     1e0:	e4 c0       	rjmp	.+456    	; 0x3aa <DIO_enuWritePin+0x258>
			break ;
			default :
			enuReturnStateLoc = PARAM_OUT_RANGE ;
     1e2:	81 e0       	ldi	r24, 0x01	; 1
     1e4:	89 83       	std	Y+1, r24	; 0x01
     1e6:	e1 c0       	rjmp	.+450    	; 0x3aa <DIO_enuWritePin+0x258>
		}
	}
	else if (u8PinNumCpy >= DIO_PIN_NUM_8 && u8PinNumCpy <= DIO_PIN_NUM_15)
     1e8:	8a 81       	ldd	r24, Y+2	; 0x02
     1ea:	88 30       	cpi	r24, 0x08	; 8
     1ec:	08 f4       	brcc	.+2      	; 0x1f0 <DIO_enuWritePin+0x9e>
     1ee:	45 c0       	rjmp	.+138    	; 0x27a <DIO_enuWritePin+0x128>
     1f0:	8a 81       	ldd	r24, Y+2	; 0x02
     1f2:	80 31       	cpi	r24, 0x10	; 16
     1f4:	08 f0       	brcs	.+2      	; 0x1f8 <DIO_enuWritePin+0xa6>
     1f6:	41 c0       	rjmp	.+130    	; 0x27a <DIO_enuWritePin+0x128>
	{
		switch (u8PinValueCpy)
     1f8:	8b 81       	ldd	r24, Y+3	; 0x03
     1fa:	28 2f       	mov	r18, r24
     1fc:	30 e0       	ldi	r19, 0x00	; 0
     1fe:	39 87       	std	Y+9, r19	; 0x09
     200:	28 87       	std	Y+8, r18	; 0x08
     202:	88 85       	ldd	r24, Y+8	; 0x08
     204:	99 85       	ldd	r25, Y+9	; 0x09
     206:	00 97       	sbiw	r24, 0x00	; 0
     208:	31 f0       	breq	.+12     	; 0x216 <DIO_enuWritePin+0xc4>
     20a:	28 85       	ldd	r18, Y+8	; 0x08
     20c:	39 85       	ldd	r19, Y+9	; 0x09
     20e:	21 30       	cpi	r18, 0x01	; 1
     210:	31 05       	cpc	r19, r1
     212:	c9 f0       	breq	.+50     	; 0x246 <DIO_enuWritePin+0xf4>
     214:	2f c0       	rjmp	.+94     	; 0x274 <DIO_enuWritePin+0x122>
		{
			case DIO_LOW :
			 CLR_BIT (ODRB ,  u8PinNumCpy%8); //0 1 2 3 4 5 6 7 => 8%8 = 0, 9%8 = 1, 10%8 = 2, 11%8 = 3, 12%8 = 4, 13%8 = 5, 14%8 = 6, 15%8 = 7
     216:	a8 e3       	ldi	r26, 0x38	; 56
     218:	b0 e0       	ldi	r27, 0x00	; 0
     21a:	e8 e3       	ldi	r30, 0x38	; 56
     21c:	f0 e0       	ldi	r31, 0x00	; 0
     21e:	80 81       	ld	r24, Z
     220:	48 2f       	mov	r20, r24
     222:	8a 81       	ldd	r24, Y+2	; 0x02
     224:	88 2f       	mov	r24, r24
     226:	90 e0       	ldi	r25, 0x00	; 0
     228:	9c 01       	movw	r18, r24
     22a:	27 70       	andi	r18, 0x07	; 7
     22c:	30 70       	andi	r19, 0x00	; 0
     22e:	81 e0       	ldi	r24, 0x01	; 1
     230:	90 e0       	ldi	r25, 0x00	; 0
     232:	02 2e       	mov	r0, r18
     234:	02 c0       	rjmp	.+4      	; 0x23a <DIO_enuWritePin+0xe8>
     236:	88 0f       	add	r24, r24
     238:	99 1f       	adc	r25, r25
     23a:	0a 94       	dec	r0
     23c:	e2 f7       	brpl	.-8      	; 0x236 <DIO_enuWritePin+0xe4>
     23e:	80 95       	com	r24
     240:	84 23       	and	r24, r20
     242:	8c 93       	st	X, r24
     244:	b2 c0       	rjmp	.+356    	; 0x3aa <DIO_enuWritePin+0x258>
			break;
			case DIO_HIGH :
			 SET_BIT(ODRB , u8PinNumCpy%8);
     246:	a8 e3       	ldi	r26, 0x38	; 56
     248:	b0 e0       	ldi	r27, 0x00	; 0
     24a:	e8 e3       	ldi	r30, 0x38	; 56
     24c:	f0 e0       	ldi	r31, 0x00	; 0
     24e:	80 81       	ld	r24, Z
     250:	48 2f       	mov	r20, r24
     252:	8a 81       	ldd	r24, Y+2	; 0x02
     254:	88 2f       	mov	r24, r24
     256:	90 e0       	ldi	r25, 0x00	; 0
     258:	9c 01       	movw	r18, r24
     25a:	27 70       	andi	r18, 0x07	; 7
     25c:	30 70       	andi	r19, 0x00	; 0
     25e:	81 e0       	ldi	r24, 0x01	; 1
     260:	90 e0       	ldi	r25, 0x00	; 0
     262:	02 2e       	mov	r0, r18
     264:	02 c0       	rjmp	.+4      	; 0x26a <DIO_enuWritePin+0x118>
     266:	88 0f       	add	r24, r24
     268:	99 1f       	adc	r25, r25
     26a:	0a 94       	dec	r0
     26c:	e2 f7       	brpl	.-8      	; 0x266 <DIO_enuWritePin+0x114>
     26e:	84 2b       	or	r24, r20
     270:	8c 93       	st	X, r24
     272:	9b c0       	rjmp	.+310    	; 0x3aa <DIO_enuWritePin+0x258>
			break ;
			default :
			enuReturnStateLoc = PARAM_OUT_RANGE ;
     274:	81 e0       	ldi	r24, 0x01	; 1
     276:	89 83       	std	Y+1, r24	; 0x01
     278:	98 c0       	rjmp	.+304    	; 0x3aa <DIO_enuWritePin+0x258>
		}
	}
	else if (u8PinNumCpy >= DIO_PIN_NUM_16 && u8PinNumCpy <= DIO_PIN_NUM_23)
     27a:	8a 81       	ldd	r24, Y+2	; 0x02
     27c:	80 31       	cpi	r24, 0x10	; 16
     27e:	08 f4       	brcc	.+2      	; 0x282 <DIO_enuWritePin+0x130>
     280:	45 c0       	rjmp	.+138    	; 0x30c <DIO_enuWritePin+0x1ba>
     282:	8a 81       	ldd	r24, Y+2	; 0x02
     284:	88 31       	cpi	r24, 0x18	; 24
     286:	08 f0       	brcs	.+2      	; 0x28a <DIO_enuWritePin+0x138>
     288:	41 c0       	rjmp	.+130    	; 0x30c <DIO_enuWritePin+0x1ba>
	{
		switch (u8PinValueCpy)
     28a:	8b 81       	ldd	r24, Y+3	; 0x03
     28c:	28 2f       	mov	r18, r24
     28e:	30 e0       	ldi	r19, 0x00	; 0
     290:	3f 83       	std	Y+7, r19	; 0x07
     292:	2e 83       	std	Y+6, r18	; 0x06
     294:	8e 81       	ldd	r24, Y+6	; 0x06
     296:	9f 81       	ldd	r25, Y+7	; 0x07
     298:	00 97       	sbiw	r24, 0x00	; 0
     29a:	31 f0       	breq	.+12     	; 0x2a8 <DIO_enuWritePin+0x156>
     29c:	2e 81       	ldd	r18, Y+6	; 0x06
     29e:	3f 81       	ldd	r19, Y+7	; 0x07
     2a0:	21 30       	cpi	r18, 0x01	; 1
     2a2:	31 05       	cpc	r19, r1
     2a4:	c9 f0       	breq	.+50     	; 0x2d8 <DIO_enuWritePin+0x186>
     2a6:	2f c0       	rjmp	.+94     	; 0x306 <DIO_enuWritePin+0x1b4>
		{
			case DIO_LOW :
			 CLR_BIT (ODRC ,  u8PinNumCpy%16);
     2a8:	a5 e3       	ldi	r26, 0x35	; 53
     2aa:	b0 e0       	ldi	r27, 0x00	; 0
     2ac:	e5 e3       	ldi	r30, 0x35	; 53
     2ae:	f0 e0       	ldi	r31, 0x00	; 0
     2b0:	80 81       	ld	r24, Z
     2b2:	48 2f       	mov	r20, r24
     2b4:	8a 81       	ldd	r24, Y+2	; 0x02
     2b6:	88 2f       	mov	r24, r24
     2b8:	90 e0       	ldi	r25, 0x00	; 0
     2ba:	9c 01       	movw	r18, r24
     2bc:	2f 70       	andi	r18, 0x0F	; 15
     2be:	30 70       	andi	r19, 0x00	; 0
     2c0:	81 e0       	ldi	r24, 0x01	; 1
     2c2:	90 e0       	ldi	r25, 0x00	; 0
     2c4:	02 2e       	mov	r0, r18
     2c6:	02 c0       	rjmp	.+4      	; 0x2cc <DIO_enuWritePin+0x17a>
     2c8:	88 0f       	add	r24, r24
     2ca:	99 1f       	adc	r25, r25
     2cc:	0a 94       	dec	r0
     2ce:	e2 f7       	brpl	.-8      	; 0x2c8 <DIO_enuWritePin+0x176>
     2d0:	80 95       	com	r24
     2d2:	84 23       	and	r24, r20
     2d4:	8c 93       	st	X, r24
     2d6:	69 c0       	rjmp	.+210    	; 0x3aa <DIO_enuWritePin+0x258>
			break;
			case DIO_HIGH :
			 SET_BIT(ODRC , u8PinNumCpy%16);
     2d8:	a5 e3       	ldi	r26, 0x35	; 53
     2da:	b0 e0       	ldi	r27, 0x00	; 0
     2dc:	e5 e3       	ldi	r30, 0x35	; 53
     2de:	f0 e0       	ldi	r31, 0x00	; 0
     2e0:	80 81       	ld	r24, Z
     2e2:	48 2f       	mov	r20, r24
     2e4:	8a 81       	ldd	r24, Y+2	; 0x02
     2e6:	88 2f       	mov	r24, r24
     2e8:	90 e0       	ldi	r25, 0x00	; 0
     2ea:	9c 01       	movw	r18, r24
     2ec:	2f 70       	andi	r18, 0x0F	; 15
     2ee:	30 70       	andi	r19, 0x00	; 0
     2f0:	81 e0       	ldi	r24, 0x01	; 1
     2f2:	90 e0       	ldi	r25, 0x00	; 0
     2f4:	02 2e       	mov	r0, r18
     2f6:	02 c0       	rjmp	.+4      	; 0x2fc <DIO_enuWritePin+0x1aa>
     2f8:	88 0f       	add	r24, r24
     2fa:	99 1f       	adc	r25, r25
     2fc:	0a 94       	dec	r0
     2fe:	e2 f7       	brpl	.-8      	; 0x2f8 <DIO_enuWritePin+0x1a6>
     300:	84 2b       	or	r24, r20
     302:	8c 93       	st	X, r24
     304:	52 c0       	rjmp	.+164    	; 0x3aa <DIO_enuWritePin+0x258>
			break ;
			default :
			enuReturnStateLoc = PARAM_OUT_RANGE ;
     306:	81 e0       	ldi	r24, 0x01	; 1
     308:	89 83       	std	Y+1, r24	; 0x01
     30a:	4f c0       	rjmp	.+158    	; 0x3aa <DIO_enuWritePin+0x258>
		}
	}
	else if (u8PinNumCpy >= DIO_PIN_NUM_24 && u8PinNumCpy <= DIO_PIN_NUM_31)
     30c:	8a 81       	ldd	r24, Y+2	; 0x02
     30e:	88 31       	cpi	r24, 0x18	; 24
     310:	08 f4       	brcc	.+2      	; 0x314 <DIO_enuWritePin+0x1c2>
     312:	49 c0       	rjmp	.+146    	; 0x3a6 <DIO_enuWritePin+0x254>
     314:	8a 81       	ldd	r24, Y+2	; 0x02
     316:	80 32       	cpi	r24, 0x20	; 32
     318:	08 f0       	brcs	.+2      	; 0x31c <DIO_enuWritePin+0x1ca>
     31a:	45 c0       	rjmp	.+138    	; 0x3a6 <DIO_enuWritePin+0x254>
	{
		switch (u8PinValueCpy)
     31c:	8b 81       	ldd	r24, Y+3	; 0x03
     31e:	28 2f       	mov	r18, r24
     320:	30 e0       	ldi	r19, 0x00	; 0
     322:	3d 83       	std	Y+5, r19	; 0x05
     324:	2c 83       	std	Y+4, r18	; 0x04
     326:	8c 81       	ldd	r24, Y+4	; 0x04
     328:	9d 81       	ldd	r25, Y+5	; 0x05
     32a:	00 97       	sbiw	r24, 0x00	; 0
     32c:	31 f0       	breq	.+12     	; 0x33a <DIO_enuWritePin+0x1e8>
     32e:	2c 81       	ldd	r18, Y+4	; 0x04
     330:	3d 81       	ldd	r19, Y+5	; 0x05
     332:	21 30       	cpi	r18, 0x01	; 1
     334:	31 05       	cpc	r19, r1
     336:	d9 f0       	breq	.+54     	; 0x36e <DIO_enuWritePin+0x21c>
     338:	33 c0       	rjmp	.+102    	; 0x3a0 <DIO_enuWritePin+0x24e>
		{
			case DIO_LOW :
			 CLR_BIT (ODRD ,  u8PinNumCpy%24);
     33a:	a2 e3       	ldi	r26, 0x32	; 50
     33c:	b0 e0       	ldi	r27, 0x00	; 0
     33e:	e2 e3       	ldi	r30, 0x32	; 50
     340:	f0 e0       	ldi	r31, 0x00	; 0
     342:	80 81       	ld	r24, Z
     344:	48 2f       	mov	r20, r24
     346:	8a 81       	ldd	r24, Y+2	; 0x02
     348:	98 e1       	ldi	r25, 0x18	; 24
     34a:	69 2f       	mov	r22, r25
     34c:	0e 94 df 0c 	call	0x19be	; 0x19be <__udivmodqi4>
     350:	89 2f       	mov	r24, r25
     352:	28 2f       	mov	r18, r24
     354:	30 e0       	ldi	r19, 0x00	; 0
     356:	81 e0       	ldi	r24, 0x01	; 1
     358:	90 e0       	ldi	r25, 0x00	; 0
     35a:	02 2e       	mov	r0, r18
     35c:	02 c0       	rjmp	.+4      	; 0x362 <DIO_enuWritePin+0x210>
     35e:	88 0f       	add	r24, r24
     360:	99 1f       	adc	r25, r25
     362:	0a 94       	dec	r0
     364:	e2 f7       	brpl	.-8      	; 0x35e <DIO_enuWritePin+0x20c>
     366:	80 95       	com	r24
     368:	84 23       	and	r24, r20
     36a:	8c 93       	st	X, r24
     36c:	1e c0       	rjmp	.+60     	; 0x3aa <DIO_enuWritePin+0x258>
			break;
			case DIO_HIGH :
			 SET_BIT(ODRD , u8PinNumCpy%24);
     36e:	a2 e3       	ldi	r26, 0x32	; 50
     370:	b0 e0       	ldi	r27, 0x00	; 0
     372:	e2 e3       	ldi	r30, 0x32	; 50
     374:	f0 e0       	ldi	r31, 0x00	; 0
     376:	80 81       	ld	r24, Z
     378:	48 2f       	mov	r20, r24
     37a:	8a 81       	ldd	r24, Y+2	; 0x02
     37c:	98 e1       	ldi	r25, 0x18	; 24
     37e:	69 2f       	mov	r22, r25
     380:	0e 94 df 0c 	call	0x19be	; 0x19be <__udivmodqi4>
     384:	89 2f       	mov	r24, r25
     386:	28 2f       	mov	r18, r24
     388:	30 e0       	ldi	r19, 0x00	; 0
     38a:	81 e0       	ldi	r24, 0x01	; 1
     38c:	90 e0       	ldi	r25, 0x00	; 0
     38e:	02 2e       	mov	r0, r18
     390:	02 c0       	rjmp	.+4      	; 0x396 <DIO_enuWritePin+0x244>
     392:	88 0f       	add	r24, r24
     394:	99 1f       	adc	r25, r25
     396:	0a 94       	dec	r0
     398:	e2 f7       	brpl	.-8      	; 0x392 <DIO_enuWritePin+0x240>
     39a:	84 2b       	or	r24, r20
     39c:	8c 93       	st	X, r24
     39e:	05 c0       	rjmp	.+10     	; 0x3aa <DIO_enuWritePin+0x258>
			break ;
			default :
			enuReturnStateLoc = PARAM_OUT_RANGE ;
     3a0:	81 e0       	ldi	r24, 0x01	; 1
     3a2:	89 83       	std	Y+1, r24	; 0x01
     3a4:	02 c0       	rjmp	.+4      	; 0x3aa <DIO_enuWritePin+0x258>
		}
	}
	else
	{
		enuReturnStateLoc = PARAM_OUT_RANGE ;
     3a6:	81 e0       	ldi	r24, 0x01	; 1
     3a8:	89 83       	std	Y+1, r24	; 0x01
	}

	return enuReturnStateLoc ;
     3aa:	89 81       	ldd	r24, Y+1	; 0x01

}
     3ac:	2b 96       	adiw	r28, 0x0b	; 11
     3ae:	0f b6       	in	r0, 0x3f	; 63
     3b0:	f8 94       	cli
     3b2:	de bf       	out	0x3e, r29	; 62
     3b4:	0f be       	out	0x3f, r0	; 63
     3b6:	cd bf       	out	0x3d, r28	; 61
     3b8:	cf 91       	pop	r28
     3ba:	df 91       	pop	r29
     3bc:	08 95       	ret

000003be <DIO_enuReadPin>:
//#define GET_BIT(byte,pos) ( (byte >> pos) & 1 )
//4 => 0100 
//GET_BIT(4, 1)     0100 >> 1 = 00010 & 0001 = 0

tenuErrorStatus DIO_enuReadPin(u8 u8PinNumCpy ,u8 *pu8PinValueCpy )
{
     3be:	df 93       	push	r29
     3c0:	cf 93       	push	r28
     3c2:	00 d0       	rcall	.+0      	; 0x3c4 <DIO_enuReadPin+0x6>
     3c4:	00 d0       	rcall	.+0      	; 0x3c6 <DIO_enuReadPin+0x8>
     3c6:	cd b7       	in	r28, 0x3d	; 61
     3c8:	de b7       	in	r29, 0x3e	; 62
     3ca:	8a 83       	std	Y+2, r24	; 0x02
     3cc:	7c 83       	std	Y+4, r23	; 0x04
     3ce:	6b 83       	std	Y+3, r22	; 0x03
	tenuErrorStatus  enuReturnStateLoc = EOK;
     3d0:	19 82       	std	Y+1, r1	; 0x01

	if (pu8PinValueCpy != NULL)
     3d2:	8b 81       	ldd	r24, Y+3	; 0x03
     3d4:	9c 81       	ldd	r25, Y+4	; 0x04
     3d6:	00 97       	sbiw	r24, 0x00	; 0
     3d8:	09 f4       	brne	.+2      	; 0x3dc <DIO_enuReadPin+0x1e>
     3da:	71 c0       	rjmp	.+226    	; 0x4be <DIO_enuReadPin+0x100>
	{
		//IDR
		if (u8PinNumCpy >= DIO_PIN_NUM_0 && u8PinNumCpy <= DIO_PIN_NUM_7)
     3dc:	8a 81       	ldd	r24, Y+2	; 0x02
     3de:	88 30       	cpi	r24, 0x08	; 8
     3e0:	a0 f4       	brcc	.+40     	; 0x40a <DIO_enuReadPin+0x4c>
		{
			*pu8PinValueCpy  = GET_BIT(IDRA , u8PinNumCpy);
     3e2:	e9 e3       	ldi	r30, 0x39	; 57
     3e4:	f0 e0       	ldi	r31, 0x00	; 0
     3e6:	80 81       	ld	r24, Z
     3e8:	28 2f       	mov	r18, r24
     3ea:	30 e0       	ldi	r19, 0x00	; 0
     3ec:	8a 81       	ldd	r24, Y+2	; 0x02
     3ee:	88 2f       	mov	r24, r24
     3f0:	90 e0       	ldi	r25, 0x00	; 0
     3f2:	a9 01       	movw	r20, r18
     3f4:	02 c0       	rjmp	.+4      	; 0x3fa <DIO_enuReadPin+0x3c>
     3f6:	55 95       	asr	r21
     3f8:	47 95       	ror	r20
     3fa:	8a 95       	dec	r24
     3fc:	e2 f7       	brpl	.-8      	; 0x3f6 <DIO_enuReadPin+0x38>
     3fe:	ca 01       	movw	r24, r20
     400:	81 70       	andi	r24, 0x01	; 1
     402:	eb 81       	ldd	r30, Y+3	; 0x03
     404:	fc 81       	ldd	r31, Y+4	; 0x04
     406:	80 83       	st	Z, r24
     408:	5c c0       	rjmp	.+184    	; 0x4c2 <DIO_enuReadPin+0x104>
		}
		else if (u8PinNumCpy >= DIO_PIN_NUM_8 && u8PinNumCpy <= DIO_PIN_NUM_15)
     40a:	8a 81       	ldd	r24, Y+2	; 0x02
     40c:	88 30       	cpi	r24, 0x08	; 8
     40e:	c8 f0       	brcs	.+50     	; 0x442 <DIO_enuReadPin+0x84>
     410:	8a 81       	ldd	r24, Y+2	; 0x02
     412:	80 31       	cpi	r24, 0x10	; 16
     414:	b0 f4       	brcc	.+44     	; 0x442 <DIO_enuReadPin+0x84>
		{
			*pu8PinValueCpy  = GET_BIT(IDRB , u8PinNumCpy%8);
     416:	e6 e3       	ldi	r30, 0x36	; 54
     418:	f0 e0       	ldi	r31, 0x00	; 0
     41a:	80 81       	ld	r24, Z
     41c:	28 2f       	mov	r18, r24
     41e:	30 e0       	ldi	r19, 0x00	; 0
     420:	8a 81       	ldd	r24, Y+2	; 0x02
     422:	88 2f       	mov	r24, r24
     424:	90 e0       	ldi	r25, 0x00	; 0
     426:	87 70       	andi	r24, 0x07	; 7
     428:	90 70       	andi	r25, 0x00	; 0
     42a:	a9 01       	movw	r20, r18
     42c:	02 c0       	rjmp	.+4      	; 0x432 <DIO_enuReadPin+0x74>
     42e:	55 95       	asr	r21
     430:	47 95       	ror	r20
     432:	8a 95       	dec	r24
     434:	e2 f7       	brpl	.-8      	; 0x42e <DIO_enuReadPin+0x70>
     436:	ca 01       	movw	r24, r20
     438:	81 70       	andi	r24, 0x01	; 1
     43a:	eb 81       	ldd	r30, Y+3	; 0x03
     43c:	fc 81       	ldd	r31, Y+4	; 0x04
     43e:	80 83       	st	Z, r24
     440:	40 c0       	rjmp	.+128    	; 0x4c2 <DIO_enuReadPin+0x104>
		}
		else if (u8PinNumCpy >= DIO_PIN_NUM_16 && u8PinNumCpy <= DIO_PIN_NUM_23)
     442:	8a 81       	ldd	r24, Y+2	; 0x02
     444:	80 31       	cpi	r24, 0x10	; 16
     446:	c8 f0       	brcs	.+50     	; 0x47a <DIO_enuReadPin+0xbc>
     448:	8a 81       	ldd	r24, Y+2	; 0x02
     44a:	88 31       	cpi	r24, 0x18	; 24
     44c:	b0 f4       	brcc	.+44     	; 0x47a <DIO_enuReadPin+0xbc>
		{
			*pu8PinValueCpy  = GET_BIT(IDRC , u8PinNumCpy%16);
     44e:	e3 e3       	ldi	r30, 0x33	; 51
     450:	f0 e0       	ldi	r31, 0x00	; 0
     452:	80 81       	ld	r24, Z
     454:	28 2f       	mov	r18, r24
     456:	30 e0       	ldi	r19, 0x00	; 0
     458:	8a 81       	ldd	r24, Y+2	; 0x02
     45a:	88 2f       	mov	r24, r24
     45c:	90 e0       	ldi	r25, 0x00	; 0
     45e:	8f 70       	andi	r24, 0x0F	; 15
     460:	90 70       	andi	r25, 0x00	; 0
     462:	a9 01       	movw	r20, r18
     464:	02 c0       	rjmp	.+4      	; 0x46a <DIO_enuReadPin+0xac>
     466:	55 95       	asr	r21
     468:	47 95       	ror	r20
     46a:	8a 95       	dec	r24
     46c:	e2 f7       	brpl	.-8      	; 0x466 <DIO_enuReadPin+0xa8>
     46e:	ca 01       	movw	r24, r20
     470:	81 70       	andi	r24, 0x01	; 1
     472:	eb 81       	ldd	r30, Y+3	; 0x03
     474:	fc 81       	ldd	r31, Y+4	; 0x04
     476:	80 83       	st	Z, r24
     478:	24 c0       	rjmp	.+72     	; 0x4c2 <DIO_enuReadPin+0x104>
		}
		else if (u8PinNumCpy >= DIO_PIN_NUM_24 && u8PinNumCpy <= DIO_PIN_NUM_31)
     47a:	8a 81       	ldd	r24, Y+2	; 0x02
     47c:	88 31       	cpi	r24, 0x18	; 24
     47e:	e0 f0       	brcs	.+56     	; 0x4b8 <DIO_enuReadPin+0xfa>
     480:	8a 81       	ldd	r24, Y+2	; 0x02
     482:	80 32       	cpi	r24, 0x20	; 32
     484:	c8 f4       	brcc	.+50     	; 0x4b8 <DIO_enuReadPin+0xfa>
		{
			*pu8PinValueCpy  = GET_BIT(IDRD , u8PinNumCpy%24);
     486:	e0 e3       	ldi	r30, 0x30	; 48
     488:	f0 e0       	ldi	r31, 0x00	; 0
     48a:	80 81       	ld	r24, Z
     48c:	28 2f       	mov	r18, r24
     48e:	30 e0       	ldi	r19, 0x00	; 0
     490:	8a 81       	ldd	r24, Y+2	; 0x02
     492:	98 e1       	ldi	r25, 0x18	; 24
     494:	69 2f       	mov	r22, r25
     496:	0e 94 df 0c 	call	0x19be	; 0x19be <__udivmodqi4>
     49a:	89 2f       	mov	r24, r25
     49c:	88 2f       	mov	r24, r24
     49e:	90 e0       	ldi	r25, 0x00	; 0
     4a0:	a9 01       	movw	r20, r18
     4a2:	02 c0       	rjmp	.+4      	; 0x4a8 <DIO_enuReadPin+0xea>
     4a4:	55 95       	asr	r21
     4a6:	47 95       	ror	r20
     4a8:	8a 95       	dec	r24
     4aa:	e2 f7       	brpl	.-8      	; 0x4a4 <DIO_enuReadPin+0xe6>
     4ac:	ca 01       	movw	r24, r20
     4ae:	81 70       	andi	r24, 0x01	; 1
     4b0:	eb 81       	ldd	r30, Y+3	; 0x03
     4b2:	fc 81       	ldd	r31, Y+4	; 0x04
     4b4:	80 83       	st	Z, r24
     4b6:	05 c0       	rjmp	.+10     	; 0x4c2 <DIO_enuReadPin+0x104>
		}
		else
		{
			enuReturnStateLoc = PARAM_OUT_RANGE ;
     4b8:	81 e0       	ldi	r24, 0x01	; 1
     4ba:	89 83       	std	Y+1, r24	; 0x01
     4bc:	02 c0       	rjmp	.+4      	; 0x4c2 <DIO_enuReadPin+0x104>
		}
	}
	else
	{
		enuReturnStateLoc = PARAM_NULL_PTR ;
     4be:	82 e0       	ldi	r24, 0x02	; 2
     4c0:	89 83       	std	Y+1, r24	; 0x01
	}

	return enuReturnStateLoc ;
     4c2:	89 81       	ldd	r24, Y+1	; 0x01

}
     4c4:	0f 90       	pop	r0
     4c6:	0f 90       	pop	r0
     4c8:	0f 90       	pop	r0
     4ca:	0f 90       	pop	r0
     4cc:	cf 91       	pop	r28
     4ce:	df 91       	pop	r29
     4d0:	08 95       	ret

000004d2 <DIO_enuStatePullup>:

tenuErrorStatus DIO_enuStatePullup(u8 u8PinNumCpy, u8 u8StateCpy)
{
     4d2:	df 93       	push	r29
     4d4:	cf 93       	push	r28
     4d6:	00 d0       	rcall	.+0      	; 0x4d8 <DIO_enuStatePullup+0x6>
     4d8:	cd b7       	in	r28, 0x3d	; 61
     4da:	de b7       	in	r29, 0x3e	; 62
     4dc:	89 83       	std	Y+1, r24	; 0x01
     4de:	6a 83       	std	Y+2, r22	; 0x02
   return DIO_enuWritePin(u8PinNumCpy,u8StateCpy);
     4e0:	89 81       	ldd	r24, Y+1	; 0x01
     4e2:	6a 81       	ldd	r22, Y+2	; 0x02
     4e4:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
}
     4e8:	0f 90       	pop	r0
     4ea:	0f 90       	pop	r0
     4ec:	cf 91       	pop	r28
     4ee:	df 91       	pop	r29
     4f0:	08 95       	ret

000004f2 <DIO_enuWriteGroup>:



tenuErrorStatus DIO_enuWriteGroup(u8 *pau8PinNumCpy,u8 * pau8PinValueCpy , u8 u8SizeCpy)
{
     4f2:	df 93       	push	r29
     4f4:	cf 93       	push	r28
     4f6:	cd b7       	in	r28, 0x3d	; 61
     4f8:	de b7       	in	r29, 0x3e	; 62
     4fa:	27 97       	sbiw	r28, 0x07	; 7
     4fc:	0f b6       	in	r0, 0x3f	; 63
     4fe:	f8 94       	cli
     500:	de bf       	out	0x3e, r29	; 62
     502:	0f be       	out	0x3f, r0	; 63
     504:	cd bf       	out	0x3d, r28	; 61
     506:	9c 83       	std	Y+4, r25	; 0x04
     508:	8b 83       	std	Y+3, r24	; 0x03
     50a:	7e 83       	std	Y+6, r23	; 0x06
     50c:	6d 83       	std	Y+5, r22	; 0x05
     50e:	4f 83       	std	Y+7, r20	; 0x07
	tenuErrorStatus enuReturnStateLoc = EOK;
     510:	1a 82       	std	Y+2, r1	; 0x02
	u8 u8CntrLoc;
	for (u8CntrLoc = 0 ; u8CntrLoc < u8SizeCpy ; u8CntrLoc++)
     512:	19 82       	std	Y+1, r1	; 0x01
     514:	1d c0       	rjmp	.+58     	; 0x550 <DIO_enuWriteGroup+0x5e>
	{
		enuReturnStateLoc = DIO_enuWritePin(pau8PinNumCpy[u8CntrLoc],pau8PinValueCpy[u8CntrLoc]);
     516:	89 81       	ldd	r24, Y+1	; 0x01
     518:	28 2f       	mov	r18, r24
     51a:	30 e0       	ldi	r19, 0x00	; 0
     51c:	8b 81       	ldd	r24, Y+3	; 0x03
     51e:	9c 81       	ldd	r25, Y+4	; 0x04
     520:	fc 01       	movw	r30, r24
     522:	e2 0f       	add	r30, r18
     524:	f3 1f       	adc	r31, r19
     526:	40 81       	ld	r20, Z
     528:	89 81       	ldd	r24, Y+1	; 0x01
     52a:	28 2f       	mov	r18, r24
     52c:	30 e0       	ldi	r19, 0x00	; 0
     52e:	8d 81       	ldd	r24, Y+5	; 0x05
     530:	9e 81       	ldd	r25, Y+6	; 0x06
     532:	fc 01       	movw	r30, r24
     534:	e2 0f       	add	r30, r18
     536:	f3 1f       	adc	r31, r19
     538:	90 81       	ld	r25, Z
     53a:	84 2f       	mov	r24, r20
     53c:	69 2f       	mov	r22, r25
     53e:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
     542:	8a 83       	std	Y+2, r24	; 0x02
		if (enuReturnStateLoc != EOK)
     544:	8a 81       	ldd	r24, Y+2	; 0x02
     546:	88 23       	and	r24, r24
     548:	39 f4       	brne	.+14     	; 0x558 <DIO_enuWriteGroup+0x66>

tenuErrorStatus DIO_enuWriteGroup(u8 *pau8PinNumCpy,u8 * pau8PinValueCpy , u8 u8SizeCpy)
{
	tenuErrorStatus enuReturnStateLoc = EOK;
	u8 u8CntrLoc;
	for (u8CntrLoc = 0 ; u8CntrLoc < u8SizeCpy ; u8CntrLoc++)
     54a:	89 81       	ldd	r24, Y+1	; 0x01
     54c:	8f 5f       	subi	r24, 0xFF	; 255
     54e:	89 83       	std	Y+1, r24	; 0x01
     550:	99 81       	ldd	r25, Y+1	; 0x01
     552:	8f 81       	ldd	r24, Y+7	; 0x07
     554:	98 17       	cp	r25, r24
     556:	f8 f2       	brcs	.-66     	; 0x516 <DIO_enuWriteGroup+0x24>
		if (enuReturnStateLoc != EOK)
		{
			break;
		}
	}
	return enuReturnStateLoc;
     558:	8a 81       	ldd	r24, Y+2	; 0x02
}
     55a:	27 96       	adiw	r28, 0x07	; 7
     55c:	0f b6       	in	r0, 0x3f	; 63
     55e:	f8 94       	cli
     560:	de bf       	out	0x3e, r29	; 62
     562:	0f be       	out	0x3f, r0	; 63
     564:	cd bf       	out	0x3d, r28	; 61
     566:	cf 91       	pop	r28
     568:	df 91       	pop	r29
     56a:	08 95       	ret

0000056c <STPR_FullStep_Right>:
#include "STPR_cfg.h"
#include "STPR_priv.h"


void STPR_FullStep_Right(u8 speed)
{
     56c:	df 93       	push	r29
     56e:	cf 93       	push	r28
     570:	cd b7       	in	r28, 0x3d	; 61
     572:	de b7       	in	r29, 0x3e	; 62
     574:	a1 97       	sbiw	r28, 0x21	; 33
     576:	0f b6       	in	r0, 0x3f	; 63
     578:	f8 94       	cli
     57a:	de bf       	out	0x3e, r29	; 62
     57c:	0f be       	out	0x3f, r0	; 63
     57e:	cd bf       	out	0x3d, r28	; 61
     580:	89 a3       	std	Y+33, r24	; 0x21
	//full step
	DIO_enuWritePin(STPR_COIL_0,DIO_HIGH); //activate coil 1
     582:	88 e1       	ldi	r24, 0x18	; 24
     584:	61 e0       	ldi	r22, 0x01	; 1
     586:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	Delay_ms(speed);
     58a:	89 a1       	ldd	r24, Y+33	; 0x21
     58c:	86 95       	lsr	r24
     58e:	86 95       	lsr	r24
     590:	86 95       	lsr	r24
     592:	88 2f       	mov	r24, r24
     594:	90 e0       	ldi	r25, 0x00	; 0
     596:	a0 e0       	ldi	r26, 0x00	; 0
     598:	b0 e0       	ldi	r27, 0x00	; 0
     59a:	8d 8f       	std	Y+29, r24	; 0x1d
     59c:	9e 8f       	std	Y+30, r25	; 0x1e
     59e:	af 8f       	std	Y+31, r26	; 0x1f
     5a0:	b8 a3       	std	Y+32, r27	; 0x20
     5a2:	28 c0       	rjmp	.+80     	; 0x5f4 <STPR_FullStep_Right+0x88>
     5a4:	80 ed       	ldi	r24, 0xD0	; 208
     5a6:	97 e0       	ldi	r25, 0x07	; 7
     5a8:	a0 e0       	ldi	r26, 0x00	; 0
     5aa:	b0 e0       	ldi	r27, 0x00	; 0
     5ac:	89 8f       	std	Y+25, r24	; 0x19
     5ae:	9a 8f       	std	Y+26, r25	; 0x1a
     5b0:	ab 8f       	std	Y+27, r26	; 0x1b
     5b2:	bc 8f       	std	Y+28, r27	; 0x1c
     5b4:	0c c0       	rjmp	.+24     	; 0x5ce <STPR_FullStep_Right+0x62>
     5b6:	00 00       	nop
     5b8:	89 8d       	ldd	r24, Y+25	; 0x19
     5ba:	9a 8d       	ldd	r25, Y+26	; 0x1a
     5bc:	ab 8d       	ldd	r26, Y+27	; 0x1b
     5be:	bc 8d       	ldd	r27, Y+28	; 0x1c
     5c0:	01 97       	sbiw	r24, 0x01	; 1
     5c2:	a1 09       	sbc	r26, r1
     5c4:	b1 09       	sbc	r27, r1
     5c6:	89 8f       	std	Y+25, r24	; 0x19
     5c8:	9a 8f       	std	Y+26, r25	; 0x1a
     5ca:	ab 8f       	std	Y+27, r26	; 0x1b
     5cc:	bc 8f       	std	Y+28, r27	; 0x1c
     5ce:	89 8d       	ldd	r24, Y+25	; 0x19
     5d0:	9a 8d       	ldd	r25, Y+26	; 0x1a
     5d2:	ab 8d       	ldd	r26, Y+27	; 0x1b
     5d4:	bc 8d       	ldd	r27, Y+28	; 0x1c
     5d6:	00 97       	sbiw	r24, 0x00	; 0
     5d8:	a1 05       	cpc	r26, r1
     5da:	b1 05       	cpc	r27, r1
     5dc:	61 f7       	brne	.-40     	; 0x5b6 <STPR_FullStep_Right+0x4a>
     5de:	8d 8d       	ldd	r24, Y+29	; 0x1d
     5e0:	9e 8d       	ldd	r25, Y+30	; 0x1e
     5e2:	af 8d       	ldd	r26, Y+31	; 0x1f
     5e4:	b8 a1       	ldd	r27, Y+32	; 0x20
     5e6:	01 97       	sbiw	r24, 0x01	; 1
     5e8:	a1 09       	sbc	r26, r1
     5ea:	b1 09       	sbc	r27, r1
     5ec:	8d 8f       	std	Y+29, r24	; 0x1d
     5ee:	9e 8f       	std	Y+30, r25	; 0x1e
     5f0:	af 8f       	std	Y+31, r26	; 0x1f
     5f2:	b8 a3       	std	Y+32, r27	; 0x20
     5f4:	8d 8d       	ldd	r24, Y+29	; 0x1d
     5f6:	9e 8d       	ldd	r25, Y+30	; 0x1e
     5f8:	af 8d       	ldd	r26, Y+31	; 0x1f
     5fa:	b8 a1       	ldd	r27, Y+32	; 0x20
     5fc:	00 97       	sbiw	r24, 0x00	; 0
     5fe:	a1 05       	cpc	r26, r1
     600:	b1 05       	cpc	r27, r1
     602:	81 f6       	brne	.-96     	; 0x5a4 <STPR_FullStep_Right+0x38>
	DIO_enuWritePin(STPR_COIL_0,DIO_LOW);
     604:	88 e1       	ldi	r24, 0x18	; 24
     606:	60 e0       	ldi	r22, 0x00	; 0
     608:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	DIO_enuWritePin(STPR_COIL_1,DIO_HIGH); //activate coil 2
     60c:	89 e1       	ldi	r24, 0x19	; 25
     60e:	61 e0       	ldi	r22, 0x01	; 1
     610:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	Delay_ms(speed);
     614:	89 a1       	ldd	r24, Y+33	; 0x21
     616:	86 95       	lsr	r24
     618:	86 95       	lsr	r24
     61a:	86 95       	lsr	r24
     61c:	88 2f       	mov	r24, r24
     61e:	90 e0       	ldi	r25, 0x00	; 0
     620:	a0 e0       	ldi	r26, 0x00	; 0
     622:	b0 e0       	ldi	r27, 0x00	; 0
     624:	8d 8b       	std	Y+21, r24	; 0x15
     626:	9e 8b       	std	Y+22, r25	; 0x16
     628:	af 8b       	std	Y+23, r26	; 0x17
     62a:	b8 8f       	std	Y+24, r27	; 0x18
     62c:	28 c0       	rjmp	.+80     	; 0x67e <STPR_FullStep_Right+0x112>
     62e:	80 ed       	ldi	r24, 0xD0	; 208
     630:	97 e0       	ldi	r25, 0x07	; 7
     632:	a0 e0       	ldi	r26, 0x00	; 0
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	89 8b       	std	Y+17, r24	; 0x11
     638:	9a 8b       	std	Y+18, r25	; 0x12
     63a:	ab 8b       	std	Y+19, r26	; 0x13
     63c:	bc 8b       	std	Y+20, r27	; 0x14
     63e:	0c c0       	rjmp	.+24     	; 0x658 <STPR_FullStep_Right+0xec>
     640:	00 00       	nop
     642:	89 89       	ldd	r24, Y+17	; 0x11
     644:	9a 89       	ldd	r25, Y+18	; 0x12
     646:	ab 89       	ldd	r26, Y+19	; 0x13
     648:	bc 89       	ldd	r27, Y+20	; 0x14
     64a:	01 97       	sbiw	r24, 0x01	; 1
     64c:	a1 09       	sbc	r26, r1
     64e:	b1 09       	sbc	r27, r1
     650:	89 8b       	std	Y+17, r24	; 0x11
     652:	9a 8b       	std	Y+18, r25	; 0x12
     654:	ab 8b       	std	Y+19, r26	; 0x13
     656:	bc 8b       	std	Y+20, r27	; 0x14
     658:	89 89       	ldd	r24, Y+17	; 0x11
     65a:	9a 89       	ldd	r25, Y+18	; 0x12
     65c:	ab 89       	ldd	r26, Y+19	; 0x13
     65e:	bc 89       	ldd	r27, Y+20	; 0x14
     660:	00 97       	sbiw	r24, 0x00	; 0
     662:	a1 05       	cpc	r26, r1
     664:	b1 05       	cpc	r27, r1
     666:	61 f7       	brne	.-40     	; 0x640 <STPR_FullStep_Right+0xd4>
     668:	8d 89       	ldd	r24, Y+21	; 0x15
     66a:	9e 89       	ldd	r25, Y+22	; 0x16
     66c:	af 89       	ldd	r26, Y+23	; 0x17
     66e:	b8 8d       	ldd	r27, Y+24	; 0x18
     670:	01 97       	sbiw	r24, 0x01	; 1
     672:	a1 09       	sbc	r26, r1
     674:	b1 09       	sbc	r27, r1
     676:	8d 8b       	std	Y+21, r24	; 0x15
     678:	9e 8b       	std	Y+22, r25	; 0x16
     67a:	af 8b       	std	Y+23, r26	; 0x17
     67c:	b8 8f       	std	Y+24, r27	; 0x18
     67e:	8d 89       	ldd	r24, Y+21	; 0x15
     680:	9e 89       	ldd	r25, Y+22	; 0x16
     682:	af 89       	ldd	r26, Y+23	; 0x17
     684:	b8 8d       	ldd	r27, Y+24	; 0x18
     686:	00 97       	sbiw	r24, 0x00	; 0
     688:	a1 05       	cpc	r26, r1
     68a:	b1 05       	cpc	r27, r1
     68c:	81 f6       	brne	.-96     	; 0x62e <STPR_FullStep_Right+0xc2>
	DIO_enuWritePin(STPR_COIL_1,DIO_LOW);
     68e:	89 e1       	ldi	r24, 0x19	; 25
     690:	60 e0       	ldi	r22, 0x00	; 0
     692:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	DIO_enuWritePin(STPR_COIL_2,DIO_HIGH);//activate coil 3
     696:	8a e1       	ldi	r24, 0x1A	; 26
     698:	61 e0       	ldi	r22, 0x01	; 1
     69a:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	Delay_ms(speed);
     69e:	89 a1       	ldd	r24, Y+33	; 0x21
     6a0:	86 95       	lsr	r24
     6a2:	86 95       	lsr	r24
     6a4:	86 95       	lsr	r24
     6a6:	88 2f       	mov	r24, r24
     6a8:	90 e0       	ldi	r25, 0x00	; 0
     6aa:	a0 e0       	ldi	r26, 0x00	; 0
     6ac:	b0 e0       	ldi	r27, 0x00	; 0
     6ae:	8d 87       	std	Y+13, r24	; 0x0d
     6b0:	9e 87       	std	Y+14, r25	; 0x0e
     6b2:	af 87       	std	Y+15, r26	; 0x0f
     6b4:	b8 8b       	std	Y+16, r27	; 0x10
     6b6:	28 c0       	rjmp	.+80     	; 0x708 <STPR_FullStep_Right+0x19c>
     6b8:	80 ed       	ldi	r24, 0xD0	; 208
     6ba:	97 e0       	ldi	r25, 0x07	; 7
     6bc:	a0 e0       	ldi	r26, 0x00	; 0
     6be:	b0 e0       	ldi	r27, 0x00	; 0
     6c0:	89 87       	std	Y+9, r24	; 0x09
     6c2:	9a 87       	std	Y+10, r25	; 0x0a
     6c4:	ab 87       	std	Y+11, r26	; 0x0b
     6c6:	bc 87       	std	Y+12, r27	; 0x0c
     6c8:	0c c0       	rjmp	.+24     	; 0x6e2 <STPR_FullStep_Right+0x176>
     6ca:	00 00       	nop
     6cc:	89 85       	ldd	r24, Y+9	; 0x09
     6ce:	9a 85       	ldd	r25, Y+10	; 0x0a
     6d0:	ab 85       	ldd	r26, Y+11	; 0x0b
     6d2:	bc 85       	ldd	r27, Y+12	; 0x0c
     6d4:	01 97       	sbiw	r24, 0x01	; 1
     6d6:	a1 09       	sbc	r26, r1
     6d8:	b1 09       	sbc	r27, r1
     6da:	89 87       	std	Y+9, r24	; 0x09
     6dc:	9a 87       	std	Y+10, r25	; 0x0a
     6de:	ab 87       	std	Y+11, r26	; 0x0b
     6e0:	bc 87       	std	Y+12, r27	; 0x0c
     6e2:	89 85       	ldd	r24, Y+9	; 0x09
     6e4:	9a 85       	ldd	r25, Y+10	; 0x0a
     6e6:	ab 85       	ldd	r26, Y+11	; 0x0b
     6e8:	bc 85       	ldd	r27, Y+12	; 0x0c
     6ea:	00 97       	sbiw	r24, 0x00	; 0
     6ec:	a1 05       	cpc	r26, r1
     6ee:	b1 05       	cpc	r27, r1
     6f0:	61 f7       	brne	.-40     	; 0x6ca <STPR_FullStep_Right+0x15e>
     6f2:	8d 85       	ldd	r24, Y+13	; 0x0d
     6f4:	9e 85       	ldd	r25, Y+14	; 0x0e
     6f6:	af 85       	ldd	r26, Y+15	; 0x0f
     6f8:	b8 89       	ldd	r27, Y+16	; 0x10
     6fa:	01 97       	sbiw	r24, 0x01	; 1
     6fc:	a1 09       	sbc	r26, r1
     6fe:	b1 09       	sbc	r27, r1
     700:	8d 87       	std	Y+13, r24	; 0x0d
     702:	9e 87       	std	Y+14, r25	; 0x0e
     704:	af 87       	std	Y+15, r26	; 0x0f
     706:	b8 8b       	std	Y+16, r27	; 0x10
     708:	8d 85       	ldd	r24, Y+13	; 0x0d
     70a:	9e 85       	ldd	r25, Y+14	; 0x0e
     70c:	af 85       	ldd	r26, Y+15	; 0x0f
     70e:	b8 89       	ldd	r27, Y+16	; 0x10
     710:	00 97       	sbiw	r24, 0x00	; 0
     712:	a1 05       	cpc	r26, r1
     714:	b1 05       	cpc	r27, r1
     716:	81 f6       	brne	.-96     	; 0x6b8 <STPR_FullStep_Right+0x14c>
	DIO_enuWritePin(STPR_COIL_2,DIO_LOW);
     718:	8a e1       	ldi	r24, 0x1A	; 26
     71a:	60 e0       	ldi	r22, 0x00	; 0
     71c:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	DIO_enuWritePin(STPR_COIL_3,DIO_HIGH); //activate coil 4
     720:	8b e1       	ldi	r24, 0x1B	; 27
     722:	61 e0       	ldi	r22, 0x01	; 1
     724:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	Delay_ms(speed);
     728:	89 a1       	ldd	r24, Y+33	; 0x21
     72a:	86 95       	lsr	r24
     72c:	86 95       	lsr	r24
     72e:	86 95       	lsr	r24
     730:	88 2f       	mov	r24, r24
     732:	90 e0       	ldi	r25, 0x00	; 0
     734:	a0 e0       	ldi	r26, 0x00	; 0
     736:	b0 e0       	ldi	r27, 0x00	; 0
     738:	8d 83       	std	Y+5, r24	; 0x05
     73a:	9e 83       	std	Y+6, r25	; 0x06
     73c:	af 83       	std	Y+7, r26	; 0x07
     73e:	b8 87       	std	Y+8, r27	; 0x08
     740:	28 c0       	rjmp	.+80     	; 0x792 <STPR_FullStep_Right+0x226>
     742:	80 ed       	ldi	r24, 0xD0	; 208
     744:	97 e0       	ldi	r25, 0x07	; 7
     746:	a0 e0       	ldi	r26, 0x00	; 0
     748:	b0 e0       	ldi	r27, 0x00	; 0
     74a:	89 83       	std	Y+1, r24	; 0x01
     74c:	9a 83       	std	Y+2, r25	; 0x02
     74e:	ab 83       	std	Y+3, r26	; 0x03
     750:	bc 83       	std	Y+4, r27	; 0x04
     752:	0c c0       	rjmp	.+24     	; 0x76c <STPR_FullStep_Right+0x200>
     754:	00 00       	nop
     756:	89 81       	ldd	r24, Y+1	; 0x01
     758:	9a 81       	ldd	r25, Y+2	; 0x02
     75a:	ab 81       	ldd	r26, Y+3	; 0x03
     75c:	bc 81       	ldd	r27, Y+4	; 0x04
     75e:	01 97       	sbiw	r24, 0x01	; 1
     760:	a1 09       	sbc	r26, r1
     762:	b1 09       	sbc	r27, r1
     764:	89 83       	std	Y+1, r24	; 0x01
     766:	9a 83       	std	Y+2, r25	; 0x02
     768:	ab 83       	std	Y+3, r26	; 0x03
     76a:	bc 83       	std	Y+4, r27	; 0x04
     76c:	89 81       	ldd	r24, Y+1	; 0x01
     76e:	9a 81       	ldd	r25, Y+2	; 0x02
     770:	ab 81       	ldd	r26, Y+3	; 0x03
     772:	bc 81       	ldd	r27, Y+4	; 0x04
     774:	00 97       	sbiw	r24, 0x00	; 0
     776:	a1 05       	cpc	r26, r1
     778:	b1 05       	cpc	r27, r1
     77a:	61 f7       	brne	.-40     	; 0x754 <STPR_FullStep_Right+0x1e8>
     77c:	8d 81       	ldd	r24, Y+5	; 0x05
     77e:	9e 81       	ldd	r25, Y+6	; 0x06
     780:	af 81       	ldd	r26, Y+7	; 0x07
     782:	b8 85       	ldd	r27, Y+8	; 0x08
     784:	01 97       	sbiw	r24, 0x01	; 1
     786:	a1 09       	sbc	r26, r1
     788:	b1 09       	sbc	r27, r1
     78a:	8d 83       	std	Y+5, r24	; 0x05
     78c:	9e 83       	std	Y+6, r25	; 0x06
     78e:	af 83       	std	Y+7, r26	; 0x07
     790:	b8 87       	std	Y+8, r27	; 0x08
     792:	8d 81       	ldd	r24, Y+5	; 0x05
     794:	9e 81       	ldd	r25, Y+6	; 0x06
     796:	af 81       	ldd	r26, Y+7	; 0x07
     798:	b8 85       	ldd	r27, Y+8	; 0x08
     79a:	00 97       	sbiw	r24, 0x00	; 0
     79c:	a1 05       	cpc	r26, r1
     79e:	b1 05       	cpc	r27, r1
     7a0:	81 f6       	brne	.-96     	; 0x742 <STPR_FullStep_Right+0x1d6>
	DIO_enuWritePin(STPR_COIL_3,DIO_LOW);
     7a2:	8b e1       	ldi	r24, 0x1B	; 27
     7a4:	60 e0       	ldi	r22, 0x00	; 0
     7a6:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
}
     7aa:	a1 96       	adiw	r28, 0x21	; 33
     7ac:	0f b6       	in	r0, 0x3f	; 63
     7ae:	f8 94       	cli
     7b0:	de bf       	out	0x3e, r29	; 62
     7b2:	0f be       	out	0x3f, r0	; 63
     7b4:	cd bf       	out	0x3d, r28	; 61
     7b6:	cf 91       	pop	r28
     7b8:	df 91       	pop	r29
     7ba:	08 95       	ret

000007bc <STPR_FullStep_Left>:

void STPR_FullStep_Left(u32 speed)
{
     7bc:	df 93       	push	r29
     7be:	cf 93       	push	r28
     7c0:	cd b7       	in	r28, 0x3d	; 61
     7c2:	de b7       	in	r29, 0x3e	; 62
     7c4:	a4 97       	sbiw	r28, 0x24	; 36
     7c6:	0f b6       	in	r0, 0x3f	; 63
     7c8:	f8 94       	cli
     7ca:	de bf       	out	0x3e, r29	; 62
     7cc:	0f be       	out	0x3f, r0	; 63
     7ce:	cd bf       	out	0x3d, r28	; 61
     7d0:	69 a3       	std	Y+33, r22	; 0x21
     7d2:	7a a3       	std	Y+34, r23	; 0x22
     7d4:	8b a3       	std	Y+35, r24	; 0x23
     7d6:	9c a3       	std	Y+36, r25	; 0x24
	//full step
	DIO_enuWritePin(STPR_COIL_3,DIO_HIGH); //activate coil 4
     7d8:	8b e1       	ldi	r24, 0x1B	; 27
     7da:	61 e0       	ldi	r22, 0x01	; 1
     7dc:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	Delay_ms(speed);
     7e0:	89 a1       	ldd	r24, Y+33	; 0x21
     7e2:	9a a1       	ldd	r25, Y+34	; 0x22
     7e4:	ab a1       	ldd	r26, Y+35	; 0x23
     7e6:	bc a1       	ldd	r27, Y+36	; 0x24
     7e8:	68 94       	set
     7ea:	12 f8       	bld	r1, 2
     7ec:	b6 95       	lsr	r27
     7ee:	a7 95       	ror	r26
     7f0:	97 95       	ror	r25
     7f2:	87 95       	ror	r24
     7f4:	16 94       	lsr	r1
     7f6:	d1 f7       	brne	.-12     	; 0x7ec <STPR_FullStep_Left+0x30>
     7f8:	8d 8f       	std	Y+29, r24	; 0x1d
     7fa:	9e 8f       	std	Y+30, r25	; 0x1e
     7fc:	af 8f       	std	Y+31, r26	; 0x1f
     7fe:	b8 a3       	std	Y+32, r27	; 0x20
     800:	28 c0       	rjmp	.+80     	; 0x852 <STPR_FullStep_Left+0x96>
     802:	80 ed       	ldi	r24, 0xD0	; 208
     804:	97 e0       	ldi	r25, 0x07	; 7
     806:	a0 e0       	ldi	r26, 0x00	; 0
     808:	b0 e0       	ldi	r27, 0x00	; 0
     80a:	89 8f       	std	Y+25, r24	; 0x19
     80c:	9a 8f       	std	Y+26, r25	; 0x1a
     80e:	ab 8f       	std	Y+27, r26	; 0x1b
     810:	bc 8f       	std	Y+28, r27	; 0x1c
     812:	0c c0       	rjmp	.+24     	; 0x82c <STPR_FullStep_Left+0x70>
     814:	00 00       	nop
     816:	89 8d       	ldd	r24, Y+25	; 0x19
     818:	9a 8d       	ldd	r25, Y+26	; 0x1a
     81a:	ab 8d       	ldd	r26, Y+27	; 0x1b
     81c:	bc 8d       	ldd	r27, Y+28	; 0x1c
     81e:	01 97       	sbiw	r24, 0x01	; 1
     820:	a1 09       	sbc	r26, r1
     822:	b1 09       	sbc	r27, r1
     824:	89 8f       	std	Y+25, r24	; 0x19
     826:	9a 8f       	std	Y+26, r25	; 0x1a
     828:	ab 8f       	std	Y+27, r26	; 0x1b
     82a:	bc 8f       	std	Y+28, r27	; 0x1c
     82c:	89 8d       	ldd	r24, Y+25	; 0x19
     82e:	9a 8d       	ldd	r25, Y+26	; 0x1a
     830:	ab 8d       	ldd	r26, Y+27	; 0x1b
     832:	bc 8d       	ldd	r27, Y+28	; 0x1c
     834:	00 97       	sbiw	r24, 0x00	; 0
     836:	a1 05       	cpc	r26, r1
     838:	b1 05       	cpc	r27, r1
     83a:	61 f7       	brne	.-40     	; 0x814 <STPR_FullStep_Left+0x58>
     83c:	8d 8d       	ldd	r24, Y+29	; 0x1d
     83e:	9e 8d       	ldd	r25, Y+30	; 0x1e
     840:	af 8d       	ldd	r26, Y+31	; 0x1f
     842:	b8 a1       	ldd	r27, Y+32	; 0x20
     844:	01 97       	sbiw	r24, 0x01	; 1
     846:	a1 09       	sbc	r26, r1
     848:	b1 09       	sbc	r27, r1
     84a:	8d 8f       	std	Y+29, r24	; 0x1d
     84c:	9e 8f       	std	Y+30, r25	; 0x1e
     84e:	af 8f       	std	Y+31, r26	; 0x1f
     850:	b8 a3       	std	Y+32, r27	; 0x20
     852:	8d 8d       	ldd	r24, Y+29	; 0x1d
     854:	9e 8d       	ldd	r25, Y+30	; 0x1e
     856:	af 8d       	ldd	r26, Y+31	; 0x1f
     858:	b8 a1       	ldd	r27, Y+32	; 0x20
     85a:	00 97       	sbiw	r24, 0x00	; 0
     85c:	a1 05       	cpc	r26, r1
     85e:	b1 05       	cpc	r27, r1
     860:	81 f6       	brne	.-96     	; 0x802 <STPR_FullStep_Left+0x46>
	DIO_enuWritePin(STPR_COIL_3,DIO_LOW);
     862:	8b e1       	ldi	r24, 0x1B	; 27
     864:	60 e0       	ldi	r22, 0x00	; 0
     866:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	DIO_enuWritePin(STPR_COIL_2,DIO_HIGH); //activate coil 3
     86a:	8a e1       	ldi	r24, 0x1A	; 26
     86c:	61 e0       	ldi	r22, 0x01	; 1
     86e:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	Delay_ms(speed);
     872:	89 a1       	ldd	r24, Y+33	; 0x21
     874:	9a a1       	ldd	r25, Y+34	; 0x22
     876:	ab a1       	ldd	r26, Y+35	; 0x23
     878:	bc a1       	ldd	r27, Y+36	; 0x24
     87a:	68 94       	set
     87c:	12 f8       	bld	r1, 2
     87e:	b6 95       	lsr	r27
     880:	a7 95       	ror	r26
     882:	97 95       	ror	r25
     884:	87 95       	ror	r24
     886:	16 94       	lsr	r1
     888:	d1 f7       	brne	.-12     	; 0x87e <__stack+0x1f>
     88a:	8d 8b       	std	Y+21, r24	; 0x15
     88c:	9e 8b       	std	Y+22, r25	; 0x16
     88e:	af 8b       	std	Y+23, r26	; 0x17
     890:	b8 8f       	std	Y+24, r27	; 0x18
     892:	28 c0       	rjmp	.+80     	; 0x8e4 <__stack+0x85>
     894:	80 ed       	ldi	r24, 0xD0	; 208
     896:	97 e0       	ldi	r25, 0x07	; 7
     898:	a0 e0       	ldi	r26, 0x00	; 0
     89a:	b0 e0       	ldi	r27, 0x00	; 0
     89c:	89 8b       	std	Y+17, r24	; 0x11
     89e:	9a 8b       	std	Y+18, r25	; 0x12
     8a0:	ab 8b       	std	Y+19, r26	; 0x13
     8a2:	bc 8b       	std	Y+20, r27	; 0x14
     8a4:	0c c0       	rjmp	.+24     	; 0x8be <__stack+0x5f>
     8a6:	00 00       	nop
     8a8:	89 89       	ldd	r24, Y+17	; 0x11
     8aa:	9a 89       	ldd	r25, Y+18	; 0x12
     8ac:	ab 89       	ldd	r26, Y+19	; 0x13
     8ae:	bc 89       	ldd	r27, Y+20	; 0x14
     8b0:	01 97       	sbiw	r24, 0x01	; 1
     8b2:	a1 09       	sbc	r26, r1
     8b4:	b1 09       	sbc	r27, r1
     8b6:	89 8b       	std	Y+17, r24	; 0x11
     8b8:	9a 8b       	std	Y+18, r25	; 0x12
     8ba:	ab 8b       	std	Y+19, r26	; 0x13
     8bc:	bc 8b       	std	Y+20, r27	; 0x14
     8be:	89 89       	ldd	r24, Y+17	; 0x11
     8c0:	9a 89       	ldd	r25, Y+18	; 0x12
     8c2:	ab 89       	ldd	r26, Y+19	; 0x13
     8c4:	bc 89       	ldd	r27, Y+20	; 0x14
     8c6:	00 97       	sbiw	r24, 0x00	; 0
     8c8:	a1 05       	cpc	r26, r1
     8ca:	b1 05       	cpc	r27, r1
     8cc:	61 f7       	brne	.-40     	; 0x8a6 <__stack+0x47>
     8ce:	8d 89       	ldd	r24, Y+21	; 0x15
     8d0:	9e 89       	ldd	r25, Y+22	; 0x16
     8d2:	af 89       	ldd	r26, Y+23	; 0x17
     8d4:	b8 8d       	ldd	r27, Y+24	; 0x18
     8d6:	01 97       	sbiw	r24, 0x01	; 1
     8d8:	a1 09       	sbc	r26, r1
     8da:	b1 09       	sbc	r27, r1
     8dc:	8d 8b       	std	Y+21, r24	; 0x15
     8de:	9e 8b       	std	Y+22, r25	; 0x16
     8e0:	af 8b       	std	Y+23, r26	; 0x17
     8e2:	b8 8f       	std	Y+24, r27	; 0x18
     8e4:	8d 89       	ldd	r24, Y+21	; 0x15
     8e6:	9e 89       	ldd	r25, Y+22	; 0x16
     8e8:	af 89       	ldd	r26, Y+23	; 0x17
     8ea:	b8 8d       	ldd	r27, Y+24	; 0x18
     8ec:	00 97       	sbiw	r24, 0x00	; 0
     8ee:	a1 05       	cpc	r26, r1
     8f0:	b1 05       	cpc	r27, r1
     8f2:	81 f6       	brne	.-96     	; 0x894 <__stack+0x35>
	DIO_enuWritePin(STPR_COIL_2,DIO_LOW);
     8f4:	8a e1       	ldi	r24, 0x1A	; 26
     8f6:	60 e0       	ldi	r22, 0x00	; 0
     8f8:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	DIO_enuWritePin(STPR_COIL_1,DIO_HIGH);//activate coil 2
     8fc:	89 e1       	ldi	r24, 0x19	; 25
     8fe:	61 e0       	ldi	r22, 0x01	; 1
     900:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	Delay_ms(speed);
     904:	89 a1       	ldd	r24, Y+33	; 0x21
     906:	9a a1       	ldd	r25, Y+34	; 0x22
     908:	ab a1       	ldd	r26, Y+35	; 0x23
     90a:	bc a1       	ldd	r27, Y+36	; 0x24
     90c:	68 94       	set
     90e:	12 f8       	bld	r1, 2
     910:	b6 95       	lsr	r27
     912:	a7 95       	ror	r26
     914:	97 95       	ror	r25
     916:	87 95       	ror	r24
     918:	16 94       	lsr	r1
     91a:	d1 f7       	brne	.-12     	; 0x910 <__stack+0xb1>
     91c:	8d 87       	std	Y+13, r24	; 0x0d
     91e:	9e 87       	std	Y+14, r25	; 0x0e
     920:	af 87       	std	Y+15, r26	; 0x0f
     922:	b8 8b       	std	Y+16, r27	; 0x10
     924:	28 c0       	rjmp	.+80     	; 0x976 <__stack+0x117>
     926:	80 ed       	ldi	r24, 0xD0	; 208
     928:	97 e0       	ldi	r25, 0x07	; 7
     92a:	a0 e0       	ldi	r26, 0x00	; 0
     92c:	b0 e0       	ldi	r27, 0x00	; 0
     92e:	89 87       	std	Y+9, r24	; 0x09
     930:	9a 87       	std	Y+10, r25	; 0x0a
     932:	ab 87       	std	Y+11, r26	; 0x0b
     934:	bc 87       	std	Y+12, r27	; 0x0c
     936:	0c c0       	rjmp	.+24     	; 0x950 <__stack+0xf1>
     938:	00 00       	nop
     93a:	89 85       	ldd	r24, Y+9	; 0x09
     93c:	9a 85       	ldd	r25, Y+10	; 0x0a
     93e:	ab 85       	ldd	r26, Y+11	; 0x0b
     940:	bc 85       	ldd	r27, Y+12	; 0x0c
     942:	01 97       	sbiw	r24, 0x01	; 1
     944:	a1 09       	sbc	r26, r1
     946:	b1 09       	sbc	r27, r1
     948:	89 87       	std	Y+9, r24	; 0x09
     94a:	9a 87       	std	Y+10, r25	; 0x0a
     94c:	ab 87       	std	Y+11, r26	; 0x0b
     94e:	bc 87       	std	Y+12, r27	; 0x0c
     950:	89 85       	ldd	r24, Y+9	; 0x09
     952:	9a 85       	ldd	r25, Y+10	; 0x0a
     954:	ab 85       	ldd	r26, Y+11	; 0x0b
     956:	bc 85       	ldd	r27, Y+12	; 0x0c
     958:	00 97       	sbiw	r24, 0x00	; 0
     95a:	a1 05       	cpc	r26, r1
     95c:	b1 05       	cpc	r27, r1
     95e:	61 f7       	brne	.-40     	; 0x938 <__stack+0xd9>
     960:	8d 85       	ldd	r24, Y+13	; 0x0d
     962:	9e 85       	ldd	r25, Y+14	; 0x0e
     964:	af 85       	ldd	r26, Y+15	; 0x0f
     966:	b8 89       	ldd	r27, Y+16	; 0x10
     968:	01 97       	sbiw	r24, 0x01	; 1
     96a:	a1 09       	sbc	r26, r1
     96c:	b1 09       	sbc	r27, r1
     96e:	8d 87       	std	Y+13, r24	; 0x0d
     970:	9e 87       	std	Y+14, r25	; 0x0e
     972:	af 87       	std	Y+15, r26	; 0x0f
     974:	b8 8b       	std	Y+16, r27	; 0x10
     976:	8d 85       	ldd	r24, Y+13	; 0x0d
     978:	9e 85       	ldd	r25, Y+14	; 0x0e
     97a:	af 85       	ldd	r26, Y+15	; 0x0f
     97c:	b8 89       	ldd	r27, Y+16	; 0x10
     97e:	00 97       	sbiw	r24, 0x00	; 0
     980:	a1 05       	cpc	r26, r1
     982:	b1 05       	cpc	r27, r1
     984:	81 f6       	brne	.-96     	; 0x926 <__stack+0xc7>
	DIO_enuWritePin(STPR_COIL_1,DIO_LOW);
     986:	89 e1       	ldi	r24, 0x19	; 25
     988:	60 e0       	ldi	r22, 0x00	; 0
     98a:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	DIO_enuWritePin(STPR_COIL_0,DIO_HIGH); //activate coil 1
     98e:	88 e1       	ldi	r24, 0x18	; 24
     990:	61 e0       	ldi	r22, 0x01	; 1
     992:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	Delay_ms(speed);
     996:	89 a1       	ldd	r24, Y+33	; 0x21
     998:	9a a1       	ldd	r25, Y+34	; 0x22
     99a:	ab a1       	ldd	r26, Y+35	; 0x23
     99c:	bc a1       	ldd	r27, Y+36	; 0x24
     99e:	68 94       	set
     9a0:	12 f8       	bld	r1, 2
     9a2:	b6 95       	lsr	r27
     9a4:	a7 95       	ror	r26
     9a6:	97 95       	ror	r25
     9a8:	87 95       	ror	r24
     9aa:	16 94       	lsr	r1
     9ac:	d1 f7       	brne	.-12     	; 0x9a2 <__stack+0x143>
     9ae:	8d 83       	std	Y+5, r24	; 0x05
     9b0:	9e 83       	std	Y+6, r25	; 0x06
     9b2:	af 83       	std	Y+7, r26	; 0x07
     9b4:	b8 87       	std	Y+8, r27	; 0x08
     9b6:	28 c0       	rjmp	.+80     	; 0xa08 <__stack+0x1a9>
     9b8:	80 ed       	ldi	r24, 0xD0	; 208
     9ba:	97 e0       	ldi	r25, 0x07	; 7
     9bc:	a0 e0       	ldi	r26, 0x00	; 0
     9be:	b0 e0       	ldi	r27, 0x00	; 0
     9c0:	89 83       	std	Y+1, r24	; 0x01
     9c2:	9a 83       	std	Y+2, r25	; 0x02
     9c4:	ab 83       	std	Y+3, r26	; 0x03
     9c6:	bc 83       	std	Y+4, r27	; 0x04
     9c8:	0c c0       	rjmp	.+24     	; 0x9e2 <__stack+0x183>
     9ca:	00 00       	nop
     9cc:	89 81       	ldd	r24, Y+1	; 0x01
     9ce:	9a 81       	ldd	r25, Y+2	; 0x02
     9d0:	ab 81       	ldd	r26, Y+3	; 0x03
     9d2:	bc 81       	ldd	r27, Y+4	; 0x04
     9d4:	01 97       	sbiw	r24, 0x01	; 1
     9d6:	a1 09       	sbc	r26, r1
     9d8:	b1 09       	sbc	r27, r1
     9da:	89 83       	std	Y+1, r24	; 0x01
     9dc:	9a 83       	std	Y+2, r25	; 0x02
     9de:	ab 83       	std	Y+3, r26	; 0x03
     9e0:	bc 83       	std	Y+4, r27	; 0x04
     9e2:	89 81       	ldd	r24, Y+1	; 0x01
     9e4:	9a 81       	ldd	r25, Y+2	; 0x02
     9e6:	ab 81       	ldd	r26, Y+3	; 0x03
     9e8:	bc 81       	ldd	r27, Y+4	; 0x04
     9ea:	00 97       	sbiw	r24, 0x00	; 0
     9ec:	a1 05       	cpc	r26, r1
     9ee:	b1 05       	cpc	r27, r1
     9f0:	61 f7       	brne	.-40     	; 0x9ca <__stack+0x16b>
     9f2:	8d 81       	ldd	r24, Y+5	; 0x05
     9f4:	9e 81       	ldd	r25, Y+6	; 0x06
     9f6:	af 81       	ldd	r26, Y+7	; 0x07
     9f8:	b8 85       	ldd	r27, Y+8	; 0x08
     9fa:	01 97       	sbiw	r24, 0x01	; 1
     9fc:	a1 09       	sbc	r26, r1
     9fe:	b1 09       	sbc	r27, r1
     a00:	8d 83       	std	Y+5, r24	; 0x05
     a02:	9e 83       	std	Y+6, r25	; 0x06
     a04:	af 83       	std	Y+7, r26	; 0x07
     a06:	b8 87       	std	Y+8, r27	; 0x08
     a08:	8d 81       	ldd	r24, Y+5	; 0x05
     a0a:	9e 81       	ldd	r25, Y+6	; 0x06
     a0c:	af 81       	ldd	r26, Y+7	; 0x07
     a0e:	b8 85       	ldd	r27, Y+8	; 0x08
     a10:	00 97       	sbiw	r24, 0x00	; 0
     a12:	a1 05       	cpc	r26, r1
     a14:	b1 05       	cpc	r27, r1
     a16:	81 f6       	brne	.-96     	; 0x9b8 <__stack+0x159>
	DIO_enuWritePin(STPR_COIL_0,DIO_LOW);
     a18:	88 e1       	ldi	r24, 0x18	; 24
     a1a:	60 e0       	ldi	r22, 0x00	; 0
     a1c:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
}
     a20:	a4 96       	adiw	r28, 0x24	; 36
     a22:	0f b6       	in	r0, 0x3f	; 63
     a24:	f8 94       	cli
     a26:	de bf       	out	0x3e, r29	; 62
     a28:	0f be       	out	0x3f, r0	; 63
     a2a:	cd bf       	out	0x3d, r28	; 61
     a2c:	cf 91       	pop	r28
     a2e:	df 91       	pop	r29
     a30:	08 95       	ret

00000a32 <STPR_HalfStep_Right>:

void STPR_HalfStep_Right(u8 speed)
{
     a32:	df 93       	push	r29
     a34:	cf 93       	push	r28
     a36:	cd b7       	in	r28, 0x3d	; 61
     a38:	de b7       	in	r29, 0x3e	; 62
     a3a:	c9 54       	subi	r28, 0x49	; 73
     a3c:	d0 40       	sbci	r29, 0x00	; 0
     a3e:	0f b6       	in	r0, 0x3f	; 63
     a40:	f8 94       	cli
     a42:	de bf       	out	0x3e, r29	; 62
     a44:	0f be       	out	0x3f, r0	; 63
     a46:	cd bf       	out	0x3d, r28	; 61
     a48:	fe 01       	movw	r30, r28
     a4a:	e7 5b       	subi	r30, 0xB7	; 183
     a4c:	ff 4f       	sbci	r31, 0xFF	; 255
     a4e:	80 83       	st	Z, r24

	DIO_enuWritePin(STPR_COIL_0,DIO_HIGH); //activate coil 1
     a50:	88 e1       	ldi	r24, 0x18	; 24
     a52:	61 e0       	ldi	r22, 0x01	; 1
     a54:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	Delay_ms(speed);
     a58:	fe 01       	movw	r30, r28
     a5a:	e7 5b       	subi	r30, 0xB7	; 183
     a5c:	ff 4f       	sbci	r31, 0xFF	; 255
     a5e:	80 81       	ld	r24, Z
     a60:	86 95       	lsr	r24
     a62:	86 95       	lsr	r24
     a64:	86 95       	lsr	r24
     a66:	fe 01       	movw	r30, r28
     a68:	eb 5b       	subi	r30, 0xBB	; 187
     a6a:	ff 4f       	sbci	r31, 0xFF	; 255
     a6c:	88 2f       	mov	r24, r24
     a6e:	90 e0       	ldi	r25, 0x00	; 0
     a70:	a0 e0       	ldi	r26, 0x00	; 0
     a72:	b0 e0       	ldi	r27, 0x00	; 0
     a74:	80 83       	st	Z, r24
     a76:	91 83       	std	Z+1, r25	; 0x01
     a78:	a2 83       	std	Z+2, r26	; 0x02
     a7a:	b3 83       	std	Z+3, r27	; 0x03
     a7c:	3c c0       	rjmp	.+120    	; 0xaf6 <STPR_HalfStep_Right+0xc4>
     a7e:	fe 01       	movw	r30, r28
     a80:	ef 5b       	subi	r30, 0xBF	; 191
     a82:	ff 4f       	sbci	r31, 0xFF	; 255
     a84:	80 ed       	ldi	r24, 0xD0	; 208
     a86:	97 e0       	ldi	r25, 0x07	; 7
     a88:	a0 e0       	ldi	r26, 0x00	; 0
     a8a:	b0 e0       	ldi	r27, 0x00	; 0
     a8c:	80 83       	st	Z, r24
     a8e:	91 83       	std	Z+1, r25	; 0x01
     a90:	a2 83       	std	Z+2, r26	; 0x02
     a92:	b3 83       	std	Z+3, r27	; 0x03
     a94:	13 c0       	rjmp	.+38     	; 0xabc <STPR_HalfStep_Right+0x8a>
     a96:	00 00       	nop
     a98:	9e 01       	movw	r18, r28
     a9a:	2f 5b       	subi	r18, 0xBF	; 191
     a9c:	3f 4f       	sbci	r19, 0xFF	; 255
     a9e:	fe 01       	movw	r30, r28
     aa0:	ef 5b       	subi	r30, 0xBF	; 191
     aa2:	ff 4f       	sbci	r31, 0xFF	; 255
     aa4:	80 81       	ld	r24, Z
     aa6:	91 81       	ldd	r25, Z+1	; 0x01
     aa8:	a2 81       	ldd	r26, Z+2	; 0x02
     aaa:	b3 81       	ldd	r27, Z+3	; 0x03
     aac:	01 97       	sbiw	r24, 0x01	; 1
     aae:	a1 09       	sbc	r26, r1
     ab0:	b1 09       	sbc	r27, r1
     ab2:	f9 01       	movw	r30, r18
     ab4:	80 83       	st	Z, r24
     ab6:	91 83       	std	Z+1, r25	; 0x01
     ab8:	a2 83       	std	Z+2, r26	; 0x02
     aba:	b3 83       	std	Z+3, r27	; 0x03
     abc:	fe 01       	movw	r30, r28
     abe:	ef 5b       	subi	r30, 0xBF	; 191
     ac0:	ff 4f       	sbci	r31, 0xFF	; 255
     ac2:	80 81       	ld	r24, Z
     ac4:	91 81       	ldd	r25, Z+1	; 0x01
     ac6:	a2 81       	ldd	r26, Z+2	; 0x02
     ac8:	b3 81       	ldd	r27, Z+3	; 0x03
     aca:	00 97       	sbiw	r24, 0x00	; 0
     acc:	a1 05       	cpc	r26, r1
     ace:	b1 05       	cpc	r27, r1
     ad0:	11 f7       	brne	.-60     	; 0xa96 <STPR_HalfStep_Right+0x64>
     ad2:	9e 01       	movw	r18, r28
     ad4:	2b 5b       	subi	r18, 0xBB	; 187
     ad6:	3f 4f       	sbci	r19, 0xFF	; 255
     ad8:	fe 01       	movw	r30, r28
     ada:	eb 5b       	subi	r30, 0xBB	; 187
     adc:	ff 4f       	sbci	r31, 0xFF	; 255
     ade:	80 81       	ld	r24, Z
     ae0:	91 81       	ldd	r25, Z+1	; 0x01
     ae2:	a2 81       	ldd	r26, Z+2	; 0x02
     ae4:	b3 81       	ldd	r27, Z+3	; 0x03
     ae6:	01 97       	sbiw	r24, 0x01	; 1
     ae8:	a1 09       	sbc	r26, r1
     aea:	b1 09       	sbc	r27, r1
     aec:	f9 01       	movw	r30, r18
     aee:	80 83       	st	Z, r24
     af0:	91 83       	std	Z+1, r25	; 0x01
     af2:	a2 83       	std	Z+2, r26	; 0x02
     af4:	b3 83       	std	Z+3, r27	; 0x03
     af6:	fe 01       	movw	r30, r28
     af8:	eb 5b       	subi	r30, 0xBB	; 187
     afa:	ff 4f       	sbci	r31, 0xFF	; 255
     afc:	80 81       	ld	r24, Z
     afe:	91 81       	ldd	r25, Z+1	; 0x01
     b00:	a2 81       	ldd	r26, Z+2	; 0x02
     b02:	b3 81       	ldd	r27, Z+3	; 0x03
     b04:	00 97       	sbiw	r24, 0x00	; 0
     b06:	a1 05       	cpc	r26, r1
     b08:	b1 05       	cpc	r27, r1
     b0a:	09 f0       	breq	.+2      	; 0xb0e <STPR_HalfStep_Right+0xdc>
     b0c:	b8 cf       	rjmp	.-144    	; 0xa7e <STPR_HalfStep_Right+0x4c>
	DIO_enuWritePin(STPR_COIL_0,DIO_LOW);
     b0e:	88 e1       	ldi	r24, 0x18	; 24
     b10:	60 e0       	ldi	r22, 0x00	; 0
     b12:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	DIO_enuWritePin(STPR_COIL_0,DIO_HIGH);//activate coil 1,2
     b16:	88 e1       	ldi	r24, 0x18	; 24
     b18:	61 e0       	ldi	r22, 0x01	; 1
     b1a:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	DIO_enuWritePin(STPR_COIL_1,DIO_HIGH);
     b1e:	89 e1       	ldi	r24, 0x19	; 25
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	Delay_ms(speed);
     b26:	fe 01       	movw	r30, r28
     b28:	e7 5b       	subi	r30, 0xB7	; 183
     b2a:	ff 4f       	sbci	r31, 0xFF	; 255
     b2c:	80 81       	ld	r24, Z
     b2e:	86 95       	lsr	r24
     b30:	86 95       	lsr	r24
     b32:	86 95       	lsr	r24
     b34:	88 2f       	mov	r24, r24
     b36:	90 e0       	ldi	r25, 0x00	; 0
     b38:	a0 e0       	ldi	r26, 0x00	; 0
     b3a:	b0 e0       	ldi	r27, 0x00	; 0
     b3c:	fe 01       	movw	r30, r28
     b3e:	fd 96       	adiw	r30, 0x3d	; 61
     b40:	80 83       	st	Z, r24
     b42:	91 83       	std	Z+1, r25	; 0x01
     b44:	a2 83       	std	Z+2, r26	; 0x02
     b46:	b3 83       	std	Z+3, r27	; 0x03
     b48:	2c c0       	rjmp	.+88     	; 0xba2 <STPR_HalfStep_Right+0x170>
     b4a:	80 ed       	ldi	r24, 0xD0	; 208
     b4c:	97 e0       	ldi	r25, 0x07	; 7
     b4e:	a0 e0       	ldi	r26, 0x00	; 0
     b50:	b0 e0       	ldi	r27, 0x00	; 0
     b52:	89 af       	std	Y+57, r24	; 0x39
     b54:	9a af       	std	Y+58, r25	; 0x3a
     b56:	ab af       	std	Y+59, r26	; 0x3b
     b58:	bc af       	std	Y+60, r27	; 0x3c
     b5a:	0c c0       	rjmp	.+24     	; 0xb74 <STPR_HalfStep_Right+0x142>
     b5c:	00 00       	nop
     b5e:	89 ad       	ldd	r24, Y+57	; 0x39
     b60:	9a ad       	ldd	r25, Y+58	; 0x3a
     b62:	ab ad       	ldd	r26, Y+59	; 0x3b
     b64:	bc ad       	ldd	r27, Y+60	; 0x3c
     b66:	01 97       	sbiw	r24, 0x01	; 1
     b68:	a1 09       	sbc	r26, r1
     b6a:	b1 09       	sbc	r27, r1
     b6c:	89 af       	std	Y+57, r24	; 0x39
     b6e:	9a af       	std	Y+58, r25	; 0x3a
     b70:	ab af       	std	Y+59, r26	; 0x3b
     b72:	bc af       	std	Y+60, r27	; 0x3c
     b74:	89 ad       	ldd	r24, Y+57	; 0x39
     b76:	9a ad       	ldd	r25, Y+58	; 0x3a
     b78:	ab ad       	ldd	r26, Y+59	; 0x3b
     b7a:	bc ad       	ldd	r27, Y+60	; 0x3c
     b7c:	00 97       	sbiw	r24, 0x00	; 0
     b7e:	a1 05       	cpc	r26, r1
     b80:	b1 05       	cpc	r27, r1
     b82:	61 f7       	brne	.-40     	; 0xb5c <STPR_HalfStep_Right+0x12a>
     b84:	fe 01       	movw	r30, r28
     b86:	fd 96       	adiw	r30, 0x3d	; 61
     b88:	80 81       	ld	r24, Z
     b8a:	91 81       	ldd	r25, Z+1	; 0x01
     b8c:	a2 81       	ldd	r26, Z+2	; 0x02
     b8e:	b3 81       	ldd	r27, Z+3	; 0x03
     b90:	01 97       	sbiw	r24, 0x01	; 1
     b92:	a1 09       	sbc	r26, r1
     b94:	b1 09       	sbc	r27, r1
     b96:	fe 01       	movw	r30, r28
     b98:	fd 96       	adiw	r30, 0x3d	; 61
     b9a:	80 83       	st	Z, r24
     b9c:	91 83       	std	Z+1, r25	; 0x01
     b9e:	a2 83       	std	Z+2, r26	; 0x02
     ba0:	b3 83       	std	Z+3, r27	; 0x03
     ba2:	fe 01       	movw	r30, r28
     ba4:	fd 96       	adiw	r30, 0x3d	; 61
     ba6:	80 81       	ld	r24, Z
     ba8:	91 81       	ldd	r25, Z+1	; 0x01
     baa:	a2 81       	ldd	r26, Z+2	; 0x02
     bac:	b3 81       	ldd	r27, Z+3	; 0x03
     bae:	00 97       	sbiw	r24, 0x00	; 0
     bb0:	a1 05       	cpc	r26, r1
     bb2:	b1 05       	cpc	r27, r1
     bb4:	51 f6       	brne	.-108    	; 0xb4a <STPR_HalfStep_Right+0x118>
	DIO_enuWritePin(STPR_COIL_0,DIO_LOW);//deactivate coil 1,2
     bb6:	88 e1       	ldi	r24, 0x18	; 24
     bb8:	60 e0       	ldi	r22, 0x00	; 0
     bba:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	DIO_enuWritePin(STPR_COIL_1,DIO_LOW);
     bbe:	89 e1       	ldi	r24, 0x19	; 25
     bc0:	60 e0       	ldi	r22, 0x00	; 0
     bc2:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	DIO_enuWritePin(STPR_COIL_1,DIO_HIGH);//activate coil 2
     bc6:	89 e1       	ldi	r24, 0x19	; 25
     bc8:	61 e0       	ldi	r22, 0x01	; 1
     bca:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	Delay_ms(speed);
     bce:	fe 01       	movw	r30, r28
     bd0:	e7 5b       	subi	r30, 0xB7	; 183
     bd2:	ff 4f       	sbci	r31, 0xFF	; 255
     bd4:	80 81       	ld	r24, Z
     bd6:	86 95       	lsr	r24
     bd8:	86 95       	lsr	r24
     bda:	86 95       	lsr	r24
     bdc:	88 2f       	mov	r24, r24
     bde:	90 e0       	ldi	r25, 0x00	; 0
     be0:	a0 e0       	ldi	r26, 0x00	; 0
     be2:	b0 e0       	ldi	r27, 0x00	; 0
     be4:	8d ab       	std	Y+53, r24	; 0x35
     be6:	9e ab       	std	Y+54, r25	; 0x36
     be8:	af ab       	std	Y+55, r26	; 0x37
     bea:	b8 af       	std	Y+56, r27	; 0x38
     bec:	28 c0       	rjmp	.+80     	; 0xc3e <STPR_HalfStep_Right+0x20c>
     bee:	80 ed       	ldi	r24, 0xD0	; 208
     bf0:	97 e0       	ldi	r25, 0x07	; 7
     bf2:	a0 e0       	ldi	r26, 0x00	; 0
     bf4:	b0 e0       	ldi	r27, 0x00	; 0
     bf6:	89 ab       	std	Y+49, r24	; 0x31
     bf8:	9a ab       	std	Y+50, r25	; 0x32
     bfa:	ab ab       	std	Y+51, r26	; 0x33
     bfc:	bc ab       	std	Y+52, r27	; 0x34
     bfe:	0c c0       	rjmp	.+24     	; 0xc18 <STPR_HalfStep_Right+0x1e6>
     c00:	00 00       	nop
     c02:	89 a9       	ldd	r24, Y+49	; 0x31
     c04:	9a a9       	ldd	r25, Y+50	; 0x32
     c06:	ab a9       	ldd	r26, Y+51	; 0x33
     c08:	bc a9       	ldd	r27, Y+52	; 0x34
     c0a:	01 97       	sbiw	r24, 0x01	; 1
     c0c:	a1 09       	sbc	r26, r1
     c0e:	b1 09       	sbc	r27, r1
     c10:	89 ab       	std	Y+49, r24	; 0x31
     c12:	9a ab       	std	Y+50, r25	; 0x32
     c14:	ab ab       	std	Y+51, r26	; 0x33
     c16:	bc ab       	std	Y+52, r27	; 0x34
     c18:	89 a9       	ldd	r24, Y+49	; 0x31
     c1a:	9a a9       	ldd	r25, Y+50	; 0x32
     c1c:	ab a9       	ldd	r26, Y+51	; 0x33
     c1e:	bc a9       	ldd	r27, Y+52	; 0x34
     c20:	00 97       	sbiw	r24, 0x00	; 0
     c22:	a1 05       	cpc	r26, r1
     c24:	b1 05       	cpc	r27, r1
     c26:	61 f7       	brne	.-40     	; 0xc00 <STPR_HalfStep_Right+0x1ce>
     c28:	8d a9       	ldd	r24, Y+53	; 0x35
     c2a:	9e a9       	ldd	r25, Y+54	; 0x36
     c2c:	af a9       	ldd	r26, Y+55	; 0x37
     c2e:	b8 ad       	ldd	r27, Y+56	; 0x38
     c30:	01 97       	sbiw	r24, 0x01	; 1
     c32:	a1 09       	sbc	r26, r1
     c34:	b1 09       	sbc	r27, r1
     c36:	8d ab       	std	Y+53, r24	; 0x35
     c38:	9e ab       	std	Y+54, r25	; 0x36
     c3a:	af ab       	std	Y+55, r26	; 0x37
     c3c:	b8 af       	std	Y+56, r27	; 0x38
     c3e:	8d a9       	ldd	r24, Y+53	; 0x35
     c40:	9e a9       	ldd	r25, Y+54	; 0x36
     c42:	af a9       	ldd	r26, Y+55	; 0x37
     c44:	b8 ad       	ldd	r27, Y+56	; 0x38
     c46:	00 97       	sbiw	r24, 0x00	; 0
     c48:	a1 05       	cpc	r26, r1
     c4a:	b1 05       	cpc	r27, r1
     c4c:	81 f6       	brne	.-96     	; 0xbee <STPR_HalfStep_Right+0x1bc>
	DIO_enuWritePin(STPR_COIL_1,DIO_LOW);
     c4e:	89 e1       	ldi	r24, 0x19	; 25
     c50:	60 e0       	ldi	r22, 0x00	; 0
     c52:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	DIO_enuWritePin(STPR_COIL_1,DIO_HIGH); //activate coil 2,3
     c56:	89 e1       	ldi	r24, 0x19	; 25
     c58:	61 e0       	ldi	r22, 0x01	; 1
     c5a:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	DIO_enuWritePin(STPR_COIL_2,DIO_HIGH);
     c5e:	8a e1       	ldi	r24, 0x1A	; 26
     c60:	61 e0       	ldi	r22, 0x01	; 1
     c62:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	Delay_ms(speed);
     c66:	fe 01       	movw	r30, r28
     c68:	e7 5b       	subi	r30, 0xB7	; 183
     c6a:	ff 4f       	sbci	r31, 0xFF	; 255
     c6c:	80 81       	ld	r24, Z
     c6e:	86 95       	lsr	r24
     c70:	86 95       	lsr	r24
     c72:	86 95       	lsr	r24
     c74:	88 2f       	mov	r24, r24
     c76:	90 e0       	ldi	r25, 0x00	; 0
     c78:	a0 e0       	ldi	r26, 0x00	; 0
     c7a:	b0 e0       	ldi	r27, 0x00	; 0
     c7c:	8d a7       	std	Y+45, r24	; 0x2d
     c7e:	9e a7       	std	Y+46, r25	; 0x2e
     c80:	af a7       	std	Y+47, r26	; 0x2f
     c82:	b8 ab       	std	Y+48, r27	; 0x30
     c84:	28 c0       	rjmp	.+80     	; 0xcd6 <STPR_HalfStep_Right+0x2a4>
     c86:	80 ed       	ldi	r24, 0xD0	; 208
     c88:	97 e0       	ldi	r25, 0x07	; 7
     c8a:	a0 e0       	ldi	r26, 0x00	; 0
     c8c:	b0 e0       	ldi	r27, 0x00	; 0
     c8e:	89 a7       	std	Y+41, r24	; 0x29
     c90:	9a a7       	std	Y+42, r25	; 0x2a
     c92:	ab a7       	std	Y+43, r26	; 0x2b
     c94:	bc a7       	std	Y+44, r27	; 0x2c
     c96:	0c c0       	rjmp	.+24     	; 0xcb0 <STPR_HalfStep_Right+0x27e>
     c98:	00 00       	nop
     c9a:	89 a5       	ldd	r24, Y+41	; 0x29
     c9c:	9a a5       	ldd	r25, Y+42	; 0x2a
     c9e:	ab a5       	ldd	r26, Y+43	; 0x2b
     ca0:	bc a5       	ldd	r27, Y+44	; 0x2c
     ca2:	01 97       	sbiw	r24, 0x01	; 1
     ca4:	a1 09       	sbc	r26, r1
     ca6:	b1 09       	sbc	r27, r1
     ca8:	89 a7       	std	Y+41, r24	; 0x29
     caa:	9a a7       	std	Y+42, r25	; 0x2a
     cac:	ab a7       	std	Y+43, r26	; 0x2b
     cae:	bc a7       	std	Y+44, r27	; 0x2c
     cb0:	89 a5       	ldd	r24, Y+41	; 0x29
     cb2:	9a a5       	ldd	r25, Y+42	; 0x2a
     cb4:	ab a5       	ldd	r26, Y+43	; 0x2b
     cb6:	bc a5       	ldd	r27, Y+44	; 0x2c
     cb8:	00 97       	sbiw	r24, 0x00	; 0
     cba:	a1 05       	cpc	r26, r1
     cbc:	b1 05       	cpc	r27, r1
     cbe:	61 f7       	brne	.-40     	; 0xc98 <STPR_HalfStep_Right+0x266>
     cc0:	8d a5       	ldd	r24, Y+45	; 0x2d
     cc2:	9e a5       	ldd	r25, Y+46	; 0x2e
     cc4:	af a5       	ldd	r26, Y+47	; 0x2f
     cc6:	b8 a9       	ldd	r27, Y+48	; 0x30
     cc8:	01 97       	sbiw	r24, 0x01	; 1
     cca:	a1 09       	sbc	r26, r1
     ccc:	b1 09       	sbc	r27, r1
     cce:	8d a7       	std	Y+45, r24	; 0x2d
     cd0:	9e a7       	std	Y+46, r25	; 0x2e
     cd2:	af a7       	std	Y+47, r26	; 0x2f
     cd4:	b8 ab       	std	Y+48, r27	; 0x30
     cd6:	8d a5       	ldd	r24, Y+45	; 0x2d
     cd8:	9e a5       	ldd	r25, Y+46	; 0x2e
     cda:	af a5       	ldd	r26, Y+47	; 0x2f
     cdc:	b8 a9       	ldd	r27, Y+48	; 0x30
     cde:	00 97       	sbiw	r24, 0x00	; 0
     ce0:	a1 05       	cpc	r26, r1
     ce2:	b1 05       	cpc	r27, r1
     ce4:	81 f6       	brne	.-96     	; 0xc86 <STPR_HalfStep_Right+0x254>
	DIO_enuWritePin(STPR_COIL_1,DIO_LOW); //deactivate coil 2,3
     ce6:	89 e1       	ldi	r24, 0x19	; 25
     ce8:	60 e0       	ldi	r22, 0x00	; 0
     cea:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	DIO_enuWritePin(STPR_COIL_2,DIO_LOW);
     cee:	8a e1       	ldi	r24, 0x1A	; 26
     cf0:	60 e0       	ldi	r22, 0x00	; 0
     cf2:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	DIO_enuWritePin(STPR_COIL_2,DIO_HIGH); //activate coil 3
     cf6:	8a e1       	ldi	r24, 0x1A	; 26
     cf8:	61 e0       	ldi	r22, 0x01	; 1
     cfa:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	Delay_ms(speed);
     cfe:	fe 01       	movw	r30, r28
     d00:	e7 5b       	subi	r30, 0xB7	; 183
     d02:	ff 4f       	sbci	r31, 0xFF	; 255
     d04:	80 81       	ld	r24, Z
     d06:	86 95       	lsr	r24
     d08:	86 95       	lsr	r24
     d0a:	86 95       	lsr	r24
     d0c:	88 2f       	mov	r24, r24
     d0e:	90 e0       	ldi	r25, 0x00	; 0
     d10:	a0 e0       	ldi	r26, 0x00	; 0
     d12:	b0 e0       	ldi	r27, 0x00	; 0
     d14:	8d a3       	std	Y+37, r24	; 0x25
     d16:	9e a3       	std	Y+38, r25	; 0x26
     d18:	af a3       	std	Y+39, r26	; 0x27
     d1a:	b8 a7       	std	Y+40, r27	; 0x28
     d1c:	28 c0       	rjmp	.+80     	; 0xd6e <STPR_HalfStep_Right+0x33c>
     d1e:	80 ed       	ldi	r24, 0xD0	; 208
     d20:	97 e0       	ldi	r25, 0x07	; 7
     d22:	a0 e0       	ldi	r26, 0x00	; 0
     d24:	b0 e0       	ldi	r27, 0x00	; 0
     d26:	89 a3       	std	Y+33, r24	; 0x21
     d28:	9a a3       	std	Y+34, r25	; 0x22
     d2a:	ab a3       	std	Y+35, r26	; 0x23
     d2c:	bc a3       	std	Y+36, r27	; 0x24
     d2e:	0c c0       	rjmp	.+24     	; 0xd48 <STPR_HalfStep_Right+0x316>
     d30:	00 00       	nop
     d32:	89 a1       	ldd	r24, Y+33	; 0x21
     d34:	9a a1       	ldd	r25, Y+34	; 0x22
     d36:	ab a1       	ldd	r26, Y+35	; 0x23
     d38:	bc a1       	ldd	r27, Y+36	; 0x24
     d3a:	01 97       	sbiw	r24, 0x01	; 1
     d3c:	a1 09       	sbc	r26, r1
     d3e:	b1 09       	sbc	r27, r1
     d40:	89 a3       	std	Y+33, r24	; 0x21
     d42:	9a a3       	std	Y+34, r25	; 0x22
     d44:	ab a3       	std	Y+35, r26	; 0x23
     d46:	bc a3       	std	Y+36, r27	; 0x24
     d48:	89 a1       	ldd	r24, Y+33	; 0x21
     d4a:	9a a1       	ldd	r25, Y+34	; 0x22
     d4c:	ab a1       	ldd	r26, Y+35	; 0x23
     d4e:	bc a1       	ldd	r27, Y+36	; 0x24
     d50:	00 97       	sbiw	r24, 0x00	; 0
     d52:	a1 05       	cpc	r26, r1
     d54:	b1 05       	cpc	r27, r1
     d56:	61 f7       	brne	.-40     	; 0xd30 <STPR_HalfStep_Right+0x2fe>
     d58:	8d a1       	ldd	r24, Y+37	; 0x25
     d5a:	9e a1       	ldd	r25, Y+38	; 0x26
     d5c:	af a1       	ldd	r26, Y+39	; 0x27
     d5e:	b8 a5       	ldd	r27, Y+40	; 0x28
     d60:	01 97       	sbiw	r24, 0x01	; 1
     d62:	a1 09       	sbc	r26, r1
     d64:	b1 09       	sbc	r27, r1
     d66:	8d a3       	std	Y+37, r24	; 0x25
     d68:	9e a3       	std	Y+38, r25	; 0x26
     d6a:	af a3       	std	Y+39, r26	; 0x27
     d6c:	b8 a7       	std	Y+40, r27	; 0x28
     d6e:	8d a1       	ldd	r24, Y+37	; 0x25
     d70:	9e a1       	ldd	r25, Y+38	; 0x26
     d72:	af a1       	ldd	r26, Y+39	; 0x27
     d74:	b8 a5       	ldd	r27, Y+40	; 0x28
     d76:	00 97       	sbiw	r24, 0x00	; 0
     d78:	a1 05       	cpc	r26, r1
     d7a:	b1 05       	cpc	r27, r1
     d7c:	81 f6       	brne	.-96     	; 0xd1e <STPR_HalfStep_Right+0x2ec>
	DIO_enuWritePin(STPR_COIL_2,DIO_LOW);
     d7e:	8a e1       	ldi	r24, 0x1A	; 26
     d80:	60 e0       	ldi	r22, 0x00	; 0
     d82:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	DIO_enuWritePin(STPR_COIL_2,DIO_HIGH); //activate coil 3,4
     d86:	8a e1       	ldi	r24, 0x1A	; 26
     d88:	61 e0       	ldi	r22, 0x01	; 1
     d8a:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	DIO_enuWritePin(STPR_COIL_3,DIO_HIGH);
     d8e:	8b e1       	ldi	r24, 0x1B	; 27
     d90:	61 e0       	ldi	r22, 0x01	; 1
     d92:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	Delay_ms(speed);
     d96:	fe 01       	movw	r30, r28
     d98:	e7 5b       	subi	r30, 0xB7	; 183
     d9a:	ff 4f       	sbci	r31, 0xFF	; 255
     d9c:	80 81       	ld	r24, Z
     d9e:	86 95       	lsr	r24
     da0:	86 95       	lsr	r24
     da2:	86 95       	lsr	r24
     da4:	88 2f       	mov	r24, r24
     da6:	90 e0       	ldi	r25, 0x00	; 0
     da8:	a0 e0       	ldi	r26, 0x00	; 0
     daa:	b0 e0       	ldi	r27, 0x00	; 0
     dac:	8d 8f       	std	Y+29, r24	; 0x1d
     dae:	9e 8f       	std	Y+30, r25	; 0x1e
     db0:	af 8f       	std	Y+31, r26	; 0x1f
     db2:	b8 a3       	std	Y+32, r27	; 0x20
     db4:	28 c0       	rjmp	.+80     	; 0xe06 <STPR_HalfStep_Right+0x3d4>
     db6:	80 ed       	ldi	r24, 0xD0	; 208
     db8:	97 e0       	ldi	r25, 0x07	; 7
     dba:	a0 e0       	ldi	r26, 0x00	; 0
     dbc:	b0 e0       	ldi	r27, 0x00	; 0
     dbe:	89 8f       	std	Y+25, r24	; 0x19
     dc0:	9a 8f       	std	Y+26, r25	; 0x1a
     dc2:	ab 8f       	std	Y+27, r26	; 0x1b
     dc4:	bc 8f       	std	Y+28, r27	; 0x1c
     dc6:	0c c0       	rjmp	.+24     	; 0xde0 <STPR_HalfStep_Right+0x3ae>
     dc8:	00 00       	nop
     dca:	89 8d       	ldd	r24, Y+25	; 0x19
     dcc:	9a 8d       	ldd	r25, Y+26	; 0x1a
     dce:	ab 8d       	ldd	r26, Y+27	; 0x1b
     dd0:	bc 8d       	ldd	r27, Y+28	; 0x1c
     dd2:	01 97       	sbiw	r24, 0x01	; 1
     dd4:	a1 09       	sbc	r26, r1
     dd6:	b1 09       	sbc	r27, r1
     dd8:	89 8f       	std	Y+25, r24	; 0x19
     dda:	9a 8f       	std	Y+26, r25	; 0x1a
     ddc:	ab 8f       	std	Y+27, r26	; 0x1b
     dde:	bc 8f       	std	Y+28, r27	; 0x1c
     de0:	89 8d       	ldd	r24, Y+25	; 0x19
     de2:	9a 8d       	ldd	r25, Y+26	; 0x1a
     de4:	ab 8d       	ldd	r26, Y+27	; 0x1b
     de6:	bc 8d       	ldd	r27, Y+28	; 0x1c
     de8:	00 97       	sbiw	r24, 0x00	; 0
     dea:	a1 05       	cpc	r26, r1
     dec:	b1 05       	cpc	r27, r1
     dee:	61 f7       	brne	.-40     	; 0xdc8 <STPR_HalfStep_Right+0x396>
     df0:	8d 8d       	ldd	r24, Y+29	; 0x1d
     df2:	9e 8d       	ldd	r25, Y+30	; 0x1e
     df4:	af 8d       	ldd	r26, Y+31	; 0x1f
     df6:	b8 a1       	ldd	r27, Y+32	; 0x20
     df8:	01 97       	sbiw	r24, 0x01	; 1
     dfa:	a1 09       	sbc	r26, r1
     dfc:	b1 09       	sbc	r27, r1
     dfe:	8d 8f       	std	Y+29, r24	; 0x1d
     e00:	9e 8f       	std	Y+30, r25	; 0x1e
     e02:	af 8f       	std	Y+31, r26	; 0x1f
     e04:	b8 a3       	std	Y+32, r27	; 0x20
     e06:	8d 8d       	ldd	r24, Y+29	; 0x1d
     e08:	9e 8d       	ldd	r25, Y+30	; 0x1e
     e0a:	af 8d       	ldd	r26, Y+31	; 0x1f
     e0c:	b8 a1       	ldd	r27, Y+32	; 0x20
     e0e:	00 97       	sbiw	r24, 0x00	; 0
     e10:	a1 05       	cpc	r26, r1
     e12:	b1 05       	cpc	r27, r1
     e14:	81 f6       	brne	.-96     	; 0xdb6 <STPR_HalfStep_Right+0x384>
	DIO_enuWritePin(STPR_COIL_2,DIO_LOW); //deactivate coil 3,4
     e16:	8a e1       	ldi	r24, 0x1A	; 26
     e18:	60 e0       	ldi	r22, 0x00	; 0
     e1a:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	DIO_enuWritePin(STPR_COIL_3,DIO_LOW);
     e1e:	8b e1       	ldi	r24, 0x1B	; 27
     e20:	60 e0       	ldi	r22, 0x00	; 0
     e22:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	DIO_enuWritePin(STPR_COIL_3,DIO_HIGH); //activate coil 4
     e26:	8b e1       	ldi	r24, 0x1B	; 27
     e28:	61 e0       	ldi	r22, 0x01	; 1
     e2a:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	Delay_ms(speed);
     e2e:	fe 01       	movw	r30, r28
     e30:	e7 5b       	subi	r30, 0xB7	; 183
     e32:	ff 4f       	sbci	r31, 0xFF	; 255
     e34:	80 81       	ld	r24, Z
     e36:	86 95       	lsr	r24
     e38:	86 95       	lsr	r24
     e3a:	86 95       	lsr	r24
     e3c:	88 2f       	mov	r24, r24
     e3e:	90 e0       	ldi	r25, 0x00	; 0
     e40:	a0 e0       	ldi	r26, 0x00	; 0
     e42:	b0 e0       	ldi	r27, 0x00	; 0
     e44:	8d 8b       	std	Y+21, r24	; 0x15
     e46:	9e 8b       	std	Y+22, r25	; 0x16
     e48:	af 8b       	std	Y+23, r26	; 0x17
     e4a:	b8 8f       	std	Y+24, r27	; 0x18
     e4c:	28 c0       	rjmp	.+80     	; 0xe9e <STPR_HalfStep_Right+0x46c>
     e4e:	80 ed       	ldi	r24, 0xD0	; 208
     e50:	97 e0       	ldi	r25, 0x07	; 7
     e52:	a0 e0       	ldi	r26, 0x00	; 0
     e54:	b0 e0       	ldi	r27, 0x00	; 0
     e56:	89 8b       	std	Y+17, r24	; 0x11
     e58:	9a 8b       	std	Y+18, r25	; 0x12
     e5a:	ab 8b       	std	Y+19, r26	; 0x13
     e5c:	bc 8b       	std	Y+20, r27	; 0x14
     e5e:	0c c0       	rjmp	.+24     	; 0xe78 <STPR_HalfStep_Right+0x446>
     e60:	00 00       	nop
     e62:	89 89       	ldd	r24, Y+17	; 0x11
     e64:	9a 89       	ldd	r25, Y+18	; 0x12
     e66:	ab 89       	ldd	r26, Y+19	; 0x13
     e68:	bc 89       	ldd	r27, Y+20	; 0x14
     e6a:	01 97       	sbiw	r24, 0x01	; 1
     e6c:	a1 09       	sbc	r26, r1
     e6e:	b1 09       	sbc	r27, r1
     e70:	89 8b       	std	Y+17, r24	; 0x11
     e72:	9a 8b       	std	Y+18, r25	; 0x12
     e74:	ab 8b       	std	Y+19, r26	; 0x13
     e76:	bc 8b       	std	Y+20, r27	; 0x14
     e78:	89 89       	ldd	r24, Y+17	; 0x11
     e7a:	9a 89       	ldd	r25, Y+18	; 0x12
     e7c:	ab 89       	ldd	r26, Y+19	; 0x13
     e7e:	bc 89       	ldd	r27, Y+20	; 0x14
     e80:	00 97       	sbiw	r24, 0x00	; 0
     e82:	a1 05       	cpc	r26, r1
     e84:	b1 05       	cpc	r27, r1
     e86:	61 f7       	brne	.-40     	; 0xe60 <STPR_HalfStep_Right+0x42e>
     e88:	8d 89       	ldd	r24, Y+21	; 0x15
     e8a:	9e 89       	ldd	r25, Y+22	; 0x16
     e8c:	af 89       	ldd	r26, Y+23	; 0x17
     e8e:	b8 8d       	ldd	r27, Y+24	; 0x18
     e90:	01 97       	sbiw	r24, 0x01	; 1
     e92:	a1 09       	sbc	r26, r1
     e94:	b1 09       	sbc	r27, r1
     e96:	8d 8b       	std	Y+21, r24	; 0x15
     e98:	9e 8b       	std	Y+22, r25	; 0x16
     e9a:	af 8b       	std	Y+23, r26	; 0x17
     e9c:	b8 8f       	std	Y+24, r27	; 0x18
     e9e:	8d 89       	ldd	r24, Y+21	; 0x15
     ea0:	9e 89       	ldd	r25, Y+22	; 0x16
     ea2:	af 89       	ldd	r26, Y+23	; 0x17
     ea4:	b8 8d       	ldd	r27, Y+24	; 0x18
     ea6:	00 97       	sbiw	r24, 0x00	; 0
     ea8:	a1 05       	cpc	r26, r1
     eaa:	b1 05       	cpc	r27, r1
     eac:	81 f6       	brne	.-96     	; 0xe4e <STPR_HalfStep_Right+0x41c>
	DIO_enuWritePin(STPR_COIL_3,DIO_LOW);
     eae:	8b e1       	ldi	r24, 0x1B	; 27
     eb0:	60 e0       	ldi	r22, 0x00	; 0
     eb2:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	DIO_enuWritePin(STPR_COIL_0,DIO_HIGH);  //activate coil 1,4
     eb6:	88 e1       	ldi	r24, 0x18	; 24
     eb8:	61 e0       	ldi	r22, 0x01	; 1
     eba:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	DIO_enuWritePin(STPR_COIL_3,DIO_HIGH);
     ebe:	8b e1       	ldi	r24, 0x1B	; 27
     ec0:	61 e0       	ldi	r22, 0x01	; 1
     ec2:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	Delay_ms(speed);
     ec6:	fe 01       	movw	r30, r28
     ec8:	e7 5b       	subi	r30, 0xB7	; 183
     eca:	ff 4f       	sbci	r31, 0xFF	; 255
     ecc:	80 81       	ld	r24, Z
     ece:	86 95       	lsr	r24
     ed0:	86 95       	lsr	r24
     ed2:	86 95       	lsr	r24
     ed4:	88 2f       	mov	r24, r24
     ed6:	90 e0       	ldi	r25, 0x00	; 0
     ed8:	a0 e0       	ldi	r26, 0x00	; 0
     eda:	b0 e0       	ldi	r27, 0x00	; 0
     edc:	8d 87       	std	Y+13, r24	; 0x0d
     ede:	9e 87       	std	Y+14, r25	; 0x0e
     ee0:	af 87       	std	Y+15, r26	; 0x0f
     ee2:	b8 8b       	std	Y+16, r27	; 0x10
     ee4:	28 c0       	rjmp	.+80     	; 0xf36 <STPR_HalfStep_Right+0x504>
     ee6:	80 ed       	ldi	r24, 0xD0	; 208
     ee8:	97 e0       	ldi	r25, 0x07	; 7
     eea:	a0 e0       	ldi	r26, 0x00	; 0
     eec:	b0 e0       	ldi	r27, 0x00	; 0
     eee:	89 87       	std	Y+9, r24	; 0x09
     ef0:	9a 87       	std	Y+10, r25	; 0x0a
     ef2:	ab 87       	std	Y+11, r26	; 0x0b
     ef4:	bc 87       	std	Y+12, r27	; 0x0c
     ef6:	0c c0       	rjmp	.+24     	; 0xf10 <STPR_HalfStep_Right+0x4de>
     ef8:	00 00       	nop
     efa:	89 85       	ldd	r24, Y+9	; 0x09
     efc:	9a 85       	ldd	r25, Y+10	; 0x0a
     efe:	ab 85       	ldd	r26, Y+11	; 0x0b
     f00:	bc 85       	ldd	r27, Y+12	; 0x0c
     f02:	01 97       	sbiw	r24, 0x01	; 1
     f04:	a1 09       	sbc	r26, r1
     f06:	b1 09       	sbc	r27, r1
     f08:	89 87       	std	Y+9, r24	; 0x09
     f0a:	9a 87       	std	Y+10, r25	; 0x0a
     f0c:	ab 87       	std	Y+11, r26	; 0x0b
     f0e:	bc 87       	std	Y+12, r27	; 0x0c
     f10:	89 85       	ldd	r24, Y+9	; 0x09
     f12:	9a 85       	ldd	r25, Y+10	; 0x0a
     f14:	ab 85       	ldd	r26, Y+11	; 0x0b
     f16:	bc 85       	ldd	r27, Y+12	; 0x0c
     f18:	00 97       	sbiw	r24, 0x00	; 0
     f1a:	a1 05       	cpc	r26, r1
     f1c:	b1 05       	cpc	r27, r1
     f1e:	61 f7       	brne	.-40     	; 0xef8 <STPR_HalfStep_Right+0x4c6>
     f20:	8d 85       	ldd	r24, Y+13	; 0x0d
     f22:	9e 85       	ldd	r25, Y+14	; 0x0e
     f24:	af 85       	ldd	r26, Y+15	; 0x0f
     f26:	b8 89       	ldd	r27, Y+16	; 0x10
     f28:	01 97       	sbiw	r24, 0x01	; 1
     f2a:	a1 09       	sbc	r26, r1
     f2c:	b1 09       	sbc	r27, r1
     f2e:	8d 87       	std	Y+13, r24	; 0x0d
     f30:	9e 87       	std	Y+14, r25	; 0x0e
     f32:	af 87       	std	Y+15, r26	; 0x0f
     f34:	b8 8b       	std	Y+16, r27	; 0x10
     f36:	8d 85       	ldd	r24, Y+13	; 0x0d
     f38:	9e 85       	ldd	r25, Y+14	; 0x0e
     f3a:	af 85       	ldd	r26, Y+15	; 0x0f
     f3c:	b8 89       	ldd	r27, Y+16	; 0x10
     f3e:	00 97       	sbiw	r24, 0x00	; 0
     f40:	a1 05       	cpc	r26, r1
     f42:	b1 05       	cpc	r27, r1
     f44:	81 f6       	brne	.-96     	; 0xee6 <STPR_HalfStep_Right+0x4b4>
	DIO_enuWritePin(STPR_COIL_0,DIO_LOW);  //deactivate coil 1,4
     f46:	88 e1       	ldi	r24, 0x18	; 24
     f48:	60 e0       	ldi	r22, 0x00	; 0
     f4a:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	DIO_enuWritePin(STPR_COIL_3,DIO_LOW);
     f4e:	8b e1       	ldi	r24, 0x1B	; 27
     f50:	60 e0       	ldi	r22, 0x00	; 0
     f52:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	DIO_enuWritePin(STPR_COIL_0,DIO_HIGH);
     f56:	88 e1       	ldi	r24, 0x18	; 24
     f58:	61 e0       	ldi	r22, 0x01	; 1
     f5a:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	Delay_ms(speed);
     f5e:	fe 01       	movw	r30, r28
     f60:	e7 5b       	subi	r30, 0xB7	; 183
     f62:	ff 4f       	sbci	r31, 0xFF	; 255
     f64:	80 81       	ld	r24, Z
     f66:	86 95       	lsr	r24
     f68:	86 95       	lsr	r24
     f6a:	86 95       	lsr	r24
     f6c:	88 2f       	mov	r24, r24
     f6e:	90 e0       	ldi	r25, 0x00	; 0
     f70:	a0 e0       	ldi	r26, 0x00	; 0
     f72:	b0 e0       	ldi	r27, 0x00	; 0
     f74:	8d 83       	std	Y+5, r24	; 0x05
     f76:	9e 83       	std	Y+6, r25	; 0x06
     f78:	af 83       	std	Y+7, r26	; 0x07
     f7a:	b8 87       	std	Y+8, r27	; 0x08
     f7c:	28 c0       	rjmp	.+80     	; 0xfce <STPR_HalfStep_Right+0x59c>
     f7e:	80 ed       	ldi	r24, 0xD0	; 208
     f80:	97 e0       	ldi	r25, 0x07	; 7
     f82:	a0 e0       	ldi	r26, 0x00	; 0
     f84:	b0 e0       	ldi	r27, 0x00	; 0
     f86:	89 83       	std	Y+1, r24	; 0x01
     f88:	9a 83       	std	Y+2, r25	; 0x02
     f8a:	ab 83       	std	Y+3, r26	; 0x03
     f8c:	bc 83       	std	Y+4, r27	; 0x04
     f8e:	0c c0       	rjmp	.+24     	; 0xfa8 <STPR_HalfStep_Right+0x576>
     f90:	00 00       	nop
     f92:	89 81       	ldd	r24, Y+1	; 0x01
     f94:	9a 81       	ldd	r25, Y+2	; 0x02
     f96:	ab 81       	ldd	r26, Y+3	; 0x03
     f98:	bc 81       	ldd	r27, Y+4	; 0x04
     f9a:	01 97       	sbiw	r24, 0x01	; 1
     f9c:	a1 09       	sbc	r26, r1
     f9e:	b1 09       	sbc	r27, r1
     fa0:	89 83       	std	Y+1, r24	; 0x01
     fa2:	9a 83       	std	Y+2, r25	; 0x02
     fa4:	ab 83       	std	Y+3, r26	; 0x03
     fa6:	bc 83       	std	Y+4, r27	; 0x04
     fa8:	89 81       	ldd	r24, Y+1	; 0x01
     faa:	9a 81       	ldd	r25, Y+2	; 0x02
     fac:	ab 81       	ldd	r26, Y+3	; 0x03
     fae:	bc 81       	ldd	r27, Y+4	; 0x04
     fb0:	00 97       	sbiw	r24, 0x00	; 0
     fb2:	a1 05       	cpc	r26, r1
     fb4:	b1 05       	cpc	r27, r1
     fb6:	61 f7       	brne	.-40     	; 0xf90 <STPR_HalfStep_Right+0x55e>
     fb8:	8d 81       	ldd	r24, Y+5	; 0x05
     fba:	9e 81       	ldd	r25, Y+6	; 0x06
     fbc:	af 81       	ldd	r26, Y+7	; 0x07
     fbe:	b8 85       	ldd	r27, Y+8	; 0x08
     fc0:	01 97       	sbiw	r24, 0x01	; 1
     fc2:	a1 09       	sbc	r26, r1
     fc4:	b1 09       	sbc	r27, r1
     fc6:	8d 83       	std	Y+5, r24	; 0x05
     fc8:	9e 83       	std	Y+6, r25	; 0x06
     fca:	af 83       	std	Y+7, r26	; 0x07
     fcc:	b8 87       	std	Y+8, r27	; 0x08
     fce:	8d 81       	ldd	r24, Y+5	; 0x05
     fd0:	9e 81       	ldd	r25, Y+6	; 0x06
     fd2:	af 81       	ldd	r26, Y+7	; 0x07
     fd4:	b8 85       	ldd	r27, Y+8	; 0x08
     fd6:	00 97       	sbiw	r24, 0x00	; 0
     fd8:	a1 05       	cpc	r26, r1
     fda:	b1 05       	cpc	r27, r1
     fdc:	81 f6       	brne	.-96     	; 0xf7e <STPR_HalfStep_Right+0x54c>
}
     fde:	c7 5b       	subi	r28, 0xB7	; 183
     fe0:	df 4f       	sbci	r29, 0xFF	; 255
     fe2:	0f b6       	in	r0, 0x3f	; 63
     fe4:	f8 94       	cli
     fe6:	de bf       	out	0x3e, r29	; 62
     fe8:	0f be       	out	0x3f, r0	; 63
     fea:	cd bf       	out	0x3d, r28	; 61
     fec:	cf 91       	pop	r28
     fee:	df 91       	pop	r29
     ff0:	08 95       	ret

00000ff2 <STPR_HalfStep_Left>:

void STPR_HalfStep_Left(u8 speed)
{
     ff2:	df 93       	push	r29
     ff4:	cf 93       	push	r28
     ff6:	cd b7       	in	r28, 0x3d	; 61
     ff8:	de b7       	in	r29, 0x3e	; 62
     ffa:	c1 54       	subi	r28, 0x41	; 65
     ffc:	d0 40       	sbci	r29, 0x00	; 0
     ffe:	0f b6       	in	r0, 0x3f	; 63
    1000:	f8 94       	cli
    1002:	de bf       	out	0x3e, r29	; 62
    1004:	0f be       	out	0x3f, r0	; 63
    1006:	cd bf       	out	0x3d, r28	; 61
    1008:	fe 01       	movw	r30, r28
    100a:	ef 5b       	subi	r30, 0xBF	; 191
    100c:	ff 4f       	sbci	r31, 0xFF	; 255
    100e:	80 83       	st	Z, r24
	//half step
	DIO_enuWritePin(STPR_COIL_0,DIO_HIGH);  //deactivate coil 1,4
    1010:	88 e1       	ldi	r24, 0x18	; 24
    1012:	61 e0       	ldi	r22, 0x01	; 1
    1014:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	DIO_enuWritePin(STPR_COIL_3,DIO_HIGH);
    1018:	8b e1       	ldi	r24, 0x1B	; 27
    101a:	61 e0       	ldi	r22, 0x01	; 1
    101c:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	Delay_ms(speed);
    1020:	fe 01       	movw	r30, r28
    1022:	ef 5b       	subi	r30, 0xBF	; 191
    1024:	ff 4f       	sbci	r31, 0xFF	; 255
    1026:	80 81       	ld	r24, Z
    1028:	86 95       	lsr	r24
    102a:	86 95       	lsr	r24
    102c:	86 95       	lsr	r24
    102e:	88 2f       	mov	r24, r24
    1030:	90 e0       	ldi	r25, 0x00	; 0
    1032:	a0 e0       	ldi	r26, 0x00	; 0
    1034:	b0 e0       	ldi	r27, 0x00	; 0
    1036:	fe 01       	movw	r30, r28
    1038:	fd 96       	adiw	r30, 0x3d	; 61
    103a:	80 83       	st	Z, r24
    103c:	91 83       	std	Z+1, r25	; 0x01
    103e:	a2 83       	std	Z+2, r26	; 0x02
    1040:	b3 83       	std	Z+3, r27	; 0x03
    1042:	2c c0       	rjmp	.+88     	; 0x109c <STPR_HalfStep_Left+0xaa>
    1044:	80 ed       	ldi	r24, 0xD0	; 208
    1046:	97 e0       	ldi	r25, 0x07	; 7
    1048:	a0 e0       	ldi	r26, 0x00	; 0
    104a:	b0 e0       	ldi	r27, 0x00	; 0
    104c:	89 af       	std	Y+57, r24	; 0x39
    104e:	9a af       	std	Y+58, r25	; 0x3a
    1050:	ab af       	std	Y+59, r26	; 0x3b
    1052:	bc af       	std	Y+60, r27	; 0x3c
    1054:	0c c0       	rjmp	.+24     	; 0x106e <STPR_HalfStep_Left+0x7c>
    1056:	00 00       	nop
    1058:	89 ad       	ldd	r24, Y+57	; 0x39
    105a:	9a ad       	ldd	r25, Y+58	; 0x3a
    105c:	ab ad       	ldd	r26, Y+59	; 0x3b
    105e:	bc ad       	ldd	r27, Y+60	; 0x3c
    1060:	01 97       	sbiw	r24, 0x01	; 1
    1062:	a1 09       	sbc	r26, r1
    1064:	b1 09       	sbc	r27, r1
    1066:	89 af       	std	Y+57, r24	; 0x39
    1068:	9a af       	std	Y+58, r25	; 0x3a
    106a:	ab af       	std	Y+59, r26	; 0x3b
    106c:	bc af       	std	Y+60, r27	; 0x3c
    106e:	89 ad       	ldd	r24, Y+57	; 0x39
    1070:	9a ad       	ldd	r25, Y+58	; 0x3a
    1072:	ab ad       	ldd	r26, Y+59	; 0x3b
    1074:	bc ad       	ldd	r27, Y+60	; 0x3c
    1076:	00 97       	sbiw	r24, 0x00	; 0
    1078:	a1 05       	cpc	r26, r1
    107a:	b1 05       	cpc	r27, r1
    107c:	61 f7       	brne	.-40     	; 0x1056 <STPR_HalfStep_Left+0x64>
    107e:	fe 01       	movw	r30, r28
    1080:	fd 96       	adiw	r30, 0x3d	; 61
    1082:	80 81       	ld	r24, Z
    1084:	91 81       	ldd	r25, Z+1	; 0x01
    1086:	a2 81       	ldd	r26, Z+2	; 0x02
    1088:	b3 81       	ldd	r27, Z+3	; 0x03
    108a:	01 97       	sbiw	r24, 0x01	; 1
    108c:	a1 09       	sbc	r26, r1
    108e:	b1 09       	sbc	r27, r1
    1090:	fe 01       	movw	r30, r28
    1092:	fd 96       	adiw	r30, 0x3d	; 61
    1094:	80 83       	st	Z, r24
    1096:	91 83       	std	Z+1, r25	; 0x01
    1098:	a2 83       	std	Z+2, r26	; 0x02
    109a:	b3 83       	std	Z+3, r27	; 0x03
    109c:	fe 01       	movw	r30, r28
    109e:	fd 96       	adiw	r30, 0x3d	; 61
    10a0:	80 81       	ld	r24, Z
    10a2:	91 81       	ldd	r25, Z+1	; 0x01
    10a4:	a2 81       	ldd	r26, Z+2	; 0x02
    10a6:	b3 81       	ldd	r27, Z+3	; 0x03
    10a8:	00 97       	sbiw	r24, 0x00	; 0
    10aa:	a1 05       	cpc	r26, r1
    10ac:	b1 05       	cpc	r27, r1
    10ae:	51 f6       	brne	.-108    	; 0x1044 <STPR_HalfStep_Left+0x52>
	DIO_enuWritePin(STPR_COIL_0,DIO_LOW);  //deactivate coil 1,4
    10b0:	88 e1       	ldi	r24, 0x18	; 24
    10b2:	60 e0       	ldi	r22, 0x00	; 0
    10b4:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	DIO_enuWritePin(STPR_COIL_3,DIO_LOW);
    10b8:	8b e1       	ldi	r24, 0x1B	; 27
    10ba:	60 e0       	ldi	r22, 0x00	; 0
    10bc:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	DIO_enuWritePin(STPR_COIL_3,DIO_HIGH);  //activate coil 4
    10c0:	8b e1       	ldi	r24, 0x1B	; 27
    10c2:	61 e0       	ldi	r22, 0x01	; 1
    10c4:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	Delay_ms(speed);
    10c8:	fe 01       	movw	r30, r28
    10ca:	ef 5b       	subi	r30, 0xBF	; 191
    10cc:	ff 4f       	sbci	r31, 0xFF	; 255
    10ce:	80 81       	ld	r24, Z
    10d0:	86 95       	lsr	r24
    10d2:	86 95       	lsr	r24
    10d4:	86 95       	lsr	r24
    10d6:	88 2f       	mov	r24, r24
    10d8:	90 e0       	ldi	r25, 0x00	; 0
    10da:	a0 e0       	ldi	r26, 0x00	; 0
    10dc:	b0 e0       	ldi	r27, 0x00	; 0
    10de:	8d ab       	std	Y+53, r24	; 0x35
    10e0:	9e ab       	std	Y+54, r25	; 0x36
    10e2:	af ab       	std	Y+55, r26	; 0x37
    10e4:	b8 af       	std	Y+56, r27	; 0x38
    10e6:	28 c0       	rjmp	.+80     	; 0x1138 <STPR_HalfStep_Left+0x146>
    10e8:	80 ed       	ldi	r24, 0xD0	; 208
    10ea:	97 e0       	ldi	r25, 0x07	; 7
    10ec:	a0 e0       	ldi	r26, 0x00	; 0
    10ee:	b0 e0       	ldi	r27, 0x00	; 0
    10f0:	89 ab       	std	Y+49, r24	; 0x31
    10f2:	9a ab       	std	Y+50, r25	; 0x32
    10f4:	ab ab       	std	Y+51, r26	; 0x33
    10f6:	bc ab       	std	Y+52, r27	; 0x34
    10f8:	0c c0       	rjmp	.+24     	; 0x1112 <STPR_HalfStep_Left+0x120>
    10fa:	00 00       	nop
    10fc:	89 a9       	ldd	r24, Y+49	; 0x31
    10fe:	9a a9       	ldd	r25, Y+50	; 0x32
    1100:	ab a9       	ldd	r26, Y+51	; 0x33
    1102:	bc a9       	ldd	r27, Y+52	; 0x34
    1104:	01 97       	sbiw	r24, 0x01	; 1
    1106:	a1 09       	sbc	r26, r1
    1108:	b1 09       	sbc	r27, r1
    110a:	89 ab       	std	Y+49, r24	; 0x31
    110c:	9a ab       	std	Y+50, r25	; 0x32
    110e:	ab ab       	std	Y+51, r26	; 0x33
    1110:	bc ab       	std	Y+52, r27	; 0x34
    1112:	89 a9       	ldd	r24, Y+49	; 0x31
    1114:	9a a9       	ldd	r25, Y+50	; 0x32
    1116:	ab a9       	ldd	r26, Y+51	; 0x33
    1118:	bc a9       	ldd	r27, Y+52	; 0x34
    111a:	00 97       	sbiw	r24, 0x00	; 0
    111c:	a1 05       	cpc	r26, r1
    111e:	b1 05       	cpc	r27, r1
    1120:	61 f7       	brne	.-40     	; 0x10fa <STPR_HalfStep_Left+0x108>
    1122:	8d a9       	ldd	r24, Y+53	; 0x35
    1124:	9e a9       	ldd	r25, Y+54	; 0x36
    1126:	af a9       	ldd	r26, Y+55	; 0x37
    1128:	b8 ad       	ldd	r27, Y+56	; 0x38
    112a:	01 97       	sbiw	r24, 0x01	; 1
    112c:	a1 09       	sbc	r26, r1
    112e:	b1 09       	sbc	r27, r1
    1130:	8d ab       	std	Y+53, r24	; 0x35
    1132:	9e ab       	std	Y+54, r25	; 0x36
    1134:	af ab       	std	Y+55, r26	; 0x37
    1136:	b8 af       	std	Y+56, r27	; 0x38
    1138:	8d a9       	ldd	r24, Y+53	; 0x35
    113a:	9e a9       	ldd	r25, Y+54	; 0x36
    113c:	af a9       	ldd	r26, Y+55	; 0x37
    113e:	b8 ad       	ldd	r27, Y+56	; 0x38
    1140:	00 97       	sbiw	r24, 0x00	; 0
    1142:	a1 05       	cpc	r26, r1
    1144:	b1 05       	cpc	r27, r1
    1146:	81 f6       	brne	.-96     	; 0x10e8 <STPR_HalfStep_Left+0xf6>
	DIO_enuWritePin(STPR_COIL_3,DIO_LOW);
    1148:	8b e1       	ldi	r24, 0x1B	; 27
    114a:	60 e0       	ldi	r22, 0x00	; 0
    114c:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	DIO_enuWritePin(STPR_COIL_3,DIO_HIGH); //activate coil 3,4
    1150:	8b e1       	ldi	r24, 0x1B	; 27
    1152:	61 e0       	ldi	r22, 0x01	; 1
    1154:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	DIO_enuWritePin(STPR_COIL_2,DIO_HIGH);
    1158:	8a e1       	ldi	r24, 0x1A	; 26
    115a:	61 e0       	ldi	r22, 0x01	; 1
    115c:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	Delay_ms(speed);
    1160:	fe 01       	movw	r30, r28
    1162:	ef 5b       	subi	r30, 0xBF	; 191
    1164:	ff 4f       	sbci	r31, 0xFF	; 255
    1166:	80 81       	ld	r24, Z
    1168:	86 95       	lsr	r24
    116a:	86 95       	lsr	r24
    116c:	86 95       	lsr	r24
    116e:	88 2f       	mov	r24, r24
    1170:	90 e0       	ldi	r25, 0x00	; 0
    1172:	a0 e0       	ldi	r26, 0x00	; 0
    1174:	b0 e0       	ldi	r27, 0x00	; 0
    1176:	8d a7       	std	Y+45, r24	; 0x2d
    1178:	9e a7       	std	Y+46, r25	; 0x2e
    117a:	af a7       	std	Y+47, r26	; 0x2f
    117c:	b8 ab       	std	Y+48, r27	; 0x30
    117e:	28 c0       	rjmp	.+80     	; 0x11d0 <STPR_HalfStep_Left+0x1de>
    1180:	80 ed       	ldi	r24, 0xD0	; 208
    1182:	97 e0       	ldi	r25, 0x07	; 7
    1184:	a0 e0       	ldi	r26, 0x00	; 0
    1186:	b0 e0       	ldi	r27, 0x00	; 0
    1188:	89 a7       	std	Y+41, r24	; 0x29
    118a:	9a a7       	std	Y+42, r25	; 0x2a
    118c:	ab a7       	std	Y+43, r26	; 0x2b
    118e:	bc a7       	std	Y+44, r27	; 0x2c
    1190:	0c c0       	rjmp	.+24     	; 0x11aa <STPR_HalfStep_Left+0x1b8>
    1192:	00 00       	nop
    1194:	89 a5       	ldd	r24, Y+41	; 0x29
    1196:	9a a5       	ldd	r25, Y+42	; 0x2a
    1198:	ab a5       	ldd	r26, Y+43	; 0x2b
    119a:	bc a5       	ldd	r27, Y+44	; 0x2c
    119c:	01 97       	sbiw	r24, 0x01	; 1
    119e:	a1 09       	sbc	r26, r1
    11a0:	b1 09       	sbc	r27, r1
    11a2:	89 a7       	std	Y+41, r24	; 0x29
    11a4:	9a a7       	std	Y+42, r25	; 0x2a
    11a6:	ab a7       	std	Y+43, r26	; 0x2b
    11a8:	bc a7       	std	Y+44, r27	; 0x2c
    11aa:	89 a5       	ldd	r24, Y+41	; 0x29
    11ac:	9a a5       	ldd	r25, Y+42	; 0x2a
    11ae:	ab a5       	ldd	r26, Y+43	; 0x2b
    11b0:	bc a5       	ldd	r27, Y+44	; 0x2c
    11b2:	00 97       	sbiw	r24, 0x00	; 0
    11b4:	a1 05       	cpc	r26, r1
    11b6:	b1 05       	cpc	r27, r1
    11b8:	61 f7       	brne	.-40     	; 0x1192 <STPR_HalfStep_Left+0x1a0>
    11ba:	8d a5       	ldd	r24, Y+45	; 0x2d
    11bc:	9e a5       	ldd	r25, Y+46	; 0x2e
    11be:	af a5       	ldd	r26, Y+47	; 0x2f
    11c0:	b8 a9       	ldd	r27, Y+48	; 0x30
    11c2:	01 97       	sbiw	r24, 0x01	; 1
    11c4:	a1 09       	sbc	r26, r1
    11c6:	b1 09       	sbc	r27, r1
    11c8:	8d a7       	std	Y+45, r24	; 0x2d
    11ca:	9e a7       	std	Y+46, r25	; 0x2e
    11cc:	af a7       	std	Y+47, r26	; 0x2f
    11ce:	b8 ab       	std	Y+48, r27	; 0x30
    11d0:	8d a5       	ldd	r24, Y+45	; 0x2d
    11d2:	9e a5       	ldd	r25, Y+46	; 0x2e
    11d4:	af a5       	ldd	r26, Y+47	; 0x2f
    11d6:	b8 a9       	ldd	r27, Y+48	; 0x30
    11d8:	00 97       	sbiw	r24, 0x00	; 0
    11da:	a1 05       	cpc	r26, r1
    11dc:	b1 05       	cpc	r27, r1
    11de:	81 f6       	brne	.-96     	; 0x1180 <STPR_HalfStep_Left+0x18e>
	DIO_enuWritePin(STPR_COIL_3,DIO_LOW); //deactivate coil 3,4
    11e0:	8b e1       	ldi	r24, 0x1B	; 27
    11e2:	60 e0       	ldi	r22, 0x00	; 0
    11e4:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	DIO_enuWritePin(STPR_COIL_2,DIO_LOW);
    11e8:	8a e1       	ldi	r24, 0x1A	; 26
    11ea:	60 e0       	ldi	r22, 0x00	; 0
    11ec:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	DIO_enuWritePin(STPR_COIL_2,DIO_HIGH);//activate coil 3
    11f0:	8a e1       	ldi	r24, 0x1A	; 26
    11f2:	61 e0       	ldi	r22, 0x01	; 1
    11f4:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	Delay_ms(speed);
    11f8:	fe 01       	movw	r30, r28
    11fa:	ef 5b       	subi	r30, 0xBF	; 191
    11fc:	ff 4f       	sbci	r31, 0xFF	; 255
    11fe:	80 81       	ld	r24, Z
    1200:	86 95       	lsr	r24
    1202:	86 95       	lsr	r24
    1204:	86 95       	lsr	r24
    1206:	88 2f       	mov	r24, r24
    1208:	90 e0       	ldi	r25, 0x00	; 0
    120a:	a0 e0       	ldi	r26, 0x00	; 0
    120c:	b0 e0       	ldi	r27, 0x00	; 0
    120e:	8d a3       	std	Y+37, r24	; 0x25
    1210:	9e a3       	std	Y+38, r25	; 0x26
    1212:	af a3       	std	Y+39, r26	; 0x27
    1214:	b8 a7       	std	Y+40, r27	; 0x28
    1216:	28 c0       	rjmp	.+80     	; 0x1268 <STPR_HalfStep_Left+0x276>
    1218:	80 ed       	ldi	r24, 0xD0	; 208
    121a:	97 e0       	ldi	r25, 0x07	; 7
    121c:	a0 e0       	ldi	r26, 0x00	; 0
    121e:	b0 e0       	ldi	r27, 0x00	; 0
    1220:	89 a3       	std	Y+33, r24	; 0x21
    1222:	9a a3       	std	Y+34, r25	; 0x22
    1224:	ab a3       	std	Y+35, r26	; 0x23
    1226:	bc a3       	std	Y+36, r27	; 0x24
    1228:	0c c0       	rjmp	.+24     	; 0x1242 <STPR_HalfStep_Left+0x250>
    122a:	00 00       	nop
    122c:	89 a1       	ldd	r24, Y+33	; 0x21
    122e:	9a a1       	ldd	r25, Y+34	; 0x22
    1230:	ab a1       	ldd	r26, Y+35	; 0x23
    1232:	bc a1       	ldd	r27, Y+36	; 0x24
    1234:	01 97       	sbiw	r24, 0x01	; 1
    1236:	a1 09       	sbc	r26, r1
    1238:	b1 09       	sbc	r27, r1
    123a:	89 a3       	std	Y+33, r24	; 0x21
    123c:	9a a3       	std	Y+34, r25	; 0x22
    123e:	ab a3       	std	Y+35, r26	; 0x23
    1240:	bc a3       	std	Y+36, r27	; 0x24
    1242:	89 a1       	ldd	r24, Y+33	; 0x21
    1244:	9a a1       	ldd	r25, Y+34	; 0x22
    1246:	ab a1       	ldd	r26, Y+35	; 0x23
    1248:	bc a1       	ldd	r27, Y+36	; 0x24
    124a:	00 97       	sbiw	r24, 0x00	; 0
    124c:	a1 05       	cpc	r26, r1
    124e:	b1 05       	cpc	r27, r1
    1250:	61 f7       	brne	.-40     	; 0x122a <STPR_HalfStep_Left+0x238>
    1252:	8d a1       	ldd	r24, Y+37	; 0x25
    1254:	9e a1       	ldd	r25, Y+38	; 0x26
    1256:	af a1       	ldd	r26, Y+39	; 0x27
    1258:	b8 a5       	ldd	r27, Y+40	; 0x28
    125a:	01 97       	sbiw	r24, 0x01	; 1
    125c:	a1 09       	sbc	r26, r1
    125e:	b1 09       	sbc	r27, r1
    1260:	8d a3       	std	Y+37, r24	; 0x25
    1262:	9e a3       	std	Y+38, r25	; 0x26
    1264:	af a3       	std	Y+39, r26	; 0x27
    1266:	b8 a7       	std	Y+40, r27	; 0x28
    1268:	8d a1       	ldd	r24, Y+37	; 0x25
    126a:	9e a1       	ldd	r25, Y+38	; 0x26
    126c:	af a1       	ldd	r26, Y+39	; 0x27
    126e:	b8 a5       	ldd	r27, Y+40	; 0x28
    1270:	00 97       	sbiw	r24, 0x00	; 0
    1272:	a1 05       	cpc	r26, r1
    1274:	b1 05       	cpc	r27, r1
    1276:	81 f6       	brne	.-96     	; 0x1218 <STPR_HalfStep_Left+0x226>
	DIO_enuWritePin(STPR_COIL_2,DIO_LOW);
    1278:	8a e1       	ldi	r24, 0x1A	; 26
    127a:	60 e0       	ldi	r22, 0x00	; 0
    127c:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	DIO_enuWritePin(STPR_COIL_2,DIO_HIGH); //activate coil 2,3
    1280:	8a e1       	ldi	r24, 0x1A	; 26
    1282:	61 e0       	ldi	r22, 0x01	; 1
    1284:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	DIO_enuWritePin(STPR_COIL_1,DIO_HIGH);
    1288:	89 e1       	ldi	r24, 0x19	; 25
    128a:	61 e0       	ldi	r22, 0x01	; 1
    128c:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	Delay_ms(speed);
    1290:	fe 01       	movw	r30, r28
    1292:	ef 5b       	subi	r30, 0xBF	; 191
    1294:	ff 4f       	sbci	r31, 0xFF	; 255
    1296:	80 81       	ld	r24, Z
    1298:	86 95       	lsr	r24
    129a:	86 95       	lsr	r24
    129c:	86 95       	lsr	r24
    129e:	88 2f       	mov	r24, r24
    12a0:	90 e0       	ldi	r25, 0x00	; 0
    12a2:	a0 e0       	ldi	r26, 0x00	; 0
    12a4:	b0 e0       	ldi	r27, 0x00	; 0
    12a6:	8d 8f       	std	Y+29, r24	; 0x1d
    12a8:	9e 8f       	std	Y+30, r25	; 0x1e
    12aa:	af 8f       	std	Y+31, r26	; 0x1f
    12ac:	b8 a3       	std	Y+32, r27	; 0x20
    12ae:	28 c0       	rjmp	.+80     	; 0x1300 <STPR_HalfStep_Left+0x30e>
    12b0:	80 ed       	ldi	r24, 0xD0	; 208
    12b2:	97 e0       	ldi	r25, 0x07	; 7
    12b4:	a0 e0       	ldi	r26, 0x00	; 0
    12b6:	b0 e0       	ldi	r27, 0x00	; 0
    12b8:	89 8f       	std	Y+25, r24	; 0x19
    12ba:	9a 8f       	std	Y+26, r25	; 0x1a
    12bc:	ab 8f       	std	Y+27, r26	; 0x1b
    12be:	bc 8f       	std	Y+28, r27	; 0x1c
    12c0:	0c c0       	rjmp	.+24     	; 0x12da <STPR_HalfStep_Left+0x2e8>
    12c2:	00 00       	nop
    12c4:	89 8d       	ldd	r24, Y+25	; 0x19
    12c6:	9a 8d       	ldd	r25, Y+26	; 0x1a
    12c8:	ab 8d       	ldd	r26, Y+27	; 0x1b
    12ca:	bc 8d       	ldd	r27, Y+28	; 0x1c
    12cc:	01 97       	sbiw	r24, 0x01	; 1
    12ce:	a1 09       	sbc	r26, r1
    12d0:	b1 09       	sbc	r27, r1
    12d2:	89 8f       	std	Y+25, r24	; 0x19
    12d4:	9a 8f       	std	Y+26, r25	; 0x1a
    12d6:	ab 8f       	std	Y+27, r26	; 0x1b
    12d8:	bc 8f       	std	Y+28, r27	; 0x1c
    12da:	89 8d       	ldd	r24, Y+25	; 0x19
    12dc:	9a 8d       	ldd	r25, Y+26	; 0x1a
    12de:	ab 8d       	ldd	r26, Y+27	; 0x1b
    12e0:	bc 8d       	ldd	r27, Y+28	; 0x1c
    12e2:	00 97       	sbiw	r24, 0x00	; 0
    12e4:	a1 05       	cpc	r26, r1
    12e6:	b1 05       	cpc	r27, r1
    12e8:	61 f7       	brne	.-40     	; 0x12c2 <STPR_HalfStep_Left+0x2d0>
    12ea:	8d 8d       	ldd	r24, Y+29	; 0x1d
    12ec:	9e 8d       	ldd	r25, Y+30	; 0x1e
    12ee:	af 8d       	ldd	r26, Y+31	; 0x1f
    12f0:	b8 a1       	ldd	r27, Y+32	; 0x20
    12f2:	01 97       	sbiw	r24, 0x01	; 1
    12f4:	a1 09       	sbc	r26, r1
    12f6:	b1 09       	sbc	r27, r1
    12f8:	8d 8f       	std	Y+29, r24	; 0x1d
    12fa:	9e 8f       	std	Y+30, r25	; 0x1e
    12fc:	af 8f       	std	Y+31, r26	; 0x1f
    12fe:	b8 a3       	std	Y+32, r27	; 0x20
    1300:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1302:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1304:	af 8d       	ldd	r26, Y+31	; 0x1f
    1306:	b8 a1       	ldd	r27, Y+32	; 0x20
    1308:	00 97       	sbiw	r24, 0x00	; 0
    130a:	a1 05       	cpc	r26, r1
    130c:	b1 05       	cpc	r27, r1
    130e:	81 f6       	brne	.-96     	; 0x12b0 <STPR_HalfStep_Left+0x2be>
	DIO_enuWritePin(STPR_COIL_2,DIO_LOW); //deactivate coil 2,3
    1310:	8a e1       	ldi	r24, 0x1A	; 26
    1312:	60 e0       	ldi	r22, 0x00	; 0
    1314:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	DIO_enuWritePin(STPR_COIL_1,DIO_LOW);
    1318:	89 e1       	ldi	r24, 0x19	; 25
    131a:	60 e0       	ldi	r22, 0x00	; 0
    131c:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	DIO_enuWritePin(STPR_COIL_1,DIO_HIGH);//activate coil 2
    1320:	89 e1       	ldi	r24, 0x19	; 25
    1322:	61 e0       	ldi	r22, 0x01	; 1
    1324:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	Delay_ms(speed);
    1328:	fe 01       	movw	r30, r28
    132a:	ef 5b       	subi	r30, 0xBF	; 191
    132c:	ff 4f       	sbci	r31, 0xFF	; 255
    132e:	80 81       	ld	r24, Z
    1330:	86 95       	lsr	r24
    1332:	86 95       	lsr	r24
    1334:	86 95       	lsr	r24
    1336:	88 2f       	mov	r24, r24
    1338:	90 e0       	ldi	r25, 0x00	; 0
    133a:	a0 e0       	ldi	r26, 0x00	; 0
    133c:	b0 e0       	ldi	r27, 0x00	; 0
    133e:	8d 8b       	std	Y+21, r24	; 0x15
    1340:	9e 8b       	std	Y+22, r25	; 0x16
    1342:	af 8b       	std	Y+23, r26	; 0x17
    1344:	b8 8f       	std	Y+24, r27	; 0x18
    1346:	28 c0       	rjmp	.+80     	; 0x1398 <STPR_HalfStep_Left+0x3a6>
    1348:	80 ed       	ldi	r24, 0xD0	; 208
    134a:	97 e0       	ldi	r25, 0x07	; 7
    134c:	a0 e0       	ldi	r26, 0x00	; 0
    134e:	b0 e0       	ldi	r27, 0x00	; 0
    1350:	89 8b       	std	Y+17, r24	; 0x11
    1352:	9a 8b       	std	Y+18, r25	; 0x12
    1354:	ab 8b       	std	Y+19, r26	; 0x13
    1356:	bc 8b       	std	Y+20, r27	; 0x14
    1358:	0c c0       	rjmp	.+24     	; 0x1372 <STPR_HalfStep_Left+0x380>
    135a:	00 00       	nop
    135c:	89 89       	ldd	r24, Y+17	; 0x11
    135e:	9a 89       	ldd	r25, Y+18	; 0x12
    1360:	ab 89       	ldd	r26, Y+19	; 0x13
    1362:	bc 89       	ldd	r27, Y+20	; 0x14
    1364:	01 97       	sbiw	r24, 0x01	; 1
    1366:	a1 09       	sbc	r26, r1
    1368:	b1 09       	sbc	r27, r1
    136a:	89 8b       	std	Y+17, r24	; 0x11
    136c:	9a 8b       	std	Y+18, r25	; 0x12
    136e:	ab 8b       	std	Y+19, r26	; 0x13
    1370:	bc 8b       	std	Y+20, r27	; 0x14
    1372:	89 89       	ldd	r24, Y+17	; 0x11
    1374:	9a 89       	ldd	r25, Y+18	; 0x12
    1376:	ab 89       	ldd	r26, Y+19	; 0x13
    1378:	bc 89       	ldd	r27, Y+20	; 0x14
    137a:	00 97       	sbiw	r24, 0x00	; 0
    137c:	a1 05       	cpc	r26, r1
    137e:	b1 05       	cpc	r27, r1
    1380:	61 f7       	brne	.-40     	; 0x135a <STPR_HalfStep_Left+0x368>
    1382:	8d 89       	ldd	r24, Y+21	; 0x15
    1384:	9e 89       	ldd	r25, Y+22	; 0x16
    1386:	af 89       	ldd	r26, Y+23	; 0x17
    1388:	b8 8d       	ldd	r27, Y+24	; 0x18
    138a:	01 97       	sbiw	r24, 0x01	; 1
    138c:	a1 09       	sbc	r26, r1
    138e:	b1 09       	sbc	r27, r1
    1390:	8d 8b       	std	Y+21, r24	; 0x15
    1392:	9e 8b       	std	Y+22, r25	; 0x16
    1394:	af 8b       	std	Y+23, r26	; 0x17
    1396:	b8 8f       	std	Y+24, r27	; 0x18
    1398:	8d 89       	ldd	r24, Y+21	; 0x15
    139a:	9e 89       	ldd	r25, Y+22	; 0x16
    139c:	af 89       	ldd	r26, Y+23	; 0x17
    139e:	b8 8d       	ldd	r27, Y+24	; 0x18
    13a0:	00 97       	sbiw	r24, 0x00	; 0
    13a2:	a1 05       	cpc	r26, r1
    13a4:	b1 05       	cpc	r27, r1
    13a6:	81 f6       	brne	.-96     	; 0x1348 <STPR_HalfStep_Left+0x356>
	DIO_enuWritePin(STPR_COIL_1,DIO_LOW);
    13a8:	89 e1       	ldi	r24, 0x19	; 25
    13aa:	60 e0       	ldi	r22, 0x00	; 0
    13ac:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	DIO_enuWritePin(STPR_COIL_1,DIO_HIGH); //activate coil 1,2
    13b0:	89 e1       	ldi	r24, 0x19	; 25
    13b2:	61 e0       	ldi	r22, 0x01	; 1
    13b4:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	DIO_enuWritePin(STPR_COIL_0,DIO_HIGH);
    13b8:	88 e1       	ldi	r24, 0x18	; 24
    13ba:	61 e0       	ldi	r22, 0x01	; 1
    13bc:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	Delay_ms(speed);
    13c0:	fe 01       	movw	r30, r28
    13c2:	ef 5b       	subi	r30, 0xBF	; 191
    13c4:	ff 4f       	sbci	r31, 0xFF	; 255
    13c6:	80 81       	ld	r24, Z
    13c8:	86 95       	lsr	r24
    13ca:	86 95       	lsr	r24
    13cc:	86 95       	lsr	r24
    13ce:	88 2f       	mov	r24, r24
    13d0:	90 e0       	ldi	r25, 0x00	; 0
    13d2:	a0 e0       	ldi	r26, 0x00	; 0
    13d4:	b0 e0       	ldi	r27, 0x00	; 0
    13d6:	8d 87       	std	Y+13, r24	; 0x0d
    13d8:	9e 87       	std	Y+14, r25	; 0x0e
    13da:	af 87       	std	Y+15, r26	; 0x0f
    13dc:	b8 8b       	std	Y+16, r27	; 0x10
    13de:	28 c0       	rjmp	.+80     	; 0x1430 <STPR_HalfStep_Left+0x43e>
    13e0:	80 ed       	ldi	r24, 0xD0	; 208
    13e2:	97 e0       	ldi	r25, 0x07	; 7
    13e4:	a0 e0       	ldi	r26, 0x00	; 0
    13e6:	b0 e0       	ldi	r27, 0x00	; 0
    13e8:	89 87       	std	Y+9, r24	; 0x09
    13ea:	9a 87       	std	Y+10, r25	; 0x0a
    13ec:	ab 87       	std	Y+11, r26	; 0x0b
    13ee:	bc 87       	std	Y+12, r27	; 0x0c
    13f0:	0c c0       	rjmp	.+24     	; 0x140a <STPR_HalfStep_Left+0x418>
    13f2:	00 00       	nop
    13f4:	89 85       	ldd	r24, Y+9	; 0x09
    13f6:	9a 85       	ldd	r25, Y+10	; 0x0a
    13f8:	ab 85       	ldd	r26, Y+11	; 0x0b
    13fa:	bc 85       	ldd	r27, Y+12	; 0x0c
    13fc:	01 97       	sbiw	r24, 0x01	; 1
    13fe:	a1 09       	sbc	r26, r1
    1400:	b1 09       	sbc	r27, r1
    1402:	89 87       	std	Y+9, r24	; 0x09
    1404:	9a 87       	std	Y+10, r25	; 0x0a
    1406:	ab 87       	std	Y+11, r26	; 0x0b
    1408:	bc 87       	std	Y+12, r27	; 0x0c
    140a:	89 85       	ldd	r24, Y+9	; 0x09
    140c:	9a 85       	ldd	r25, Y+10	; 0x0a
    140e:	ab 85       	ldd	r26, Y+11	; 0x0b
    1410:	bc 85       	ldd	r27, Y+12	; 0x0c
    1412:	00 97       	sbiw	r24, 0x00	; 0
    1414:	a1 05       	cpc	r26, r1
    1416:	b1 05       	cpc	r27, r1
    1418:	61 f7       	brne	.-40     	; 0x13f2 <STPR_HalfStep_Left+0x400>
    141a:	8d 85       	ldd	r24, Y+13	; 0x0d
    141c:	9e 85       	ldd	r25, Y+14	; 0x0e
    141e:	af 85       	ldd	r26, Y+15	; 0x0f
    1420:	b8 89       	ldd	r27, Y+16	; 0x10
    1422:	01 97       	sbiw	r24, 0x01	; 1
    1424:	a1 09       	sbc	r26, r1
    1426:	b1 09       	sbc	r27, r1
    1428:	8d 87       	std	Y+13, r24	; 0x0d
    142a:	9e 87       	std	Y+14, r25	; 0x0e
    142c:	af 87       	std	Y+15, r26	; 0x0f
    142e:	b8 8b       	std	Y+16, r27	; 0x10
    1430:	8d 85       	ldd	r24, Y+13	; 0x0d
    1432:	9e 85       	ldd	r25, Y+14	; 0x0e
    1434:	af 85       	ldd	r26, Y+15	; 0x0f
    1436:	b8 89       	ldd	r27, Y+16	; 0x10
    1438:	00 97       	sbiw	r24, 0x00	; 0
    143a:	a1 05       	cpc	r26, r1
    143c:	b1 05       	cpc	r27, r1
    143e:	81 f6       	brne	.-96     	; 0x13e0 <STPR_HalfStep_Left+0x3ee>
	DIO_enuWritePin(STPR_COIL_1,DIO_LOW); //deactivate coil 1,2
    1440:	89 e1       	ldi	r24, 0x19	; 25
    1442:	60 e0       	ldi	r22, 0x00	; 0
    1444:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	DIO_enuWritePin(STPR_COIL_0,DIO_LOW);
    1448:	88 e1       	ldi	r24, 0x18	; 24
    144a:	60 e0       	ldi	r22, 0x00	; 0
    144c:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	DIO_enuWritePin(STPR_COIL_0,DIO_HIGH); //activate coil 1
    1450:	88 e1       	ldi	r24, 0x18	; 24
    1452:	61 e0       	ldi	r22, 0x01	; 1
    1454:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	Delay_ms(speed);
    1458:	fe 01       	movw	r30, r28
    145a:	ef 5b       	subi	r30, 0xBF	; 191
    145c:	ff 4f       	sbci	r31, 0xFF	; 255
    145e:	80 81       	ld	r24, Z
    1460:	86 95       	lsr	r24
    1462:	86 95       	lsr	r24
    1464:	86 95       	lsr	r24
    1466:	88 2f       	mov	r24, r24
    1468:	90 e0       	ldi	r25, 0x00	; 0
    146a:	a0 e0       	ldi	r26, 0x00	; 0
    146c:	b0 e0       	ldi	r27, 0x00	; 0
    146e:	8d 83       	std	Y+5, r24	; 0x05
    1470:	9e 83       	std	Y+6, r25	; 0x06
    1472:	af 83       	std	Y+7, r26	; 0x07
    1474:	b8 87       	std	Y+8, r27	; 0x08
    1476:	28 c0       	rjmp	.+80     	; 0x14c8 <STPR_HalfStep_Left+0x4d6>
    1478:	80 ed       	ldi	r24, 0xD0	; 208
    147a:	97 e0       	ldi	r25, 0x07	; 7
    147c:	a0 e0       	ldi	r26, 0x00	; 0
    147e:	b0 e0       	ldi	r27, 0x00	; 0
    1480:	89 83       	std	Y+1, r24	; 0x01
    1482:	9a 83       	std	Y+2, r25	; 0x02
    1484:	ab 83       	std	Y+3, r26	; 0x03
    1486:	bc 83       	std	Y+4, r27	; 0x04
    1488:	0c c0       	rjmp	.+24     	; 0x14a2 <STPR_HalfStep_Left+0x4b0>
    148a:	00 00       	nop
    148c:	89 81       	ldd	r24, Y+1	; 0x01
    148e:	9a 81       	ldd	r25, Y+2	; 0x02
    1490:	ab 81       	ldd	r26, Y+3	; 0x03
    1492:	bc 81       	ldd	r27, Y+4	; 0x04
    1494:	01 97       	sbiw	r24, 0x01	; 1
    1496:	a1 09       	sbc	r26, r1
    1498:	b1 09       	sbc	r27, r1
    149a:	89 83       	std	Y+1, r24	; 0x01
    149c:	9a 83       	std	Y+2, r25	; 0x02
    149e:	ab 83       	std	Y+3, r26	; 0x03
    14a0:	bc 83       	std	Y+4, r27	; 0x04
    14a2:	89 81       	ldd	r24, Y+1	; 0x01
    14a4:	9a 81       	ldd	r25, Y+2	; 0x02
    14a6:	ab 81       	ldd	r26, Y+3	; 0x03
    14a8:	bc 81       	ldd	r27, Y+4	; 0x04
    14aa:	00 97       	sbiw	r24, 0x00	; 0
    14ac:	a1 05       	cpc	r26, r1
    14ae:	b1 05       	cpc	r27, r1
    14b0:	61 f7       	brne	.-40     	; 0x148a <STPR_HalfStep_Left+0x498>
    14b2:	8d 81       	ldd	r24, Y+5	; 0x05
    14b4:	9e 81       	ldd	r25, Y+6	; 0x06
    14b6:	af 81       	ldd	r26, Y+7	; 0x07
    14b8:	b8 85       	ldd	r27, Y+8	; 0x08
    14ba:	01 97       	sbiw	r24, 0x01	; 1
    14bc:	a1 09       	sbc	r26, r1
    14be:	b1 09       	sbc	r27, r1
    14c0:	8d 83       	std	Y+5, r24	; 0x05
    14c2:	9e 83       	std	Y+6, r25	; 0x06
    14c4:	af 83       	std	Y+7, r26	; 0x07
    14c6:	b8 87       	std	Y+8, r27	; 0x08
    14c8:	8d 81       	ldd	r24, Y+5	; 0x05
    14ca:	9e 81       	ldd	r25, Y+6	; 0x06
    14cc:	af 81       	ldd	r26, Y+7	; 0x07
    14ce:	b8 85       	ldd	r27, Y+8	; 0x08
    14d0:	00 97       	sbiw	r24, 0x00	; 0
    14d2:	a1 05       	cpc	r26, r1
    14d4:	b1 05       	cpc	r27, r1
    14d6:	81 f6       	brne	.-96     	; 0x1478 <STPR_HalfStep_Left+0x486>

}
    14d8:	cf 5b       	subi	r28, 0xBF	; 191
    14da:	df 4f       	sbci	r29, 0xFF	; 255
    14dc:	0f b6       	in	r0, 0x3f	; 63
    14de:	f8 94       	cli
    14e0:	de bf       	out	0x3e, r29	; 62
    14e2:	0f be       	out	0x3f, r0	; 63
    14e4:	cd bf       	out	0x3d, r28	; 61
    14e6:	cf 91       	pop	r28
    14e8:	df 91       	pop	r29
    14ea:	08 95       	ret

000014ec <STPR_Stop>:




void STPR_Stop(void)
{
    14ec:	df 93       	push	r29
    14ee:	cf 93       	push	r28
    14f0:	cd b7       	in	r28, 0x3d	; 61
    14f2:	de b7       	in	r29, 0x3e	; 62
    14f4:	28 97       	sbiw	r28, 0x08	; 8
    14f6:	0f b6       	in	r0, 0x3f	; 63
    14f8:	f8 94       	cli
    14fa:	de bf       	out	0x3e, r29	; 62
    14fc:	0f be       	out	0x3f, r0	; 63
    14fe:	cd bf       	out	0x3d, r28	; 61
	u8 allPins[4] = {STPR_COIL_0, STPR_COIL_1, STPR_COIL_2, STPR_COIL_3};
    1500:	88 e1       	ldi	r24, 0x18	; 24
    1502:	89 83       	std	Y+1, r24	; 0x01
    1504:	89 e1       	ldi	r24, 0x19	; 25
    1506:	8a 83       	std	Y+2, r24	; 0x02
    1508:	8a e1       	ldi	r24, 0x1A	; 26
    150a:	8b 83       	std	Y+3, r24	; 0x03
    150c:	8b e1       	ldi	r24, 0x1B	; 27
    150e:	8c 83       	std	Y+4, r24	; 0x04
	u8 disableAll[4] = {DIO_LOW};
    1510:	1d 82       	std	Y+5, r1	; 0x05
    1512:	1e 82       	std	Y+6, r1	; 0x06
    1514:	1f 82       	std	Y+7, r1	; 0x07
    1516:	18 86       	std	Y+8, r1	; 0x08
	DIO_enuWriteGroup(allPins, disableAll, 4); //disable all coils
    1518:	9e 01       	movw	r18, r28
    151a:	2b 5f       	subi	r18, 0xFB	; 251
    151c:	3f 4f       	sbci	r19, 0xFF	; 255
    151e:	ce 01       	movw	r24, r28
    1520:	01 96       	adiw	r24, 0x01	; 1
    1522:	b9 01       	movw	r22, r18
    1524:	44 e0       	ldi	r20, 0x04	; 4
    1526:	0e 94 79 02 	call	0x4f2	; 0x4f2 <DIO_enuWriteGroup>

}
    152a:	28 96       	adiw	r28, 0x08	; 8
    152c:	0f b6       	in	r0, 0x3f	; 63
    152e:	f8 94       	cli
    1530:	de bf       	out	0x3e, r29	; 62
    1532:	0f be       	out	0x3f, r0	; 63
    1534:	cd bf       	out	0x3d, r28	; 61
    1536:	cf 91       	pop	r28
    1538:	df 91       	pop	r29
    153a:	08 95       	ret

0000153c <Sev_Display>:
#include "SEV_cfg.h"
#include "SEV_priv.h"



tenuErrorStatus Sev_Display(u8 u8sevIndex, u8 u8num){
    153c:	df 93       	push	r29
    153e:	cf 93       	push	r28
    1540:	cd b7       	in	r28, 0x3d	; 61
    1542:	de b7       	in	r29, 0x3e	; 62
    1544:	62 97       	sbiw	r28, 0x12	; 18
    1546:	0f b6       	in	r0, 0x3f	; 63
    1548:	f8 94       	cli
    154a:	de bf       	out	0x3e, r29	; 62
    154c:	0f be       	out	0x3f, r0	; 63
    154e:	cd bf       	out	0x3d, r28	; 61
    1550:	8c 87       	std	Y+12, r24	; 0x0c
    1552:	6d 87       	std	Y+13, r22	; 0x0d
    tenuErrorStatus enuReturnLoc = EOK;
    1554:	19 82       	std	Y+1, r1	; 0x01
    u8 au8Cathode[10] = {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F};
    1556:	ce 01       	movw	r24, r28
    1558:	02 96       	adiw	r24, 0x02	; 2
    155a:	9f 87       	std	Y+15, r25	; 0x0f
    155c:	8e 87       	std	Y+14, r24	; 0x0e
    155e:	e2 e7       	ldi	r30, 0x72	; 114
    1560:	f0 e0       	ldi	r31, 0x00	; 0
    1562:	f9 8b       	std	Y+17, r31	; 0x11
    1564:	e8 8b       	std	Y+16, r30	; 0x10
    1566:	fa e0       	ldi	r31, 0x0A	; 10
    1568:	fa 8b       	std	Y+18, r31	; 0x12
    156a:	e8 89       	ldd	r30, Y+16	; 0x10
    156c:	f9 89       	ldd	r31, Y+17	; 0x11
    156e:	00 80       	ld	r0, Z
    1570:	88 89       	ldd	r24, Y+16	; 0x10
    1572:	99 89       	ldd	r25, Y+17	; 0x11
    1574:	01 96       	adiw	r24, 0x01	; 1
    1576:	99 8b       	std	Y+17, r25	; 0x11
    1578:	88 8b       	std	Y+16, r24	; 0x10
    157a:	ee 85       	ldd	r30, Y+14	; 0x0e
    157c:	ff 85       	ldd	r31, Y+15	; 0x0f
    157e:	00 82       	st	Z, r0
    1580:	8e 85       	ldd	r24, Y+14	; 0x0e
    1582:	9f 85       	ldd	r25, Y+15	; 0x0f
    1584:	01 96       	adiw	r24, 0x01	; 1
    1586:	9f 87       	std	Y+15, r25	; 0x0f
    1588:	8e 87       	std	Y+14, r24	; 0x0e
    158a:	9a 89       	ldd	r25, Y+18	; 0x12
    158c:	91 50       	subi	r25, 0x01	; 1
    158e:	9a 8b       	std	Y+18, r25	; 0x12
    1590:	ea 89       	ldd	r30, Y+18	; 0x12
    1592:	ee 23       	and	r30, r30
    1594:	51 f7       	brne	.-44     	; 0x156a <Sev_Display+0x2e>
    if(u8sevIndex < MAX_SEV_SEGMENT){
    1596:	8c 85       	ldd	r24, Y+12	; 0x0c
    1598:	82 30       	cpi	r24, 0x02	; 2
    159a:	98 f5       	brcc	.+102    	; 0x1602 <Sev_Display+0xc6>
        if(u8num < 10){
    159c:	8d 85       	ldd	r24, Y+13	; 0x0d
    159e:	8a 30       	cpi	r24, 0x0A	; 10
    15a0:	90 f5       	brcc	.+100    	; 0x1606 <Sev_Display+0xca>
            if(SEV_ConfigSet[u8sevIndex].common_mode == Common_Cathode){
    15a2:	8c 85       	ldd	r24, Y+12	; 0x0c
    15a4:	28 2f       	mov	r18, r24
    15a6:	30 e0       	ldi	r19, 0x00	; 0
    15a8:	c9 01       	movw	r24, r18
    15aa:	88 0f       	add	r24, r24
    15ac:	99 1f       	adc	r25, r25
    15ae:	88 0f       	add	r24, r24
    15b0:	99 1f       	adc	r25, r25
    15b2:	88 0f       	add	r24, r24
    15b4:	99 1f       	adc	r25, r25
    15b6:	82 0f       	add	r24, r18
    15b8:	93 1f       	adc	r25, r19
    15ba:	fc 01       	movw	r30, r24
    15bc:	e8 59       	subi	r30, 0x98	; 152
    15be:	ff 4f       	sbci	r31, 0xFF	; 255
    15c0:	80 81       	ld	r24, Z
    15c2:	88 23       	and	r24, r24
    15c4:	71 f4       	brne	.+28     	; 0x15e2 <Sev_Display+0xa6>
            	PutOnBus(u8sevIndex, au8Cathode[u8num]);
    15c6:	8d 85       	ldd	r24, Y+13	; 0x0d
    15c8:	28 2f       	mov	r18, r24
    15ca:	30 e0       	ldi	r19, 0x00	; 0
    15cc:	ce 01       	movw	r24, r28
    15ce:	02 96       	adiw	r24, 0x02	; 2
    15d0:	fc 01       	movw	r30, r24
    15d2:	e2 0f       	add	r30, r18
    15d4:	f3 1f       	adc	r31, r19
    15d6:	90 81       	ld	r25, Z
    15d8:	8c 85       	ldd	r24, Y+12	; 0x0c
    15da:	69 2f       	mov	r22, r25
    15dc:	0e 94 0d 0b 	call	0x161a	; 0x161a <PutOnBus>
    15e0:	12 c0       	rjmp	.+36     	; 0x1606 <Sev_Display+0xca>
            }
            else{
            	PutOnBus(u8sevIndex, ~au8Cathode[u8num]);
    15e2:	8d 85       	ldd	r24, Y+13	; 0x0d
    15e4:	28 2f       	mov	r18, r24
    15e6:	30 e0       	ldi	r19, 0x00	; 0
    15e8:	ce 01       	movw	r24, r28
    15ea:	02 96       	adiw	r24, 0x02	; 2
    15ec:	fc 01       	movw	r30, r24
    15ee:	e2 0f       	add	r30, r18
    15f0:	f3 1f       	adc	r31, r19
    15f2:	80 81       	ld	r24, Z
    15f4:	98 2f       	mov	r25, r24
    15f6:	90 95       	com	r25
    15f8:	8c 85       	ldd	r24, Y+12	; 0x0c
    15fa:	69 2f       	mov	r22, r25
    15fc:	0e 94 0d 0b 	call	0x161a	; 0x161a <PutOnBus>
    1600:	02 c0       	rjmp	.+4      	; 0x1606 <Sev_Display+0xca>
            }
        }
    }else{
        enuReturnLoc = PARAM_OUT_RANGE;
    1602:	81 e0       	ldi	r24, 0x01	; 1
    1604:	89 83       	std	Y+1, r24	; 0x01
    }
    return enuReturnLoc;
    1606:	89 81       	ldd	r24, Y+1	; 0x01
}
    1608:	62 96       	adiw	r28, 0x12	; 18
    160a:	0f b6       	in	r0, 0x3f	; 63
    160c:	f8 94       	cli
    160e:	de bf       	out	0x3e, r29	; 62
    1610:	0f be       	out	0x3f, r0	; 63
    1612:	cd bf       	out	0x3d, r28	; 61
    1614:	cf 91       	pop	r28
    1616:	df 91       	pop	r29
    1618:	08 95       	ret

0000161a <PutOnBus>:

static void PutOnBus(u8 u8sevIndex, u8 u8num){
    161a:	df 93       	push	r29
    161c:	cf 93       	push	r28
    161e:	cd b7       	in	r28, 0x3d	; 61
    1620:	de b7       	in	r29, 0x3e	; 62
    1622:	2a 97       	sbiw	r28, 0x0a	; 10
    1624:	0f b6       	in	r0, 0x3f	; 63
    1626:	f8 94       	cli
    1628:	de bf       	out	0x3e, r29	; 62
    162a:	0f be       	out	0x3f, r0	; 63
    162c:	cd bf       	out	0x3d, r28	; 61
    162e:	89 87       	std	Y+9, r24	; 0x09
    1630:	6a 87       	std	Y+10, r22	; 0x0a
    u8 u8Num[7]; //0x0011 1111
	u8 cntr;
	for(cntr = 0; cntr < 7; cntr++){
    1632:	19 82       	std	Y+1, r1	; 0x01
    1634:	1b c0       	rjmp	.+54     	; 0x166c <PutOnBus+0x52>
		u8Num[cntr] = GET_BIT(u8num, cntr);
    1636:	89 81       	ldd	r24, Y+1	; 0x01
    1638:	48 2f       	mov	r20, r24
    163a:	50 e0       	ldi	r21, 0x00	; 0
    163c:	8a 85       	ldd	r24, Y+10	; 0x0a
    163e:	28 2f       	mov	r18, r24
    1640:	30 e0       	ldi	r19, 0x00	; 0
    1642:	89 81       	ldd	r24, Y+1	; 0x01
    1644:	88 2f       	mov	r24, r24
    1646:	90 e0       	ldi	r25, 0x00	; 0
    1648:	b9 01       	movw	r22, r18
    164a:	02 c0       	rjmp	.+4      	; 0x1650 <PutOnBus+0x36>
    164c:	75 95       	asr	r23
    164e:	67 95       	ror	r22
    1650:	8a 95       	dec	r24
    1652:	e2 f7       	brpl	.-8      	; 0x164c <PutOnBus+0x32>
    1654:	cb 01       	movw	r24, r22
    1656:	28 2f       	mov	r18, r24
    1658:	21 70       	andi	r18, 0x01	; 1
    165a:	ce 01       	movw	r24, r28
    165c:	02 96       	adiw	r24, 0x02	; 2
    165e:	fc 01       	movw	r30, r24
    1660:	e4 0f       	add	r30, r20
    1662:	f5 1f       	adc	r31, r21
    1664:	20 83       	st	Z, r18
}

static void PutOnBus(u8 u8sevIndex, u8 u8num){
    u8 u8Num[7]; //0x0011 1111
	u8 cntr;
	for(cntr = 0; cntr < 7; cntr++){
    1666:	89 81       	ldd	r24, Y+1	; 0x01
    1668:	8f 5f       	subi	r24, 0xFF	; 255
    166a:	89 83       	std	Y+1, r24	; 0x01
    166c:	89 81       	ldd	r24, Y+1	; 0x01
    166e:	87 30       	cpi	r24, 0x07	; 7
    1670:	10 f3       	brcs	.-60     	; 0x1636 <PutOnBus+0x1c>
		u8Num[cntr] = GET_BIT(u8num, cntr);
	}
    DIO_enuWriteGroup(SEV_ConfigSet[u8sevIndex].Au8Pin, u8Num, 7 );
    1672:	89 85       	ldd	r24, Y+9	; 0x09
    1674:	28 2f       	mov	r18, r24
    1676:	30 e0       	ldi	r19, 0x00	; 0
    1678:	c9 01       	movw	r24, r18
    167a:	88 0f       	add	r24, r24
    167c:	99 1f       	adc	r25, r25
    167e:	88 0f       	add	r24, r24
    1680:	99 1f       	adc	r25, r25
    1682:	88 0f       	add	r24, r24
    1684:	99 1f       	adc	r25, r25
    1686:	82 0f       	add	r24, r18
    1688:	93 1f       	adc	r25, r19
    168a:	80 5a       	subi	r24, 0xA0	; 160
    168c:	9f 4f       	sbci	r25, 0xFF	; 255
    168e:	9e 01       	movw	r18, r28
    1690:	2e 5f       	subi	r18, 0xFE	; 254
    1692:	3f 4f       	sbci	r19, 0xFF	; 255
    1694:	b9 01       	movw	r22, r18
    1696:	47 e0       	ldi	r20, 0x07	; 7
    1698:	0e 94 79 02 	call	0x4f2	; 0x4f2 <DIO_enuWriteGroup>
}
    169c:	2a 96       	adiw	r28, 0x0a	; 10
    169e:	0f b6       	in	r0, 0x3f	; 63
    16a0:	f8 94       	cli
    16a2:	de bf       	out	0x3e, r29	; 62
    16a4:	0f be       	out	0x3f, r0	; 63
    16a6:	cd bf       	out	0x3d, r28	; 61
    16a8:	cf 91       	pop	r28
    16aa:	df 91       	pop	r29
    16ac:	08 95       	ret

000016ae <Sev_PowerOn>:

tenuErrorStatus Sev_PowerOn(u8 u8sevIndex){
    16ae:	df 93       	push	r29
    16b0:	cf 93       	push	r28
    16b2:	00 d0       	rcall	.+0      	; 0x16b4 <Sev_PowerOn+0x6>
    16b4:	cd b7       	in	r28, 0x3d	; 61
    16b6:	de b7       	in	r29, 0x3e	; 62
    16b8:	8a 83       	std	Y+2, r24	; 0x02
    tenuErrorStatus enuReturnLoc = EOK;
    16ba:	19 82       	std	Y+1, r1	; 0x01
    
    if(u8sevIndex < MAX_SEV_SEGMENT){
    16bc:	8a 81       	ldd	r24, Y+2	; 0x02
    16be:	82 30       	cpi	r24, 0x02	; 2
    16c0:	e0 f5       	brcc	.+120    	; 0x173a <Sev_PowerOn+0x8c>
        if(SEV_ConfigSet[u8sevIndex].common_mode == Common_Cathode){
    16c2:	8a 81       	ldd	r24, Y+2	; 0x02
    16c4:	28 2f       	mov	r18, r24
    16c6:	30 e0       	ldi	r19, 0x00	; 0
    16c8:	c9 01       	movw	r24, r18
    16ca:	88 0f       	add	r24, r24
    16cc:	99 1f       	adc	r25, r25
    16ce:	88 0f       	add	r24, r24
    16d0:	99 1f       	adc	r25, r25
    16d2:	88 0f       	add	r24, r24
    16d4:	99 1f       	adc	r25, r25
    16d6:	82 0f       	add	r24, r18
    16d8:	93 1f       	adc	r25, r19
    16da:	fc 01       	movw	r30, r24
    16dc:	e8 59       	subi	r30, 0x98	; 152
    16de:	ff 4f       	sbci	r31, 0xFF	; 255
    16e0:	80 81       	ld	r24, Z
    16e2:	88 23       	and	r24, r24
    16e4:	a9 f4       	brne	.+42     	; 0x1710 <Sev_PowerOn+0x62>
            enuReturnLoc = DIO_enuWritePin(SEV_ConfigSet[u8sevIndex].common, Common_Cathode);
    16e6:	8a 81       	ldd	r24, Y+2	; 0x02
    16e8:	28 2f       	mov	r18, r24
    16ea:	30 e0       	ldi	r19, 0x00	; 0
    16ec:	c9 01       	movw	r24, r18
    16ee:	88 0f       	add	r24, r24
    16f0:	99 1f       	adc	r25, r25
    16f2:	88 0f       	add	r24, r24
    16f4:	99 1f       	adc	r25, r25
    16f6:	88 0f       	add	r24, r24
    16f8:	99 1f       	adc	r25, r25
    16fa:	82 0f       	add	r24, r18
    16fc:	93 1f       	adc	r25, r19
    16fe:	fc 01       	movw	r30, r24
    1700:	e9 59       	subi	r30, 0x99	; 153
    1702:	ff 4f       	sbci	r31, 0xFF	; 255
    1704:	80 81       	ld	r24, Z
    1706:	60 e0       	ldi	r22, 0x00	; 0
    1708:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
    170c:	89 83       	std	Y+1, r24	; 0x01
    170e:	17 c0       	rjmp	.+46     	; 0x173e <Sev_PowerOn+0x90>
        }else{
        	 enuReturnLoc = DIO_enuWritePin(SEV_ConfigSet[u8sevIndex].common, Common_Anode);
    1710:	8a 81       	ldd	r24, Y+2	; 0x02
    1712:	28 2f       	mov	r18, r24
    1714:	30 e0       	ldi	r19, 0x00	; 0
    1716:	c9 01       	movw	r24, r18
    1718:	88 0f       	add	r24, r24
    171a:	99 1f       	adc	r25, r25
    171c:	88 0f       	add	r24, r24
    171e:	99 1f       	adc	r25, r25
    1720:	88 0f       	add	r24, r24
    1722:	99 1f       	adc	r25, r25
    1724:	82 0f       	add	r24, r18
    1726:	93 1f       	adc	r25, r19
    1728:	fc 01       	movw	r30, r24
    172a:	e9 59       	subi	r30, 0x99	; 153
    172c:	ff 4f       	sbci	r31, 0xFF	; 255
    172e:	80 81       	ld	r24, Z
    1730:	61 e0       	ldi	r22, 0x01	; 1
    1732:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
    1736:	89 83       	std	Y+1, r24	; 0x01
    1738:	02 c0       	rjmp	.+4      	; 0x173e <Sev_PowerOn+0x90>
        }
       
    }else{
        enuReturnLoc = PARAM_OUT_RANGE;
    173a:	81 e0       	ldi	r24, 0x01	; 1
    173c:	89 83       	std	Y+1, r24	; 0x01
    }
    return enuReturnLoc;
    173e:	89 81       	ldd	r24, Y+1	; 0x01
}
    1740:	0f 90       	pop	r0
    1742:	0f 90       	pop	r0
    1744:	cf 91       	pop	r28
    1746:	df 91       	pop	r29
    1748:	08 95       	ret

0000174a <Sev_PowerOff>:

tenuErrorStatus Sev_PowerOff(u8 u8sevIndex){
    174a:	df 93       	push	r29
    174c:	cf 93       	push	r28
    174e:	00 d0       	rcall	.+0      	; 0x1750 <Sev_PowerOff+0x6>
    1750:	cd b7       	in	r28, 0x3d	; 61
    1752:	de b7       	in	r29, 0x3e	; 62
    1754:	8a 83       	std	Y+2, r24	; 0x02
    tenuErrorStatus enuReturnLoc = EOK;
    1756:	19 82       	std	Y+1, r1	; 0x01
    
    if(u8sevIndex < MAX_SEV_SEGMENT){
    1758:	8a 81       	ldd	r24, Y+2	; 0x02
    175a:	82 30       	cpi	r24, 0x02	; 2
    175c:	e0 f5       	brcc	.+120    	; 0x17d6 <Sev_PowerOff+0x8c>
        if(SEV_ConfigSet[u8sevIndex].common_mode == Common_Cathode){
    175e:	8a 81       	ldd	r24, Y+2	; 0x02
    1760:	28 2f       	mov	r18, r24
    1762:	30 e0       	ldi	r19, 0x00	; 0
    1764:	c9 01       	movw	r24, r18
    1766:	88 0f       	add	r24, r24
    1768:	99 1f       	adc	r25, r25
    176a:	88 0f       	add	r24, r24
    176c:	99 1f       	adc	r25, r25
    176e:	88 0f       	add	r24, r24
    1770:	99 1f       	adc	r25, r25
    1772:	82 0f       	add	r24, r18
    1774:	93 1f       	adc	r25, r19
    1776:	fc 01       	movw	r30, r24
    1778:	e8 59       	subi	r30, 0x98	; 152
    177a:	ff 4f       	sbci	r31, 0xFF	; 255
    177c:	80 81       	ld	r24, Z
    177e:	88 23       	and	r24, r24
    1780:	a9 f4       	brne	.+42     	; 0x17ac <Sev_PowerOff+0x62>
        	 enuReturnLoc = DIO_enuWritePin(SEV_ConfigSet[u8sevIndex].common, Common_Anode);
    1782:	8a 81       	ldd	r24, Y+2	; 0x02
    1784:	28 2f       	mov	r18, r24
    1786:	30 e0       	ldi	r19, 0x00	; 0
    1788:	c9 01       	movw	r24, r18
    178a:	88 0f       	add	r24, r24
    178c:	99 1f       	adc	r25, r25
    178e:	88 0f       	add	r24, r24
    1790:	99 1f       	adc	r25, r25
    1792:	88 0f       	add	r24, r24
    1794:	99 1f       	adc	r25, r25
    1796:	82 0f       	add	r24, r18
    1798:	93 1f       	adc	r25, r19
    179a:	fc 01       	movw	r30, r24
    179c:	e9 59       	subi	r30, 0x99	; 153
    179e:	ff 4f       	sbci	r31, 0xFF	; 255
    17a0:	80 81       	ld	r24, Z
    17a2:	61 e0       	ldi	r22, 0x01	; 1
    17a4:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
    17a8:	89 83       	std	Y+1, r24	; 0x01
    17aa:	17 c0       	rjmp	.+46     	; 0x17da <Sev_PowerOff+0x90>
        }else{
        	 enuReturnLoc = DIO_enuWritePin(SEV_ConfigSet[u8sevIndex].common, Common_Cathode);
    17ac:	8a 81       	ldd	r24, Y+2	; 0x02
    17ae:	28 2f       	mov	r18, r24
    17b0:	30 e0       	ldi	r19, 0x00	; 0
    17b2:	c9 01       	movw	r24, r18
    17b4:	88 0f       	add	r24, r24
    17b6:	99 1f       	adc	r25, r25
    17b8:	88 0f       	add	r24, r24
    17ba:	99 1f       	adc	r25, r25
    17bc:	88 0f       	add	r24, r24
    17be:	99 1f       	adc	r25, r25
    17c0:	82 0f       	add	r24, r18
    17c2:	93 1f       	adc	r25, r19
    17c4:	fc 01       	movw	r30, r24
    17c6:	e9 59       	subi	r30, 0x99	; 153
    17c8:	ff 4f       	sbci	r31, 0xFF	; 255
    17ca:	80 81       	ld	r24, Z
    17cc:	60 e0       	ldi	r22, 0x00	; 0
    17ce:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
    17d2:	89 83       	std	Y+1, r24	; 0x01
    17d4:	02 c0       	rjmp	.+4      	; 0x17da <Sev_PowerOff+0x90>
        }
       
    }else{
        enuReturnLoc = PARAM_OUT_RANGE;
    17d6:	81 e0       	ldi	r24, 0x01	; 1
    17d8:	89 83       	std	Y+1, r24	; 0x01
    }
    return enuReturnLoc;
    17da:	89 81       	ldd	r24, Y+1	; 0x01
}
    17dc:	0f 90       	pop	r0
    17de:	0f 90       	pop	r0
    17e0:	cf 91       	pop	r28
    17e2:	df 91       	pop	r29
    17e4:	08 95       	ret

000017e6 <RunCountdown>:

#include "../MCAL/DIO/DIO.h"
#include "../HAL/SEVEN_SEGMENT/SEV.h"
#include "../LIBS/delay.h"
void RunCountdown(){
    17e6:	df 93       	push	r29
    17e8:	cf 93       	push	r28
    17ea:	cd b7       	in	r28, 0x3d	; 61
    17ec:	de b7       	in	r29, 0x3e	; 62
    17ee:	64 97       	sbiw	r28, 0x14	; 20
    17f0:	0f b6       	in	r0, 0x3f	; 63
    17f2:	f8 94       	cli
    17f4:	de bf       	out	0x3e, r29	; 62
    17f6:	0f be       	out	0x3f, r0	; 63
    17f8:	cd bf       	out	0x3d, r28	; 61
    Sev_Display(1, 3);
    17fa:	81 e0       	ldi	r24, 0x01	; 1
    17fc:	63 e0       	ldi	r22, 0x03	; 3
    17fe:	0e 94 9e 0a 	call	0x153c	; 0x153c <Sev_Display>
    Sev_Display(0, 0);
    1802:	80 e0       	ldi	r24, 0x00	; 0
    1804:	60 e0       	ldi	r22, 0x00	; 0
    1806:	0e 94 9e 0a 	call	0x153c	; 0x153c <Sev_Display>
    Delay_ms(1000);
    180a:	8d e7       	ldi	r24, 0x7D	; 125
    180c:	90 e0       	ldi	r25, 0x00	; 0
    180e:	a0 e0       	ldi	r26, 0x00	; 0
    1810:	b0 e0       	ldi	r27, 0x00	; 0
    1812:	89 8b       	std	Y+17, r24	; 0x11
    1814:	9a 8b       	std	Y+18, r25	; 0x12
    1816:	ab 8b       	std	Y+19, r26	; 0x13
    1818:	bc 8b       	std	Y+20, r27	; 0x14
    181a:	28 c0       	rjmp	.+80     	; 0x186c <RunCountdown+0x86>
    181c:	80 ed       	ldi	r24, 0xD0	; 208
    181e:	97 e0       	ldi	r25, 0x07	; 7
    1820:	a0 e0       	ldi	r26, 0x00	; 0
    1822:	b0 e0       	ldi	r27, 0x00	; 0
    1824:	8d 87       	std	Y+13, r24	; 0x0d
    1826:	9e 87       	std	Y+14, r25	; 0x0e
    1828:	af 87       	std	Y+15, r26	; 0x0f
    182a:	b8 8b       	std	Y+16, r27	; 0x10
    182c:	0c c0       	rjmp	.+24     	; 0x1846 <RunCountdown+0x60>
    182e:	00 00       	nop
    1830:	8d 85       	ldd	r24, Y+13	; 0x0d
    1832:	9e 85       	ldd	r25, Y+14	; 0x0e
    1834:	af 85       	ldd	r26, Y+15	; 0x0f
    1836:	b8 89       	ldd	r27, Y+16	; 0x10
    1838:	01 97       	sbiw	r24, 0x01	; 1
    183a:	a1 09       	sbc	r26, r1
    183c:	b1 09       	sbc	r27, r1
    183e:	8d 87       	std	Y+13, r24	; 0x0d
    1840:	9e 87       	std	Y+14, r25	; 0x0e
    1842:	af 87       	std	Y+15, r26	; 0x0f
    1844:	b8 8b       	std	Y+16, r27	; 0x10
    1846:	8d 85       	ldd	r24, Y+13	; 0x0d
    1848:	9e 85       	ldd	r25, Y+14	; 0x0e
    184a:	af 85       	ldd	r26, Y+15	; 0x0f
    184c:	b8 89       	ldd	r27, Y+16	; 0x10
    184e:	00 97       	sbiw	r24, 0x00	; 0
    1850:	a1 05       	cpc	r26, r1
    1852:	b1 05       	cpc	r27, r1
    1854:	61 f7       	brne	.-40     	; 0x182e <RunCountdown+0x48>
    1856:	89 89       	ldd	r24, Y+17	; 0x11
    1858:	9a 89       	ldd	r25, Y+18	; 0x12
    185a:	ab 89       	ldd	r26, Y+19	; 0x13
    185c:	bc 89       	ldd	r27, Y+20	; 0x14
    185e:	01 97       	sbiw	r24, 0x01	; 1
    1860:	a1 09       	sbc	r26, r1
    1862:	b1 09       	sbc	r27, r1
    1864:	89 8b       	std	Y+17, r24	; 0x11
    1866:	9a 8b       	std	Y+18, r25	; 0x12
    1868:	ab 8b       	std	Y+19, r26	; 0x13
    186a:	bc 8b       	std	Y+20, r27	; 0x14
    186c:	89 89       	ldd	r24, Y+17	; 0x11
    186e:	9a 89       	ldd	r25, Y+18	; 0x12
    1870:	ab 89       	ldd	r26, Y+19	; 0x13
    1872:	bc 89       	ldd	r27, Y+20	; 0x14
    1874:	00 97       	sbiw	r24, 0x00	; 0
    1876:	a1 05       	cpc	r26, r1
    1878:	b1 05       	cpc	r27, r1
    187a:	81 f6       	brne	.-96     	; 0x181c <RunCountdown+0x36>
    for (int i = 2; i >= 0; i--) {
    187c:	82 e0       	ldi	r24, 0x02	; 2
    187e:	90 e0       	ldi	r25, 0x00	; 0
    1880:	9c 87       	std	Y+12, r25	; 0x0c
    1882:	8b 87       	std	Y+11, r24	; 0x0b
    1884:	57 c0       	rjmp	.+174    	; 0x1934 <RunCountdown+0x14e>
        Sev_Display(1, i);
    1886:	9b 85       	ldd	r25, Y+11	; 0x0b
    1888:	81 e0       	ldi	r24, 0x01	; 1
    188a:	69 2f       	mov	r22, r25
    188c:	0e 94 9e 0a 	call	0x153c	; 0x153c <Sev_Display>
        for (int j = 9; j >= 0; j--){
    1890:	89 e0       	ldi	r24, 0x09	; 9
    1892:	90 e0       	ldi	r25, 0x00	; 0
    1894:	9a 87       	std	Y+10, r25	; 0x0a
    1896:	89 87       	std	Y+9, r24	; 0x09
    1898:	43 c0       	rjmp	.+134    	; 0x1920 <RunCountdown+0x13a>
        	 Sev_Display(0, j);
    189a:	99 85       	ldd	r25, Y+9	; 0x09
    189c:	80 e0       	ldi	r24, 0x00	; 0
    189e:	69 2f       	mov	r22, r25
    18a0:	0e 94 9e 0a 	call	0x153c	; 0x153c <Sev_Display>
        	 Delay_ms(1000);
    18a4:	8d e7       	ldi	r24, 0x7D	; 125
    18a6:	90 e0       	ldi	r25, 0x00	; 0
    18a8:	a0 e0       	ldi	r26, 0x00	; 0
    18aa:	b0 e0       	ldi	r27, 0x00	; 0
    18ac:	8d 83       	std	Y+5, r24	; 0x05
    18ae:	9e 83       	std	Y+6, r25	; 0x06
    18b0:	af 83       	std	Y+7, r26	; 0x07
    18b2:	b8 87       	std	Y+8, r27	; 0x08
    18b4:	28 c0       	rjmp	.+80     	; 0x1906 <RunCountdown+0x120>
    18b6:	80 ed       	ldi	r24, 0xD0	; 208
    18b8:	97 e0       	ldi	r25, 0x07	; 7
    18ba:	a0 e0       	ldi	r26, 0x00	; 0
    18bc:	b0 e0       	ldi	r27, 0x00	; 0
    18be:	89 83       	std	Y+1, r24	; 0x01
    18c0:	9a 83       	std	Y+2, r25	; 0x02
    18c2:	ab 83       	std	Y+3, r26	; 0x03
    18c4:	bc 83       	std	Y+4, r27	; 0x04
    18c6:	0c c0       	rjmp	.+24     	; 0x18e0 <RunCountdown+0xfa>
    18c8:	00 00       	nop
    18ca:	89 81       	ldd	r24, Y+1	; 0x01
    18cc:	9a 81       	ldd	r25, Y+2	; 0x02
    18ce:	ab 81       	ldd	r26, Y+3	; 0x03
    18d0:	bc 81       	ldd	r27, Y+4	; 0x04
    18d2:	01 97       	sbiw	r24, 0x01	; 1
    18d4:	a1 09       	sbc	r26, r1
    18d6:	b1 09       	sbc	r27, r1
    18d8:	89 83       	std	Y+1, r24	; 0x01
    18da:	9a 83       	std	Y+2, r25	; 0x02
    18dc:	ab 83       	std	Y+3, r26	; 0x03
    18de:	bc 83       	std	Y+4, r27	; 0x04
    18e0:	89 81       	ldd	r24, Y+1	; 0x01
    18e2:	9a 81       	ldd	r25, Y+2	; 0x02
    18e4:	ab 81       	ldd	r26, Y+3	; 0x03
    18e6:	bc 81       	ldd	r27, Y+4	; 0x04
    18e8:	00 97       	sbiw	r24, 0x00	; 0
    18ea:	a1 05       	cpc	r26, r1
    18ec:	b1 05       	cpc	r27, r1
    18ee:	61 f7       	brne	.-40     	; 0x18c8 <RunCountdown+0xe2>
    18f0:	8d 81       	ldd	r24, Y+5	; 0x05
    18f2:	9e 81       	ldd	r25, Y+6	; 0x06
    18f4:	af 81       	ldd	r26, Y+7	; 0x07
    18f6:	b8 85       	ldd	r27, Y+8	; 0x08
    18f8:	01 97       	sbiw	r24, 0x01	; 1
    18fa:	a1 09       	sbc	r26, r1
    18fc:	b1 09       	sbc	r27, r1
    18fe:	8d 83       	std	Y+5, r24	; 0x05
    1900:	9e 83       	std	Y+6, r25	; 0x06
    1902:	af 83       	std	Y+7, r26	; 0x07
    1904:	b8 87       	std	Y+8, r27	; 0x08
    1906:	8d 81       	ldd	r24, Y+5	; 0x05
    1908:	9e 81       	ldd	r25, Y+6	; 0x06
    190a:	af 81       	ldd	r26, Y+7	; 0x07
    190c:	b8 85       	ldd	r27, Y+8	; 0x08
    190e:	00 97       	sbiw	r24, 0x00	; 0
    1910:	a1 05       	cpc	r26, r1
    1912:	b1 05       	cpc	r27, r1
    1914:	81 f6       	brne	.-96     	; 0x18b6 <RunCountdown+0xd0>
    Sev_Display(1, 3);
    Sev_Display(0, 0);
    Delay_ms(1000);
    for (int i = 2; i >= 0; i--) {
        Sev_Display(1, i);
        for (int j = 9; j >= 0; j--){
    1916:	89 85       	ldd	r24, Y+9	; 0x09
    1918:	9a 85       	ldd	r25, Y+10	; 0x0a
    191a:	01 97       	sbiw	r24, 0x01	; 1
    191c:	9a 87       	std	Y+10, r25	; 0x0a
    191e:	89 87       	std	Y+9, r24	; 0x09
    1920:	89 85       	ldd	r24, Y+9	; 0x09
    1922:	9a 85       	ldd	r25, Y+10	; 0x0a
    1924:	99 23       	and	r25, r25
    1926:	0c f0       	brlt	.+2      	; 0x192a <RunCountdown+0x144>
    1928:	b8 cf       	rjmp	.-144    	; 0x189a <RunCountdown+0xb4>
#include "../LIBS/delay.h"
void RunCountdown(){
    Sev_Display(1, 3);
    Sev_Display(0, 0);
    Delay_ms(1000);
    for (int i = 2; i >= 0; i--) {
    192a:	8b 85       	ldd	r24, Y+11	; 0x0b
    192c:	9c 85       	ldd	r25, Y+12	; 0x0c
    192e:	01 97       	sbiw	r24, 0x01	; 1
    1930:	9c 87       	std	Y+12, r25	; 0x0c
    1932:	8b 87       	std	Y+11, r24	; 0x0b
    1934:	8b 85       	ldd	r24, Y+11	; 0x0b
    1936:	9c 85       	ldd	r25, Y+12	; 0x0c
    1938:	99 23       	and	r25, r25
    193a:	0c f0       	brlt	.+2      	; 0x193e <RunCountdown+0x158>
    193c:	a4 cf       	rjmp	.-184    	; 0x1886 <RunCountdown+0xa0>
        for (int j = 9; j >= 0; j--){
        	 Sev_Display(0, j);
        	 Delay_ms(1000);
        }
    }
}
    193e:	64 96       	adiw	r28, 0x14	; 20
    1940:	0f b6       	in	r0, 0x3f	; 63
    1942:	f8 94       	cli
    1944:	de bf       	out	0x3e, r29	; 62
    1946:	0f be       	out	0x3f, r0	; 63
    1948:	cd bf       	out	0x3d, r28	; 61
    194a:	cf 91       	pop	r28
    194c:	df 91       	pop	r29
    194e:	08 95       	ret

00001950 <main>:

int main(){
    1950:	df 93       	push	r29
    1952:	cf 93       	push	r28
    1954:	cd b7       	in	r28, 0x3d	; 61
    1956:	de b7       	in	r29, 0x3e	; 62
	 DIO_voidInit();
    1958:	0e 94 5d 00 	call	0xba	; 0xba <DIO_voidInit>
	 DIO_enuWritePin(DIO_PIN_NUM_0, DIO_LOW);
    195c:	80 e0       	ldi	r24, 0x00	; 0
    195e:	60 e0       	ldi	r22, 0x00	; 0
    1960:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	 DIO_enuWritePin(DIO_PIN_NUM_1, DIO_LOW);
    1964:	81 e0       	ldi	r24, 0x01	; 1
    1966:	60 e0       	ldi	r22, 0x00	; 0
    1968:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
	 DIO_enuWritePin(DIO_PIN_NUM_2, DIO_LOW);
    196c:	82 e0       	ldi	r24, 0x02	; 2
    196e:	60 e0       	ldi	r22, 0x00	; 0
    1970:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>

	 //segment 1
	 Sev_PowerOn(0);
    1974:	80 e0       	ldi	r24, 0x00	; 0
    1976:	0e 94 57 0b 	call	0x16ae	; 0x16ae <Sev_PowerOn>
	//segment 2
	 Sev_PowerOn(1);
    197a:	81 e0       	ldi	r24, 0x01	; 1
    197c:	0e 94 57 0b 	call	0x16ae	; 0x16ae <Sev_PowerOn>


	while (1) {
		DIO_enuWritePin(DIO_PIN_NUM_2, DIO_HIGH);
    1980:	82 e0       	ldi	r24, 0x02	; 2
    1982:	61 e0       	ldi	r22, 0x01	; 1
    1984:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
		RunCountdown(); // Segment 1 active
    1988:	0e 94 f3 0b 	call	0x17e6	; 0x17e6 <RunCountdown>
		DIO_enuWritePin(DIO_PIN_NUM_2, DIO_LOW);
    198c:	82 e0       	ldi	r24, 0x02	; 2
    198e:	60 e0       	ldi	r22, 0x00	; 0
    1990:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
		DIO_enuWritePin(DIO_PIN_NUM_1, DIO_HIGH);
    1994:	81 e0       	ldi	r24, 0x01	; 1
    1996:	61 e0       	ldi	r22, 0x01	; 1
    1998:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
		RunCountdown(); // Segment 2 active
    199c:	0e 94 f3 0b 	call	0x17e6	; 0x17e6 <RunCountdown>
		DIO_enuWritePin(DIO_PIN_NUM_1, DIO_LOW);
    19a0:	81 e0       	ldi	r24, 0x01	; 1
    19a2:	60 e0       	ldi	r22, 0x00	; 0
    19a4:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
		DIO_enuWritePin(DIO_PIN_NUM_0, DIO_HIGH);
    19a8:	80 e0       	ldi	r24, 0x00	; 0
    19aa:	61 e0       	ldi	r22, 0x01	; 1
    19ac:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
		RunCountdown(); // Segment 3 active
    19b0:	0e 94 f3 0b 	call	0x17e6	; 0x17e6 <RunCountdown>
		DIO_enuWritePin(DIO_PIN_NUM_0, DIO_LOW);
    19b4:	80 e0       	ldi	r24, 0x00	; 0
    19b6:	60 e0       	ldi	r22, 0x00	; 0
    19b8:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuWritePin>
    19bc:	e1 cf       	rjmp	.-62     	; 0x1980 <main+0x30>

000019be <__udivmodqi4>:
    19be:	99 1b       	sub	r25, r25
    19c0:	79 e0       	ldi	r23, 0x09	; 9
    19c2:	04 c0       	rjmp	.+8      	; 0x19cc <__udivmodqi4_ep>

000019c4 <__udivmodqi4_loop>:
    19c4:	99 1f       	adc	r25, r25
    19c6:	96 17       	cp	r25, r22
    19c8:	08 f0       	brcs	.+2      	; 0x19cc <__udivmodqi4_ep>
    19ca:	96 1b       	sub	r25, r22

000019cc <__udivmodqi4_ep>:
    19cc:	88 1f       	adc	r24, r24
    19ce:	7a 95       	dec	r23
    19d0:	c9 f7       	brne	.-14     	; 0x19c4 <__udivmodqi4_loop>
    19d2:	80 95       	com	r24
    19d4:	08 95       	ret

000019d6 <_exit>:
    19d6:	f8 94       	cli

000019d8 <__stop_program>:
    19d8:	ff cf       	rjmp	.-2      	; 0x19d8 <__stop_program>
